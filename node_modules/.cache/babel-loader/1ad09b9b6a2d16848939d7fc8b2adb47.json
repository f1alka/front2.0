{"ast":null,"code":"var _jsxFileName = \"/home/f1alka/front_fut/front2.0/src/pages/LoginPage.jsx\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/RegisterPage.css';\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"handleSubmit вызван\");\n    setError(null);\n    setLoading(true);\n    console.log('Отправка запроса на сервер...');\n    console.log('Данные для отправки:', {\n      username,\n      password\n    });\n    try {\n      const formData = new URLSearchParams();\n      formData.append('username', username);\n      formData.append('password', password);\n      const response = await fetch('http://sxjov5hsgh.eu.loclx.io/auth/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: formData\n      });\n      console.log(\"Ответ от сервера:\", response);\n      if (!response.ok) {\n        const errorMsg = await response.text();\n        console.log(\"Ошибка в ответе:\", errorMsg);\n        throw new Error(errorMsg || 'Ошибка авторизации');\n      }\n      const data = await response.json();\n      console.log(\"Полученные данные:\", data);\n      const token = data.access_token || data.token;\n      if (!token) {\n        throw new Error('Сервер не вернул токен');\n      }\n      localStorage.setItem('token', token);\n      navigate('/profile'); // Перенаправляем в профиль\n    } catch (err) {\n      console.error(\"Ошибка при запросе:\", err);\n      setError(err.message || 'Ошибка соединения с сервером');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"\\u0412\\u0445\\u043E\\u0434\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u0438\\u043D\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    className: \"login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, loading ? 'Загрузка...' : 'Войти')));\n};\nexport default LoginPage;\n\n/*\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/RegisterPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"handleSubmit вызван\");\n\n    setError(null);\n    setLoading(true);\n\n  \n    try {\n      console.log('Данные для отправки:', { username, password });\n\n      navigate('/profile');  \n\n    } catch (err) {\n      console.error(\"Ошибка при обработке данных:\", err);\n      setError(err.message || 'Ошибка');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <h2>Вход</h2>\n        {error && <p className=\"error\">{error}</p>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Введите логин\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Введите пароль\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n\n        <button type=\"submit\" disabled={loading} className=\"login-button\">\n          {loading ? 'Загрузка...' : 'Войти'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n*/","map":{"version":3,"names":["React","useState","useNavigate","LoginPage","username","setUsername","password","setPassword","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","console","log","formData","URLSearchParams","append","response","fetch","method","headers","body","ok","errorMsg","text","Error","data","json","token","access_token","localStorage","setItem","err","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled"],"sources":["/home/f1alka/front_fut/front2.0/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/RegisterPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"handleSubmit вызван\");\n\n    setError(null);\n    setLoading(true);\n\n    console.log('Отправка запроса на сервер...');\n    console.log('Данные для отправки:', { username, password });\n\n    try {\n      const formData = new URLSearchParams();\n      formData.append('username', username);\n      formData.append('password', password);\n\n      const response = await fetch('http://sxjov5hsgh.eu.loclx.io/auth/token', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: formData,\n      });\n\n      console.log(\"Ответ от сервера:\", response);\n\n      if (!response.ok) {\n        const errorMsg = await response.text();\n        console.log(\"Ошибка в ответе:\", errorMsg);\n        throw new Error(errorMsg || 'Ошибка авторизации');\n      }\n\n      const data = await response.json();\n      console.log(\"Полученные данные:\", data);\n\n      const token = data.access_token || data.token;\n      if (!token) {\n        throw new Error('Сервер не вернул токен');\n      }\n\n      localStorage.setItem('token', token);\n      navigate('/profile');  // Перенаправляем в профиль\n\n    } catch (err) {\n      console.error(\"Ошибка при запросе:\", err);\n      setError(err.message || 'Ошибка соединения с сервером');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <h2>Вход</h2>\n        {error && <p className=\"error\">{error}</p>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Введите логин\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Введите пароль\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n\n        <button type=\"submit\" disabled={loading} className=\"login-button\">\n          {loading ? 'Загрузка...' : 'Войти'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n/*\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/RegisterPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"handleSubmit вызван\");\n\n    setError(null);\n    setLoading(true);\n\n  \n    try {\n      console.log('Данные для отправки:', { username, password });\n\n      navigate('/profile');  \n\n    } catch (err) {\n      console.error(\"Ошибка при обработке данных:\", err);\n      setError(err.message || 'Ошибка');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <h2>Вход</h2>\n        {error && <p className=\"error\">{error}</p>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Введите логин\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Введите пароль\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n\n        <button type=\"submit\" disabled={loading} className=\"login-button\">\n          {loading ? 'Загрузка...' : 'Войти'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}