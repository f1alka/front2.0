{"ast":null,"code":"var _jsxFileName = \"/home/f1alka/front_fut/front2.0/src/pages/Profile.jsx\";\n/*\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport './css/Home.css';\nimport './css/table.css';\n\nconst Profile = () => {\n  const [profile, setProfile] = useState(null);\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [workDays, setWorkDays] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      setLoading(true);\n      setError(null);\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Нет токена авторизации');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('http://172.20.10.2:8000/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки профиля: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setProfile(data.user);\n        setWorkDays(data.work_days);\n\n        const userId = data.user.id;\n        const photoUrl = userId ? `http://172.20.10.2:8000/files/employer/${userId}/get-photo` : null;\n\n        if (photoUrl) {\n          const photoResponse = await fetch(photoUrl, {\n            method: 'GET',\n            headers: { 'Authorization': `Bearer ${token}` },\n          });\n\n          if (photoResponse.ok) {\n            const photoData = await photoResponse.json();\n            if (photoData.status === 'success' && photoData.file_url) {\n              setPhotoUrl(photoData.file_url.url);\n            }\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProfile();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"main-content\">\n        <Header title=\"Личный кабинет\" subtitle=\"Ваши данные\" />\n\n        {loading ? (\n          <p>Загрузка...</p>\n        ) : error ? (\n          <p className=\"error\">{error}</p>\n        ) : profile ? (\n          <>\n            <div className=\"profile-header\">\n              <div className=\"profile-photo\">\n                <img id=\"test-image\" src={photoUrl || ''} alt=\"Фото пользователя\" />\n              </div>\n              <div className=\"profile-info\">\n                <h1 className=\"profile-name\">{profile.fio}</h1>\n              </div>\n            </div>\n\n            <div className=\"profile-details\">\n              <div className=\"profile-job\">\n                <p>Должность: <span>{profile.work_type}</span></p>\n              </div>\n              <div className=\"personal-data\">\n                <h2>Личные данные</h2>\n                <ul>\n                  <li><strong>Email:</strong> {profile.email}</li>\n                  <li><strong>Контакты:</strong> {profile.contacts?.join(', ') || 'Нет данных'}</li>\n                  {profile.description && (\n                    <li><strong>Описание:</strong> <span style={{ fontWeight: 'bold' }}>{profile.description}</span></li>\n                  )}\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"schedule-container\" style={{ maxHeight: '400px', overflowY: 'auto' }}>\n              {workDays.length === 0 ? (\n                <div className=\"no-data\">Нет данных для отображения</div>\n              ) : (\n                <div className=\"employees-list\" style={{ display: 'block' }}>\n                  {workDays.map((workday, index) => (\n                    <div key={index} className=\"employee-card\" style={{ marginBottom: '15px' }}>\n                      <div className=\"card-content\">\n                        <h3 className=\"employee-name\">{workday.employer_fio}</h3>\n                        <p className=\"employee-date\">{new Date(workday.work_time).toLocaleDateString()}</p>\n                        <span className={`status-badge ${workday.status === 1 ? 'status-working' : 'status-absent'}`}>\n                          {workday.status === 1 ? 'Работал' : 'Отсутствовал'}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <p>Нет данных</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n*/\n\n/*\nimport React from 'react';\nimport './css/profile.css'\n\nfunction App() {\n  const employeeData = {\n    name: 'Иван Петров',\n    position: 'Старший кальянщик',\n    photo: 'https://sun9-23.userapi.com/impg/pG-hMO4mKKtBsF7p71dimlhpILr4OoSgSDQ5DA/KN_bTdlS_-Y.jpg?size=2560x1706&quality=95&sign=d424de847538d01077c9e48539ecd4d9&type=album',\n    description: 'Старший кальянщик, обладающий большим опытом работы в кальянном оборудовании. П',\n    contacts: [\n      { type: 'Email', value: 'uzbek.petrov@company.com' },\n      { type: 'Телефон', value: '+7 (999) 123-45-67' },\n      { type: 'Skype', value: 'ivan.petrov.dev' }\n    ],\n    schedule: [\n      {\n        date: '2024-03-18',\n        time: '10:00 - 11:30'\n      },\n      {\n        date: '2024-03-18',\n        time: '13:00 - 15:00'\n      },\n      {\n        date: '2024-03-18',\n        time: '16:00 - 17:30'\n      },\n      {\n        date: '2024-03-19',\n        time: '11:00 - 12:30'\n      },\n      {\n        date: '2024-03-19',\n        time: '14:00 - 16:00'\n      }\n    ]\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <img \n          src={employeeData.photo} \n          alt={employeeData.name} \n          className=\"profile-image\"\n        />\n        <div className=\"profile-info\">\n          <h1 className=\"profile-name\">{employeeData.name}</h1>\n          <h2 className=\"profile-position\">{employeeData.position}</h2>\n          \n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">О сотруднике</h3>\n            <p className=\"profile-description\">{employeeData.description}</p>\n          </div>\n\n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">Контактная информация</h3>\n            <ul className=\"profile-contacts\">\n              {employeeData.contacts.map((contact, index) => (\n                <li key={index} className=\"contact-item\">\n                  <span className=\"contact-label\">{contact.type}:</span>\n                  <span className=\"contact-value\">{contact.value}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <section className=\"schedule-section\">\n        <h2 className=\"schedule-title\">Расписание</h2>\n        <div className=\"schedule-cards\">\n          {employeeData.schedule.map((item, index) => (\n            <div key={index} className=\"schedule-card\">\n              <div className=\"card-date\">\n                {new Date(item.date).toLocaleDateString('ru-RU', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </div>\n              <div className=\"card-time\">{item.time}</div>\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App\n\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport './css/profile.css';\nfunction App() {\n  const [employeeData, setEmployeeData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Нет токена авторизации');\n        setLoading(false);\n        return;\n      }\n      try {\n        var _data$user$contacts, _data$user$contacts2;\n        const response = await fetch('http://172.20.10.2:8000/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки профиля: ${response.status}`);\n        }\n        const data = await response.json();\n        const userData = {\n          name: data.user.fio,\n          position: data.user.work_type,\n          photo: data.user.photo_url || '',\n          // URL фото пользователя\n          description: data.user.description || 'Нет описания',\n          contacts: [{\n            type: 'Email',\n            value: data.user.email\n          }, {\n            type: 'Телефон',\n            value: ((_data$user$contacts = data.user.contacts) === null || _data$user$contacts === void 0 ? void 0 : _data$user$contacts.phone) || 'Нет данных'\n          }, {\n            type: 'Skype',\n            value: ((_data$user$contacts2 = data.user.contacts) === null || _data$user$contacts2 === void 0 ? void 0 : _data$user$contacts2.skype) || 'Нет данных'\n          }],\n          schedule: data.work_days.map(workday => ({\n            date: new Date(workday.work_time).toLocaleDateString('ru-RU'),\n            time: workday.work_time.split('T')[1] || 'Нет данных'\n          }))\n        };\n        setEmployeeData(userData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployeeData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 12\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-container error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 12\n      }\n    }, error);\n  }\n  if (!employeeData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 12\n      }\n    }, \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: employeeData.photo,\n    alt: employeeData.name,\n    className: \"profile-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"profile-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, employeeData.name), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"profile-position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, employeeData.position), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"info-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, \"\\u041E \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0435\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }, employeeData.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"info-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"profile-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, employeeData.contacts.map((contact, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"contact-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"contact-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 19\n    }\n  }, contact.type, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"contact-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 19\n    }\n  }, contact.value))))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"schedule-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"schedule-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, \"\\u0420\\u0430\\u0441\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"schedule-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, employeeData.schedule.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"schedule-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, item.date), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, item.time))))));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","App","employeeData","setEmployeeData","loading","setLoading","error","setError","fetchEmployeeData","token","localStorage","getItem","_data$user$contacts","_data$user$contacts2","response","fetch","method","headers","ok","Error","status","data","json","userData","name","user","fio","position","work_type","photo","photo_url","description","contacts","type","value","email","phone","skype","schedule","work_days","map","workday","date","Date","work_time","toLocaleDateString","time","split","err","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","contact","index","key","item"],"sources":["/home/f1alka/front_fut/front2.0/src/pages/Profile.jsx"],"sourcesContent":["/*\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport './css/Home.css';\nimport './css/table.css';\n\nconst Profile = () => {\n  const [profile, setProfile] = useState(null);\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [workDays, setWorkDays] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      setLoading(true);\n      setError(null);\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Нет токена авторизации');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('http://172.20.10.2:8000/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки профиля: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setProfile(data.user);\n        setWorkDays(data.work_days);\n\n        const userId = data.user.id;\n        const photoUrl = userId ? `http://172.20.10.2:8000/files/employer/${userId}/get-photo` : null;\n\n        if (photoUrl) {\n          const photoResponse = await fetch(photoUrl, {\n            method: 'GET',\n            headers: { 'Authorization': `Bearer ${token}` },\n          });\n\n          if (photoResponse.ok) {\n            const photoData = await photoResponse.json();\n            if (photoData.status === 'success' && photoData.file_url) {\n              setPhotoUrl(photoData.file_url.url);\n            }\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProfile();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"main-content\">\n        <Header title=\"Личный кабинет\" subtitle=\"Ваши данные\" />\n\n        {loading ? (\n          <p>Загрузка...</p>\n        ) : error ? (\n          <p className=\"error\">{error}</p>\n        ) : profile ? (\n          <>\n            <div className=\"profile-header\">\n              <div className=\"profile-photo\">\n                <img id=\"test-image\" src={photoUrl || ''} alt=\"Фото пользователя\" />\n              </div>\n              <div className=\"profile-info\">\n                <h1 className=\"profile-name\">{profile.fio}</h1>\n              </div>\n            </div>\n\n            <div className=\"profile-details\">\n              <div className=\"profile-job\">\n                <p>Должность: <span>{profile.work_type}</span></p>\n              </div>\n              <div className=\"personal-data\">\n                <h2>Личные данные</h2>\n                <ul>\n                  <li><strong>Email:</strong> {profile.email}</li>\n                  <li><strong>Контакты:</strong> {profile.contacts?.join(', ') || 'Нет данных'}</li>\n                  {profile.description && (\n                    <li><strong>Описание:</strong> <span style={{ fontWeight: 'bold' }}>{profile.description}</span></li>\n                  )}\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"schedule-container\" style={{ maxHeight: '400px', overflowY: 'auto' }}>\n              {workDays.length === 0 ? (\n                <div className=\"no-data\">Нет данных для отображения</div>\n              ) : (\n                <div className=\"employees-list\" style={{ display: 'block' }}>\n                  {workDays.map((workday, index) => (\n                    <div key={index} className=\"employee-card\" style={{ marginBottom: '15px' }}>\n                      <div className=\"card-content\">\n                        <h3 className=\"employee-name\">{workday.employer_fio}</h3>\n                        <p className=\"employee-date\">{new Date(workday.work_time).toLocaleDateString()}</p>\n                        <span className={`status-badge ${workday.status === 1 ? 'status-working' : 'status-absent'}`}>\n                          {workday.status === 1 ? 'Работал' : 'Отсутствовал'}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <p>Нет данных</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n*/\n\n/*\nimport React from 'react';\nimport './css/profile.css'\n\nfunction App() {\n  const employeeData = {\n    name: 'Иван Петров',\n    position: 'Старший кальянщик',\n    photo: 'https://sun9-23.userapi.com/impg/pG-hMO4mKKtBsF7p71dimlhpILr4OoSgSDQ5DA/KN_bTdlS_-Y.jpg?size=2560x1706&quality=95&sign=d424de847538d01077c9e48539ecd4d9&type=album',\n    description: 'Старший кальянщик, обладающий большим опытом работы в кальянном оборудовании. П',\n    contacts: [\n      { type: 'Email', value: 'uzbek.petrov@company.com' },\n      { type: 'Телефон', value: '+7 (999) 123-45-67' },\n      { type: 'Skype', value: 'ivan.petrov.dev' }\n    ],\n    schedule: [\n      {\n        date: '2024-03-18',\n        time: '10:00 - 11:30'\n      },\n      {\n        date: '2024-03-18',\n        time: '13:00 - 15:00'\n      },\n      {\n        date: '2024-03-18',\n        time: '16:00 - 17:30'\n      },\n      {\n        date: '2024-03-19',\n        time: '11:00 - 12:30'\n      },\n      {\n        date: '2024-03-19',\n        time: '14:00 - 16:00'\n      }\n    ]\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <img \n          src={employeeData.photo} \n          alt={employeeData.name} \n          className=\"profile-image\"\n        />\n        <div className=\"profile-info\">\n          <h1 className=\"profile-name\">{employeeData.name}</h1>\n          <h2 className=\"profile-position\">{employeeData.position}</h2>\n          \n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">О сотруднике</h3>\n            <p className=\"profile-description\">{employeeData.description}</p>\n          </div>\n\n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">Контактная информация</h3>\n            <ul className=\"profile-contacts\">\n              {employeeData.contacts.map((contact, index) => (\n                <li key={index} className=\"contact-item\">\n                  <span className=\"contact-label\">{contact.type}:</span>\n                  <span className=\"contact-value\">{contact.value}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <section className=\"schedule-section\">\n        <h2 className=\"schedule-title\">Расписание</h2>\n        <div className=\"schedule-cards\">\n          {employeeData.schedule.map((item, index) => (\n            <div key={index} className=\"schedule-card\">\n              <div className=\"card-date\">\n                {new Date(item.date).toLocaleDateString('ru-RU', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </div>\n              <div className=\"card-time\">{item.time}</div>\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App\n\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport './css/profile.css';\n\nfunction App() {\n  const [employeeData, setEmployeeData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchEmployeeData = async () => {\n      setLoading(true);\n      setError(null);\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Нет токена авторизации');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('http://172.20.10.2:8000/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки профиля: ${response.status}`);\n        }\n\n        const data = await response.json();\n        const userData = {\n          name: data.user.fio,\n          position: data.user.work_type,\n          photo: data.user.photo_url || '', // URL фото пользователя\n          description: data.user.description || 'Нет описания',\n          contacts: [\n            { type: 'Email', value: data.user.email },\n            { type: 'Телефон', value: data.user.contacts?.phone || 'Нет данных' },\n            { type: 'Skype', value: data.user.contacts?.skype || 'Нет данных' },\n          ],\n          schedule: data.work_days.map(workday => ({\n            date: new Date(workday.work_time).toLocaleDateString('ru-RU'),\n            time: workday.work_time.split('T')[1] || 'Нет данных',\n          })),\n        };\n\n        setEmployeeData(userData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEmployeeData();\n  }, []);\n\n  if (loading) {\n    return <div className=\"profile-container\">Загрузка...</div>;\n  }\n\n  if (error) {\n    return <div className=\"profile-container error\">{error}</div>;\n  }\n\n  if (!employeeData) {\n    return <div className=\"profile-container\">Нет данных для отображения</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <img \n          src={employeeData.photo} \n          alt={employeeData.name} \n          className=\"profile-image\"\n        />\n        <div className=\"profile-info\">\n          <h1 className=\"profile-name\">{employeeData.name}</h1>\n          <h2 className=\"profile-position\">{employeeData.position}</h2>\n          \n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">О сотруднике</h3>\n            <p className=\"profile-description\">{employeeData.description}</p>\n          </div>\n\n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">Контактная информация</h3>\n            <ul className=\"profile-contacts\">\n              {employeeData.contacts.map((contact, index) => (\n                <li key={index} className=\"contact-item\">\n                  <span className=\"contact-label\">{contact.type}:</span>\n                  <span className=\"contact-value\">{contact.value}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <section className=\"schedule-section\">\n        <h2 className=\"schedule-title\">Расписание</h2>\n        <div className=\"schedule-cards\">\n          {employeeData.schedule.map((item, index) => (\n            <div key={index} className=\"schedule-card\">\n              <div className=\"card-date\">{item.date}</div>\n              <div className=\"card-time\">{item.time}</div>\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}