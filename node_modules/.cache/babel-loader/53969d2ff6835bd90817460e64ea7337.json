{"ast":null,"code":"var _jsxFileName = \"/home/f1alka/front_fut/front2.0/src/pages/Mixes.jsx\";\n/*import React, { useState, useRef } from 'react';\nimport { FaEdit, FaTimes, FaPlus, FaUser, FaCalendar, FaArrowLeft, FaClock } from 'react-icons/fa';\nimport './css/admin.css';\n\nconst LOCATIONS = [\n  { id: 1, name: 'Арбат', image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4' },\n  { id: 2, name: 'Проспект мира', image: 'https://images.unsplash.com/photo-1552566626-52f8b828add9' },\n  { id: 3, name: 'Никольская', image: 'https://images.unsplash.com/photo-1514933651103-005eec06c04b' }\n];\n\nconst ROLES = ['Повар', 'Кальянщик', 'Бармен', 'Официант', 'Хостес', 'Другое'];\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('main');\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  \n  const [items, setItems] = useState({\n    workers: [\n      { id: 1, name: 'Иван Иванов', role: 'Повар', photo: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80', location: 'Арбат', email: 'ivan@example.com', phone: '+7 999 123 45 67', telegram: '@ivan', description: 'Опытный шеф-повар', workTime: '09:00-18:00' },\n      { id: 2, name: 'Петр Петров', role: 'Бармен', photo: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e', location: 'Никольская', email: 'petr@example.com', phone: '+7 999 765 43 21', telegram: '@petr', description: 'Профессиональный бармен', workTime: '12:00-21:00' }\n    ],\n    regulars: [\n      { id: 1, name: 'Анна Смирнова', photo: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2', location: 'Арбат', description: 'Постоянный клиент с 2020 года' },\n      { id: 2, name: 'Мария Козлова', photo: 'https://images.unsplash.com/photo-1547425260-76bcadfb4f2c', location: 'Проспект мира', description: 'VIP гость' }\n    ],\n    events: [\n      { id: 1, title: 'Джазовый вечер', description: 'Живая музыка и особое меню', location: 'Арбат', date: '2023-10-15', time: '19:00-23:00' },\n      { id: 2, title: 'Дегустация вин', description: 'Презентация новой винной карты', location: 'Никольская', date: '2023-10-20', time: '18:00-22:00' }\n    ]\n  });\n\n  const handleBack = () => {\n    if (currentView === 'items') {\n      setCurrentView('locations');\n      setSelectedLocation(null);\n    } else if (currentView === 'locations') {\n      setCurrentView('main');\n      setSelectedType(null);\n    }\n  };\n\n  const handleMainButtonClick = (type) => {\n    setSelectedType(type);\n    setCurrentView('locations');\n  };\n\n  const handleLocationSelect = (location) => {\n    setSelectedLocation(location);\n    setCurrentView('items');\n  };\n\n  const handleAddItem = () => {\n    setModalType('add');\n    setShowModal(true);\n    setSelectedItem(null);\n  };\n\n  const handleEditItem = (item) => {\n    setModalType('edit');\n    setShowModal(true);\n    setSelectedItem(item);\n  };\n\n  const handleDeleteItem = (item) => {\n    setSelectedItem(item);\n    setShowDeleteConfirm(true);\n  };\n\n  const confirmDelete = () => {\n    setItems(prev => ({\n      ...prev,\n      [selectedType]: prev[selectedType].filter(item => item.id !== selectedItem.id)\n    }));\n    setShowDeleteConfirm(false);\n  };\n\n  const handleFileChange = (e, setFormData) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFormData(prev => ({ ...prev, photo: reader.result }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleModalSubmit = (formData) => {\n    if (modalType === 'add') {\n      setItems(prev => ({\n        ...prev,\n        [selectedType]: [...prev[selectedType], { id: Date.now(), ...formData, location: selectedLocation }]\n      }));\n    } else {\n      setItems(prev => ({\n        ...prev,\n        [selectedType]: prev[selectedType].map(item => \n          item.id === selectedItem.id ? { ...item, ...formData } : item\n        )\n      }));\n    }\n    setShowModal(false);\n  };\n\n  const filterItems = (items) => {\n    return items.filter(item => {\n      const searchMatch = selectedType === 'events'\n        ? item.title.toLowerCase().includes(searchTerm.toLowerCase())\n        : item.name.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const roleMatch = selectedType === 'workers'\n        ? !selectedRole || item.role === selectedRole\n        : true;\n      \n      const dateMatch = selectedType === 'events'\n        ? !selectedDate || item.date === selectedDate\n        : true;\n\n      return searchMatch && roleMatch && dateMatch;\n    });\n  };\n\n  const renderMainView = () => (\n    <div className=\"main-buttons\">\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('workers')}>\n        <FaUser /> Работники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('regulars')}>\n        <FaUser /> Постоянники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('events')}>\n        <FaCalendar /> События\n      </button>\n    </div>\n  );\n\n  const renderLocationsView = () => (\n    <>\n      <div className=\"navigation\">\n        <button className=\"back-button\" onClick={handleBack}>\n          <FaArrowLeft />\n        </button>\n        <h1 className=\"page-title\">Выберите локацию</h1>\n      </div>\n      <div className=\"locations\">\n        {LOCATIONS.map(location => (\n          <div key={location.id} className=\"location-card\" onClick={() => handleLocationSelect(location.name)}>\n            <img src={location.image} alt={location.name} />\n            <h3>{location.name}</h3>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n\n  const renderItemsView = () => {\n    const currentItems = filterItems(items[selectedType].filter(item => item.location === selectedLocation));\n    \n    return (\n      <>\n        <div className=\"navigation\">\n          <button className=\"back-button\" onClick={handleBack}>\n            <FaArrowLeft />\n          </button>\n          <h1 className=\"page-title\">{selectedLocation}</h1>\n        </div>\n        <div className=\"filters\">\n          <input\n            type=\"text\"\n            placeholder={selectedType === 'events' ? \"Поиск по названию...\" : \"Поиск по имени...\"}\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"filter-input\"\n          />\n          {selectedType === 'workers' && (\n            <select\n              value={selectedRole}\n              onChange={(e) => setSelectedRole(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"\">Все должности</option>\n              {ROLES.map(role => (\n                <option key={role} value={role}>{role}</option>\n              ))}\n            </select>\n          )}\n          {selectedType === 'events' && (\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"filter-input\"\n            />\n          )}\n        </div>\n        <div className=\"items-list\">\n          {currentItems.map(item => (\n            <div key={item.id} className=\"item-row\">\n              <div>{item.name || item.title}</div>\n              {selectedType === 'workers' && <div>{item.role}</div>}\n              \n              {selectedType === 'events' && (\n                <>\n                  <div>{item.date}</div>\n                  <div>{item.time}</div>\n                </>\n              )}\n              {selectedType === 'workers' && <div>{item.workTime}</div>}\n              \n              <div>{item.location}</div>\n              <div className=\"item-actions\">\n                <button className=\"action-button delete-button\" onClick={() => handleDeleteItem(item)}>\n                  <FaTimes />\n                </button>\n                <button className=\"action-button edit-button\" onClick={() => handleEditItem(item)}>\n                  <FaEdit />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n        <button className=\"add-button\" onClick={handleAddItem}>\n          <FaPlus />\n        </button>\n      </>\n    );\n  };\n\n  const renderModal = () => {\n    if (!showModal) return null;\n\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <ModalForm\n            type={selectedType}\n            initialData={selectedItem}\n            onSubmit={handleModalSubmit}\n            onCancel={() => setShowModal(false)}\n            onFileChange={handleFileChange}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderDeleteConfirm = () => {\n    if (!showDeleteConfirm) return null;\n\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <h3>Подтверждение удаления</h3>\n          <p>Вы уверены, что хотите удалить этот элемент?</p>\n          <div className=\"modal-buttons\">\n            <button className=\"modal-button cancel-button\" onClick={() => setShowDeleteConfirm(false)}>Нет</button>\n            <button className=\"modal-button confirm-button\" onClick={confirmDelete}>Да</button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"admin-panel\">\n      {currentView === 'main' && renderMainView()}\n      {currentView === 'locations' && renderLocationsView()}\n      {currentView === 'items' && renderItemsView()}\n      {renderModal()}\n      {renderDeleteConfirm()}\n    </div>\n  );\n}\n\nfunction ModalForm({ type, initialData, onSubmit, onCancel, onFileChange }) {\n  const [formData, setFormData] = useState(\n    initialData || {\n      name: '',\n      role: '',\n      photo: '',\n      title: '',\n      description: '',\n      email: '',\n      phone: '',\n      telegram: '',\n      workTime: '',\n      date: '',\n      time: ''\n    }\n  );\n\n  const fileInputRef = useRef(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-form\">\n      <h3>{initialData ? 'Редактировать' : 'Добавить'}</h3>\n      \n      {type !== 'events' && (\n        <>\n          <div className=\"form-group\">\n            <label>ФИО:</label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group file-input-group\">\n            <label>Фото:</label>\n            <button\n              type=\"button\"\n              className=\"file-input-button\"\n              onClick={() => fileInputRef.current.click()}\n            >\n              Выбрать фото\n            </button>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              style={{ display: 'none' }}\n              onChange={e => onFileChange(e, setFormData)}\n            />\n            <div className=\"file-input-preview\">\n              {formData.photo && <img src={formData.photo} alt=\"Preview\" />}\n            </div>\n          </div>\n        </>\n      )}\n\n      {type === 'workers' && (\n        <>\n          <div className=\"form-group\">\n            <label>Роль:</label>\n            <select\n              value={formData.role}\n              onChange={e => setFormData(prev => ({ ...prev, role: e.target.value }))}\n              required\n            >\n              <option value=\"\">Выберите роль</option>\n              {ROLES.map(role => (\n                <option key={role} value={role}>{role}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Время работы:</label>\n            <input\n              type=\"text\"\n              value={formData.workTime}\n              onChange={e => setFormData(prev => ({ ...prev, workTime: e.target.value }))}\n              placeholder=\"09:00-18:00\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              value={formData.email}\n              onChange={e => setFormData(prev => ({ ...prev, email: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Телефон:</label>\n            <input\n              type=\"tel\"\n              value={formData.phone}\n              onChange={e => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Telegram:</label>\n            <input\n              type=\"text\"\n              value={formData.telegram}\n              onChange={e => setFormData(prev => ({ ...prev, telegram: e.target.value }))}\n              required\n            />\n          </div>\n        </>\n      )}\n\n      {type === 'events' && (\n        <>\n          <div className=\"form-group\">\n            <label>Название:</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={e => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Дата:</label>\n            <input\n              type=\"date\"\n              value={formData.date}\n              onChange={e => setFormData(prev => ({ ...prev, date: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Время:</label>\n            <input\n              type=\"text\"\n              value={formData.time}\n              placeholder=\"18:00-22:00\"\n              onChange={e => setFormData(prev => ({ ...prev, time: e.target.value }))}\n              required\n            />\n          </div>\n        </>\n      )}\n\n      <div className=\"form-group\">\n        <label>Описание:</label>\n        <textarea\n          value={formData.description}\n          onChange={e => setFormData(prev => ({ ...prev, description: e.target.value }))}\n          required\n          rows=\"4\"\n        />\n      </div>\n\n      <div className=\"modal-buttons\">\n        <button type=\"button\" className=\"modal-button cancel-button\" onClick={onCancel}>\n          Отмена\n        </button>\n        <button type=\"submit\" className=\"modal-button confirm-button\">\n          {initialData ? 'Сохранить' : 'Добавить'}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default App;\n\n*/\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { FaEdit, FaTimes, FaPlus, FaUser, FaCalendar, FaArrowLeft } from 'react-icons/fa';\nimport './css/admin.css';\nconst BASE_URL = 'https://mdmvbistdt.eu.loclx.io';\nconst LOCATIONS = ['Арбат', 'Проспект мира', 'Никольская'];\nconst ROLES = ['Повар', 'Кальянщик', 'Бармен', 'Официант', 'Хостес', 'Другое'];\nfunction App() {\n  const [currentView, setCurrentView] = useState('main');\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n  useEffect(() => {\n    if (selectedType && selectedLocation) fetchItems();\n  }, [selectedType, selectedLocation, page]);\n  const fetchItems = async () => {\n    setLoading(true);\n    try {\n      const endpoint = {\n        workers: `/employers/get_list_employers/${selectedLocation}`,\n        regulars: `/residents/${selectedLocation}/get_list_residents`,\n        events: `/events/get_not_actually_events/${selectedLocation}`\n      }[selectedType];\n      const response = await axios.get(`${BASE_URL}${endpoint}`, {\n        params: {\n          page,\n          limit\n        }\n      });\n      setItems(response.data.items);\n      setTotalPages(response.data.totalPages);\n    } catch (error) {\n      console.error('Error fetching items:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async id => {\n    const endpoint = {\n      workers: '/employers/delete_employer',\n      regulars: `/residents/${selectedLocation}/delete_resident`,\n      events: '/events/delete_event'\n    }[selectedType];\n    try {\n      await axios.delete(`${BASE_URL}${endpoint}`, {\n        data: {\n          id\n        }\n      });\n      fetchItems();\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    }\n  };\n  const handleAddEdit = async formData => {\n    const endpoint = {\n      workers: '/employers/edit_employer',\n      regulars: '/residents/create_resident',\n      events: '/events/create_event'\n    }[selectedType];\n    try {\n      if (modalType === 'add') {\n        await axios.post(`${BASE_URL}${endpoint}`, formData);\n      } else {\n        await axios.put(`${BASE_URL}${endpoint}`, formData);\n      }\n      fetchItems();\n    } catch (error) {\n      console.error('Error adding/editing item:', error);\n    } finally {\n      setShowModal(false);\n    }\n  };\n  const handleMainButtonClick = type => {\n    setSelectedType(type);\n    setCurrentView('locations');\n  };\n  const handleLocationSelect = location => {\n    setSelectedLocation(location);\n    setPage(1);\n    setCurrentView('items');\n  };\n  const renderMainView = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main-button\",\n    onClick: () => handleMainButtonClick('workers'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 9\n    }\n  }), \" \\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main-button\",\n    onClick: () => handleMainButtonClick('regulars'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 9\n    }\n  }), \" \\u041F\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u043D\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main-button\",\n    onClick: () => handleMainButtonClick('events'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 9\n    }\n  }), \" \\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F\"));\n  const renderLocationsView = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"locations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 5\n    }\n  }, LOCATIONS.map(location => /*#__PURE__*/React.createElement(\"div\", {\n    key: location,\n    className: \"location-card\",\n    onClick: () => handleLocationSelect(location),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 11\n    }\n  }, location))));\n  const renderItemsView = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 11\n    }\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\") : items.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.id,\n    className: \"item-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 15\n    }\n  }, item.name || item.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setModalType('edit');\n      setShowModal(true);\n      setSelectedItem(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 17\n    }\n  }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 17\n    }\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: page <= 1,\n    onClick: () => setPage(prev => prev - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 9\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 9\n    }\n  }, page, \" / \", totalPages), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: page >= totalPages,\n    onClick: () => setPage(prev => prev + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 9\n    }\n  }, \"\\u0412\\u043F\\u0435\\u0440\\u0435\\u0434\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setModalType('add');\n      setShowModal(true);\n      setSelectedItem(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 5\n    }\n  }, currentView === 'main' && renderMainView(), currentView === 'locations' && renderLocationsView(), currentView === 'items' && renderItemsView(), showModal && /*#__PURE__*/React.createElement(ModalForm, {\n    type: selectedType,\n    data: selectedItem,\n    onSubmit: handleAddEdit,\n    onCancel: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 9\n    }\n  }));\n}\nfunction ModalForm({\n  type,\n  data,\n  onSubmit,\n  onCancel\n}) {\n  const [formData, setFormData] = useState(data || {});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 9\n    }\n  }, data ? 'Редактировать' : 'Добавить', \" \", type), type === 'events' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    value: formData.title || '',\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"date\",\n    type: \"date\",\n    value: formData.date || '',\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"time\",\n    placeholder: \"\\u0412\\u0440\\u0435\\u043C\\u044F\",\n    value: formData.time || '',\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 13\n    }\n  })), type !== 'events' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    placeholder: \"\\u0418\\u043C\\u044F\",\n    value: formData.name || '',\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 13\n    }\n  }), type === 'workers' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"role\",\n    value: formData.role || '',\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 19\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0440\\u043E\\u043B\\u044C\"), ROLES.map(role => /*#__PURE__*/React.createElement(\"option\", {\n    key: role,\n    value: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 21\n    }\n  }, role))), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    placeholder: \"Email\",\n    value: formData.email || '',\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"phone\",\n    placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n    value: formData.phone || '',\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n    value: formData.description || '',\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 11\n    }\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","FaEdit","FaTimes","FaPlus","FaUser","FaCalendar","FaArrowLeft","BASE_URL","LOCATIONS","ROLES","App","currentView","setCurrentView","selectedType","setSelectedType","selectedLocation","setSelectedLocation","items","setItems","page","setPage","limit","setLimit","totalPages","setTotalPages","loading","setLoading","showModal","setShowModal","modalType","setModalType","selectedItem","setSelectedItem","fetchItems","endpoint","workers","regulars","events","response","get","params","data","error","console","handleDelete","id","delete","handleAddEdit","formData","post","put","handleMainButtonClick","type","handleLocationSelect","location","renderMainView","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderLocationsView","map","key","renderItemsView","item","name","title","disabled","prev","ModalForm","onSubmit","onCancel","setFormData","handleChange","e","value","target","handleSubmit","preventDefault","Fragment","placeholder","onChange","required","date","time","role","email","phone","description"],"sources":["/home/f1alka/front_fut/front2.0/src/pages/Mixes.jsx"],"sourcesContent":["/*import React, { useState, useRef } from 'react';\nimport { FaEdit, FaTimes, FaPlus, FaUser, FaCalendar, FaArrowLeft, FaClock } from 'react-icons/fa';\nimport './css/admin.css';\n\nconst LOCATIONS = [\n  { id: 1, name: 'Арбат', image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4' },\n  { id: 2, name: 'Проспект мира', image: 'https://images.unsplash.com/photo-1552566626-52f8b828add9' },\n  { id: 3, name: 'Никольская', image: 'https://images.unsplash.com/photo-1514933651103-005eec06c04b' }\n];\n\nconst ROLES = ['Повар', 'Кальянщик', 'Бармен', 'Официант', 'Хостес', 'Другое'];\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('main');\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  \n  const [items, setItems] = useState({\n    workers: [\n      { id: 1, name: 'Иван Иванов', role: 'Повар', photo: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80', location: 'Арбат', email: 'ivan@example.com', phone: '+7 999 123 45 67', telegram: '@ivan', description: 'Опытный шеф-повар', workTime: '09:00-18:00' },\n      { id: 2, name: 'Петр Петров', role: 'Бармен', photo: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e', location: 'Никольская', email: 'petr@example.com', phone: '+7 999 765 43 21', telegram: '@petr', description: 'Профессиональный бармен', workTime: '12:00-21:00' }\n    ],\n    regulars: [\n      { id: 1, name: 'Анна Смирнова', photo: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2', location: 'Арбат', description: 'Постоянный клиент с 2020 года' },\n      { id: 2, name: 'Мария Козлова', photo: 'https://images.unsplash.com/photo-1547425260-76bcadfb4f2c', location: 'Проспект мира', description: 'VIP гость' }\n    ],\n    events: [\n      { id: 1, title: 'Джазовый вечер', description: 'Живая музыка и особое меню', location: 'Арбат', date: '2023-10-15', time: '19:00-23:00' },\n      { id: 2, title: 'Дегустация вин', description: 'Презентация новой винной карты', location: 'Никольская', date: '2023-10-20', time: '18:00-22:00' }\n    ]\n  });\n\n  const handleBack = () => {\n    if (currentView === 'items') {\n      setCurrentView('locations');\n      setSelectedLocation(null);\n    } else if (currentView === 'locations') {\n      setCurrentView('main');\n      setSelectedType(null);\n    }\n  };\n\n  const handleMainButtonClick = (type) => {\n    setSelectedType(type);\n    setCurrentView('locations');\n  };\n\n  const handleLocationSelect = (location) => {\n    setSelectedLocation(location);\n    setCurrentView('items');\n  };\n\n  const handleAddItem = () => {\n    setModalType('add');\n    setShowModal(true);\n    setSelectedItem(null);\n  };\n\n  const handleEditItem = (item) => {\n    setModalType('edit');\n    setShowModal(true);\n    setSelectedItem(item);\n  };\n\n  const handleDeleteItem = (item) => {\n    setSelectedItem(item);\n    setShowDeleteConfirm(true);\n  };\n\n  const confirmDelete = () => {\n    setItems(prev => ({\n      ...prev,\n      [selectedType]: prev[selectedType].filter(item => item.id !== selectedItem.id)\n    }));\n    setShowDeleteConfirm(false);\n  };\n\n  const handleFileChange = (e, setFormData) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFormData(prev => ({ ...prev, photo: reader.result }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleModalSubmit = (formData) => {\n    if (modalType === 'add') {\n      setItems(prev => ({\n        ...prev,\n        [selectedType]: [...prev[selectedType], { id: Date.now(), ...formData, location: selectedLocation }]\n      }));\n    } else {\n      setItems(prev => ({\n        ...prev,\n        [selectedType]: prev[selectedType].map(item => \n          item.id === selectedItem.id ? { ...item, ...formData } : item\n        )\n      }));\n    }\n    setShowModal(false);\n  };\n\n  const filterItems = (items) => {\n    return items.filter(item => {\n      const searchMatch = selectedType === 'events'\n        ? item.title.toLowerCase().includes(searchTerm.toLowerCase())\n        : item.name.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const roleMatch = selectedType === 'workers'\n        ? !selectedRole || item.role === selectedRole\n        : true;\n      \n      const dateMatch = selectedType === 'events'\n        ? !selectedDate || item.date === selectedDate\n        : true;\n\n      return searchMatch && roleMatch && dateMatch;\n    });\n  };\n\n  const renderMainView = () => (\n    <div className=\"main-buttons\">\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('workers')}>\n        <FaUser /> Работники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('regulars')}>\n        <FaUser /> Постоянники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('events')}>\n        <FaCalendar /> События\n      </button>\n    </div>\n  );\n\n  const renderLocationsView = () => (\n    <>\n      <div className=\"navigation\">\n        <button className=\"back-button\" onClick={handleBack}>\n          <FaArrowLeft />\n        </button>\n        <h1 className=\"page-title\">Выберите локацию</h1>\n      </div>\n      <div className=\"locations\">\n        {LOCATIONS.map(location => (\n          <div key={location.id} className=\"location-card\" onClick={() => handleLocationSelect(location.name)}>\n            <img src={location.image} alt={location.name} />\n            <h3>{location.name}</h3>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n\n  const renderItemsView = () => {\n    const currentItems = filterItems(items[selectedType].filter(item => item.location === selectedLocation));\n    \n    return (\n      <>\n        <div className=\"navigation\">\n          <button className=\"back-button\" onClick={handleBack}>\n            <FaArrowLeft />\n          </button>\n          <h1 className=\"page-title\">{selectedLocation}</h1>\n        </div>\n        <div className=\"filters\">\n          <input\n            type=\"text\"\n            placeholder={selectedType === 'events' ? \"Поиск по названию...\" : \"Поиск по имени...\"}\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"filter-input\"\n          />\n          {selectedType === 'workers' && (\n            <select\n              value={selectedRole}\n              onChange={(e) => setSelectedRole(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"\">Все должности</option>\n              {ROLES.map(role => (\n                <option key={role} value={role}>{role}</option>\n              ))}\n            </select>\n          )}\n          {selectedType === 'events' && (\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"filter-input\"\n            />\n          )}\n        </div>\n        <div className=\"items-list\">\n          {currentItems.map(item => (\n            <div key={item.id} className=\"item-row\">\n              <div>{item.name || item.title}</div>\n              {selectedType === 'workers' && <div>{item.role}</div>}\n              \n              {selectedType === 'events' && (\n                <>\n                  <div>{item.date}</div>\n                  <div>{item.time}</div>\n                </>\n              )}\n              {selectedType === 'workers' && <div>{item.workTime}</div>}\n              \n              <div>{item.location}</div>\n              <div className=\"item-actions\">\n                <button className=\"action-button delete-button\" onClick={() => handleDeleteItem(item)}>\n                  <FaTimes />\n                </button>\n                <button className=\"action-button edit-button\" onClick={() => handleEditItem(item)}>\n                  <FaEdit />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n        <button className=\"add-button\" onClick={handleAddItem}>\n          <FaPlus />\n        </button>\n      </>\n    );\n  };\n\n  const renderModal = () => {\n    if (!showModal) return null;\n\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <ModalForm\n            type={selectedType}\n            initialData={selectedItem}\n            onSubmit={handleModalSubmit}\n            onCancel={() => setShowModal(false)}\n            onFileChange={handleFileChange}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderDeleteConfirm = () => {\n    if (!showDeleteConfirm) return null;\n\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <h3>Подтверждение удаления</h3>\n          <p>Вы уверены, что хотите удалить этот элемент?</p>\n          <div className=\"modal-buttons\">\n            <button className=\"modal-button cancel-button\" onClick={() => setShowDeleteConfirm(false)}>Нет</button>\n            <button className=\"modal-button confirm-button\" onClick={confirmDelete}>Да</button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"admin-panel\">\n      {currentView === 'main' && renderMainView()}\n      {currentView === 'locations' && renderLocationsView()}\n      {currentView === 'items' && renderItemsView()}\n      {renderModal()}\n      {renderDeleteConfirm()}\n    </div>\n  );\n}\n\nfunction ModalForm({ type, initialData, onSubmit, onCancel, onFileChange }) {\n  const [formData, setFormData] = useState(\n    initialData || {\n      name: '',\n      role: '',\n      photo: '',\n      title: '',\n      description: '',\n      email: '',\n      phone: '',\n      telegram: '',\n      workTime: '',\n      date: '',\n      time: ''\n    }\n  );\n\n  const fileInputRef = useRef(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-form\">\n      <h3>{initialData ? 'Редактировать' : 'Добавить'}</h3>\n      \n      {type !== 'events' && (\n        <>\n          <div className=\"form-group\">\n            <label>ФИО:</label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group file-input-group\">\n            <label>Фото:</label>\n            <button\n              type=\"button\"\n              className=\"file-input-button\"\n              onClick={() => fileInputRef.current.click()}\n            >\n              Выбрать фото\n            </button>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              style={{ display: 'none' }}\n              onChange={e => onFileChange(e, setFormData)}\n            />\n            <div className=\"file-input-preview\">\n              {formData.photo && <img src={formData.photo} alt=\"Preview\" />}\n            </div>\n          </div>\n        </>\n      )}\n\n      {type === 'workers' && (\n        <>\n          <div className=\"form-group\">\n            <label>Роль:</label>\n            <select\n              value={formData.role}\n              onChange={e => setFormData(prev => ({ ...prev, role: e.target.value }))}\n              required\n            >\n              <option value=\"\">Выберите роль</option>\n              {ROLES.map(role => (\n                <option key={role} value={role}>{role}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Время работы:</label>\n            <input\n              type=\"text\"\n              value={formData.workTime}\n              onChange={e => setFormData(prev => ({ ...prev, workTime: e.target.value }))}\n              placeholder=\"09:00-18:00\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              value={formData.email}\n              onChange={e => setFormData(prev => ({ ...prev, email: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Телефон:</label>\n            <input\n              type=\"tel\"\n              value={formData.phone}\n              onChange={e => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Telegram:</label>\n            <input\n              type=\"text\"\n              value={formData.telegram}\n              onChange={e => setFormData(prev => ({ ...prev, telegram: e.target.value }))}\n              required\n            />\n          </div>\n        </>\n      )}\n\n      {type === 'events' && (\n        <>\n          <div className=\"form-group\">\n            <label>Название:</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={e => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Дата:</label>\n            <input\n              type=\"date\"\n              value={formData.date}\n              onChange={e => setFormData(prev => ({ ...prev, date: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Время:</label>\n            <input\n              type=\"text\"\n              value={formData.time}\n              placeholder=\"18:00-22:00\"\n              onChange={e => setFormData(prev => ({ ...prev, time: e.target.value }))}\n              required\n            />\n          </div>\n        </>\n      )}\n\n      <div className=\"form-group\">\n        <label>Описание:</label>\n        <textarea\n          value={formData.description}\n          onChange={e => setFormData(prev => ({ ...prev, description: e.target.value }))}\n          required\n          rows=\"4\"\n        />\n      </div>\n\n      <div className=\"modal-buttons\">\n        <button type=\"button\" className=\"modal-button cancel-button\" onClick={onCancel}>\n          Отмена\n        </button>\n        <button type=\"submit\" className=\"modal-button confirm-button\">\n          {initialData ? 'Сохранить' : 'Добавить'}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default App;\n\n*/\n\n\n\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { FaEdit, FaTimes, FaPlus, FaUser, FaCalendar, FaArrowLeft } from 'react-icons/fa';\nimport './css/admin.css';\n\nconst BASE_URL = 'https://mdmvbistdt.eu.loclx.io';\nconst LOCATIONS = ['Арбат', 'Проспект мира', 'Никольская'];\nconst ROLES = ['Повар', 'Кальянщик', 'Бармен', 'Официант', 'Хостес', 'Другое'];\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('main');\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  useEffect(() => {\n    if (selectedType && selectedLocation) fetchItems();\n  }, [selectedType, selectedLocation, page]);\n\n  const fetchItems = async () => {\n    setLoading(true);\n    try {\n      const endpoint = {\n        workers: `/employers/get_list_employers/${selectedLocation}`,\n        regulars: `/residents/${selectedLocation}/get_list_residents`,\n        events: `/events/get_not_actually_events/${selectedLocation}`,\n      }[selectedType];\n      const response = await axios.get(`${BASE_URL}${endpoint}`, {\n        params: { page, limit },\n      });\n      setItems(response.data.items);\n      setTotalPages(response.data.totalPages);\n    } catch (error) {\n      console.error('Error fetching items:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    const endpoint = {\n      workers: '/employers/delete_employer',\n      regulars: `/residents/${selectedLocation}/delete_resident`,\n      events: '/events/delete_event',\n    }[selectedType];\n    try {\n      await axios.delete(`${BASE_URL}${endpoint}`, { data: { id } });\n      fetchItems();\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    }\n  };\n\n  const handleAddEdit = async (formData) => {\n    const endpoint = {\n      workers: '/employers/edit_employer',\n      regulars: '/residents/create_resident',\n      events: '/events/create_event',\n    }[selectedType];\n    try {\n      if (modalType === 'add') {\n        await axios.post(`${BASE_URL}${endpoint}`, formData);\n      } else {\n        await axios.put(`${BASE_URL}${endpoint}`, formData);\n      }\n      fetchItems();\n    } catch (error) {\n      console.error('Error adding/editing item:', error);\n    } finally {\n      setShowModal(false);\n    }\n  };\n\n  const handleMainButtonClick = (type) => {\n    setSelectedType(type);\n    setCurrentView('locations');\n  };\n\n  const handleLocationSelect = (location) => {\n    setSelectedLocation(location);\n    setPage(1);\n    setCurrentView('items');\n  };\n\n  const renderMainView = () => (\n    <div className=\"main-buttons\">\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('workers')}>\n        <FaUser /> Работники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('regulars')}>\n        <FaUser /> Постоянники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('events')}>\n        <FaCalendar /> События\n      </button>\n    </div>\n  );\n\n  const renderLocationsView = () => (\n    <div className=\"locations\">\n      {LOCATIONS.map((location) => (\n        <div key={location} className=\"location-card\" onClick={() => handleLocationSelect(location)}>\n          <h3>{location}</h3>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderItemsView = () => (\n    <div className=\"items-view\">\n      <div className=\"items-list\">\n        {loading ? (\n          <p>Загрузка...</p>\n        ) : (\n          items.map((item) => (\n            <div key={item.id} className=\"item-row\">\n              <span>{item.name || item.title}</span>\n              <div className=\"actions\">\n                <button onClick={() => { setModalType('edit'); setShowModal(true); setSelectedItem(item); }}>Редактировать</button>\n                <button onClick={() => handleDelete(item.id)}>Удалить</button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n      <div className=\"pagination\">\n        <button disabled={page <= 1} onClick={() => setPage((prev) => prev - 1)}>Назад</button>\n        <span>{page} / {totalPages}</span>\n        <button disabled={page >= totalPages} onClick={() => setPage((prev) => prev + 1)}>Вперед</button>\n      </div>\n      <button onClick={() => { setModalType('add'); setShowModal(true); setSelectedItem(null); }}>Добавить</button>\n    </div>\n  );\n\n  return (\n    <div className=\"admin-panel\">\n      {currentView === 'main' && renderMainView()}\n      {currentView === 'locations' && renderLocationsView()}\n      {currentView === 'items' && renderItemsView()}\n      {showModal && (\n        <ModalForm\n          type={selectedType}\n          data={selectedItem}\n          onSubmit={handleAddEdit}\n          onCancel={() => setShowModal(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction ModalForm({ type, data, onSubmit, onCancel }) {\n  const [formData, setFormData] = useState(data || {});\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return (\n    <div className=\"modal\">\n      <form onSubmit={handleSubmit}>\n        <h3>{data ? 'Редактировать' : 'Добавить'} {type}</h3>\n        {type === 'events' && (\n          <>\n            <input name=\"title\" placeholder=\"Название\" value={formData.title || ''} onChange={handleChange} required />\n            <input name=\"date\" type=\"date\" value={formData.date || ''} onChange={handleChange} required />\n            <input name=\"time\" placeholder=\"Время\" value={formData.time || ''} onChange={handleChange} required />\n          </>\n        )}\n        {type !== 'events' && (\n          <>\n            <input name=\"name\" placeholder=\"Имя\" value={formData.name || ''} onChange={handleChange} required />\n            {type === 'workers' && (\n              <>\n                <select name=\"role\" value={formData.role || ''} onChange={handleChange} required>\n                  <option value=\"\">Выберите роль</option>\n                  {ROLES.map((role) => (\n                    <option key={role} value={role}>{role}</option>\n                  ))}\n                </select>\n                <input name=\"email\" placeholder=\"Email\" value={formData.email || ''} onChange={handleChange} required />\n                <input name=\"phone\" placeholder=\"Телефон\" value={formData.phone || ''} onChange={handleChange} required />\n              </>\n            )}\n          </>\n        )}\n        <textarea name=\"description\" placeholder=\"Описание\" value={formData.description || ''} onChange={handleChange} required />\n        <div className=\"modal-actions\">\n          <button type=\"button\" onClick={onCancel}>Отмена</button>\n          <button type=\"submit\">Сохранить</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;"],"mappingszB,SAASC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAEC,WAAW,QAAQ,gBAAgB;AACzF,OAAO,iBAAiB;AAExB,MAAMC,QAAQ,GAAG,gCAAgC;AACjD,MAAMC,SAAS,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,YAAY,CAAC;AAC1D,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAE9E,SAASC,GAAGA,CAAA,EAAG;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAEtDE,SAAS,CAAC,MAAM;IACd,IAAIc,YAAY,IAAIE,gBAAgB,EAAEkB,UAAU,CAAC,CAAC;EACpD,CAAC,EAAE,CAACpB,YAAY,EAAEE,gBAAgB,EAAEI,IAAI,CAAC,CAAC;EAE1C,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BP,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMQ,QAAQ,GAAG;QACfC,OAAO,EAAE,iCAAiCpB,gBAAgB,EAAE;QAC5DqB,QAAQ,EAAE,cAAcrB,gBAAgB,qBAAqB;QAC7DsB,MAAM,EAAE,mCAAmCtB,gBAAgB;MAC7D,CAAC,CAACF,YAAY,CAAC;MACf,MAAMyB,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAC,GAAGhC,QAAQ,GAAG2B,QAAQ,EAAE,EAAE;QACzDM,MAAM,EAAE;UAAErB,IAAI;UAAEE;QAAM;MACxB,CAAC,CAAC;MACFH,QAAQ,CAACoB,QAAQ,CAACG,IAAI,CAACxB,KAAK,CAAC;MAC7BO,aAAa,CAACc,QAAQ,CAACG,IAAI,CAAClB,UAAU,CAAC;IACzC,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkB,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMX,QAAQ,GAAG;MACfC,OAAO,EAAE,4BAA4B;MACrCC,QAAQ,EAAE,cAAcrB,gBAAgB,kBAAkB;MAC1DsB,MAAM,EAAE;IACV,CAAC,CAACxB,YAAY,CAAC;IACf,IAAI;MACF,MAAMb,KAAK,CAAC8C,MAAM,CAAC,GAAGvC,QAAQ,GAAG2B,QAAQ,EAAE,EAAE;QAAEO,IAAI,EAAE;UAAEI;QAAG;MAAE,CAAC,CAAC;MAC9DZ,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMK,aAAa,GAAG,MAAOC,QAAQ,IAAK;IACxC,MAAMd,QAAQ,GAAG;MACfC,OAAO,EAAE,0BAA0B;MACnCC,QAAQ,EAAE,4BAA4B;MACtCC,MAAM,EAAE;IACV,CAAC,CAACxB,YAAY,CAAC;IACf,IAAI;MACF,IAAIgB,SAAS,KAAK,KAAK,EAAE;QACvB,MAAM7B,KAAK,CAACiD,IAAI,CAAC,GAAG1C,QAAQ,GAAG2B,QAAQ,EAAE,EAAEc,QAAQ,CAAC;MACtD,CAAC,MAAM;QACL,MAAMhD,KAAK,CAACkD,GAAG,CAAC,GAAG3C,QAAQ,GAAG2B,QAAQ,EAAE,EAAEc,QAAQ,CAAC;MACrD;MACAf,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACRd,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMuB,qBAAqB,GAAIC,IAAI,IAAK;IACtCtC,eAAe,CAACsC,IAAI,CAAC;IACrBxC,cAAc,CAAC,WAAW,CAAC;EAC7B,CAAC;EAED,MAAMyC,oBAAoB,GAAIC,QAAQ,IAAK;IACzCtC,mBAAmB,CAACsC,QAAQ,CAAC;IAC7BlC,OAAO,CAAC,CAAC,CAAC;IACVR,cAAc,CAAC,OAAO,CAAC;EACzB,CAAC;EAED,MAAM2C,cAAc,GAAGA,CAAA,kBACrB3D,KAAA,CAAA4D,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BnE,KAAA,CAAA4D,aAAA;IAAQC,SAAS,EAAC,aAAa;IAACO,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAAC,SAAS,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9EnE,KAAA,CAAA4D,aAAA,CAACpD,MAAM;IAAAsD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,2DACJ,CAAC,eACTnE,KAAA,CAAA4D,aAAA;IAAQC,SAAS,EAAC,aAAa;IAACO,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAAC,UAAU,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/EnE,KAAA,CAAA4D,aAAA,CAACpD,MAAM;IAAAsD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,uEACJ,CAAC,eACTnE,KAAA,CAAA4D,aAAA;IAAQC,SAAS,EAAC,aAAa;IAACO,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAAC,QAAQ,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7EnE,KAAA,CAAA4D,aAAA,CAACnD,UAAU;IAAAqD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,+CACR,CACL,CACN;EAED,MAAME,mBAAmB,GAAGA,CAAA,kBAC1BrE,KAAA,CAAA4D,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvBvD,SAAS,CAAC0D,GAAG,CAAEZ,QAAQ,iBACtB1D,KAAA,CAAA4D,aAAA;IAAKW,GAAG,EAAEb,QAAS;IAACG,SAAS,EAAC,eAAe;IAACO,OAAO,EAAEA,CAAA,KAAMX,oBAAoB,CAACC,QAAQ,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1FnE,KAAA,CAAA4D,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKT,QAAa,CACf,CACN,CACE,CACN;EAED,MAAMc,eAAe,GAAGA,CAAA,kBACtBxE,KAAA,CAAA4D,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBnE,KAAA,CAAA4D,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxBtC,OAAO,gBACN7B,KAAA,CAAA4D,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,qDAAc,CAAC,GAElB9C,KAAK,CAACiD,GAAG,CAAEG,IAAI,iBACbzE,KAAA,CAAA4D,aAAA;IAAKW,GAAG,EAAEE,IAAI,CAACxB,EAAG;IAACY,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrCnE,KAAA,CAAA4D,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAOM,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,KAAY,CAAC,eACtC3E,KAAA,CAAA4D,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBnE,KAAA,CAAA4D,aAAA;IAAQQ,OAAO,EAAEA,CAAA,KAAM;MAAElC,YAAY,CAAC,MAAM,CAAC;MAAEF,YAAY,CAAC,IAAI,CAAC;MAAEI,eAAe,CAACqC,IAAI,CAAC;IAAE,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gFAAqB,CAAC,eACnHnE,KAAA,CAAA4D,aAAA;IAAQQ,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACyB,IAAI,CAACxB,EAAE,CAAE;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,4CAAe,CAC1D,CACF,CACN,CAEA,CAAC,eACNnE,KAAA,CAAA4D,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBnE,KAAA,CAAA4D,aAAA;IAAQgB,QAAQ,EAAErD,IAAI,IAAI,CAAE;IAAC6C,OAAO,EAAEA,CAAA,KAAM5C,OAAO,CAAEqD,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gCAAa,CAAC,eACvFnE,KAAA,CAAA4D,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO5C,IAAI,EAAC,KAAG,EAACI,UAAiB,CAAC,eAClC3B,KAAA,CAAA4D,aAAA;IAAQgB,QAAQ,EAAErD,IAAI,IAAII,UAAW;IAACyC,OAAO,EAAEA,CAAA,KAAM5C,OAAO,CAAEqD,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sCAAc,CAC7F,CAAC,eACNnE,KAAA,CAAA4D,aAAA;IAAQQ,OAAO,EAAEA,CAAA,KAAM;MAAElC,YAAY,CAAC,KAAK,CAAC;MAAEF,YAAY,CAAC,IAAI,CAAC;MAAEI,eAAe,CAAC,IAAI,CAAC;IAAE,CAAE;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,kDAAgB,CACzG,CACN;EAED,oBACEnE,KAAA,CAAA4D,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzBpD,WAAW,KAAK,MAAM,IAAI4C,cAAc,CAAC,CAAC,EAC1C5C,WAAW,KAAK,WAAW,IAAIsD,mBAAmB,CAAC,CAAC,EACpDtD,WAAW,KAAK,OAAO,IAAIyD,eAAe,CAAC,CAAC,EAC5CzC,SAAS,iBACR/B,KAAA,CAAA4D,aAAA,CAACkB,SAAS;IACRtB,IAAI,EAAEvC,YAAa;IACnB4B,IAAI,EAAEV,YAAa;IACnB4C,QAAQ,EAAE5B,aAAc;IACxB6B,QAAQ,EAAEA,CAAA,KAAMhD,YAAY,CAAC,KAAK,CAAE;IAAA8B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACrC,CAEA,CAAC;AAEV;AAEA,SAASW,SAASA,CAAC;EAAEtB,IAAI;EAAEX,IAAI;EAAEkC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EACrD,MAAM,CAAC5B,QAAQ,EAAE6B,WAAW,CAAC,GAAGhF,QAAQ,CAAC4C,IAAI,IAAI,CAAC,CAAC,CAAC;EAEpD,MAAMqC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAET,IAAI;MAAEU;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCJ,WAAW,CAAEJ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGU;IAAM,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAME,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBR,QAAQ,CAAC3B,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEpD,KAAA,CAAA4D,aAAA;IAAKC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpBnE,KAAA,CAAA4D,aAAA;IAAMmB,QAAQ,EAAEO,YAAa;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BnE,KAAA,CAAA4D,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKtB,IAAI,GAAG,eAAe,GAAG,UAAU,EAAC,GAAC,EAACW,IAAS,CAAC,EACpDA,IAAI,KAAK,QAAQ,iBAChBxD,KAAA,CAAA4D,aAAA,CAAA5D,KAAA,CAAAwF,QAAA,qBACExF,KAAA,CAAA4D,aAAA;IAAOc,IAAI,EAAC,OAAO;IAACe,WAAW,EAAC,kDAAU;IAACL,KAAK,EAAEhC,QAAQ,CAACuB,KAAK,IAAI,EAAG;IAACe,QAAQ,EAAER,YAAa;IAACS,QAAQ;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC3GnE,KAAA,CAAA4D,aAAA;IAAOc,IAAI,EAAC,MAAM;IAAClB,IAAI,EAAC,MAAM;IAAC4B,KAAK,EAAEhC,QAAQ,CAACwC,IAAI,IAAI,EAAG;IAACF,QAAQ,EAAER,YAAa;IAACS,QAAQ;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC9FnE,KAAA,CAAA4D,aAAA;IAAOc,IAAI,EAAC,MAAM;IAACe,WAAW,EAAC,gCAAO;IAACL,KAAK,EAAEhC,QAAQ,CAACyC,IAAI,IAAI,EAAG;IAACH,QAAQ,EAAER,YAAa;IAACS,QAAQ;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACrG,CACH,EACAX,IAAI,KAAK,QAAQ,iBAChBxD,KAAA,CAAA4D,aAAA,CAAA5D,KAAA,CAAAwF,QAAA,qBACExF,KAAA,CAAA4D,aAAA;IAAOc,IAAI,EAAC,MAAM;IAACe,WAAW,EAAC,oBAAK;IAACL,KAAK,EAAEhC,QAAQ,CAACsB,IAAI,IAAI,EAAG;IAACgB,QAAQ,EAAER,YAAa;IAACS,QAAQ;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACnGX,IAAI,KAAK,SAAS,iBACjBxD,KAAA,CAAA4D,aAAA,CAAA5D,KAAA,CAAAwF,QAAA,qBACExF,KAAA,CAAA4D,aAAA;IAAQc,IAAI,EAAC,MAAM;IAACU,KAAK,EAAEhC,QAAQ,CAAC0C,IAAI,IAAI,EAAG;IAACJ,QAAQ,EAAER,YAAa;IAACS,QAAQ;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9EnE,KAAA,CAAA4D,aAAA;IAAQwB,KAAK,EAAC,EAAE;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2EAAqB,CAAC,EACtCtD,KAAK,CAACyD,GAAG,CAAEwB,IAAI,iBACd9F,KAAA,CAAA4D,aAAA;IAAQW,GAAG,EAAEuB,IAAK;IAACV,KAAK,EAAEU,IAAK;IAAAhC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE2B,IAAa,CAC/C,CACK,CAAC,eACT9F,KAAA,CAAA4D,aAAA;IAAOc,IAAI,EAAC,OAAO;IAACe,WAAW,EAAC,OAAO;IAACL,KAAK,EAAEhC,QAAQ,CAAC2C,KAAK,IAAI,EAAG;IAACL,QAAQ,EAAER,YAAa;IAACS,QAAQ;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACxGnE,KAAA,CAAA4D,aAAA;IAAOc,IAAI,EAAC,OAAO;IAACe,WAAW,EAAC,4CAAS;IAACL,KAAK,EAAEhC,QAAQ,CAAC4C,KAAK,IAAI,EAAG;IAACN,QAAQ,EAAER,YAAa;IAACS,QAAQ;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzG,CAEJ,CACH,eACDnE,KAAA,CAAA4D,aAAA;IAAUc,IAAI,EAAC,aAAa;IAACe,WAAW,EAAC,kDAAU;IAACL,KAAK,EAAEhC,QAAQ,CAAC6C,WAAW,IAAI,EAAG;IAACP,QAAQ,EAAER,YAAa;IAACS,QAAQ;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC1HnE,KAAA,CAAA4D,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BnE,KAAA,CAAA4D,aAAA;IAAQJ,IAAI,EAAC,QAAQ;IAACY,OAAO,EAAEY,QAAS;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sCAAc,CAAC,eACxDnE,KAAA,CAAA4D,aAAA;IAAQJ,IAAI,EAAC,QAAQ;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wDAAiB,CACpC,CACD,CACH,CAAC;AAEV;AAEA,eAAerD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}