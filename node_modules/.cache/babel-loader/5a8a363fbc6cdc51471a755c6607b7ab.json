{"ast":null,"code":"/*\n\nimport React, { useState } from 'react';\nimport './css/work.css'\n\nconst locations = [\n  { \n    id: 1, \n    name: 'Арбат',\n    image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?w=800'\n  },\n  { \n    id: 2, \n    name: 'Проспект мира',\n    image: 'https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?w=800'\n  },\n  { \n    id: 3, \n    name: 'Никольская',\n    image: 'https://images.unsplash.com/photo-1514933651103-005eec06c04b?w=800'\n  }\n]\n\nconst employeeStatuses = [\n  'Официант',\n  'Бармен',\n  'Повар',\n  'Хостес',\n  'Управляющий'\n]\n\nconst employees = [\n  {\n    id: 1,\n    name: 'Алексей Смирнов',\n    location: 'Арбат',\n    status: 'Официант',\n    image: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=500',\n    experience: '2 года работы',\n    specialization: 'Специализируется на винной карте, отлично знает европейскую кухню'\n  },\n  {\n    id: 2,\n    name: 'Елена Козлова',\n    location: 'Проспект мира',\n    status: 'Бармен',\n    image: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=500',\n    experience: '5 лет работы',\n    specialization: 'Эксперт по коктейлям, победитель городского конкурса барменов 2024'\n  },\n  {\n    id: 3,\n    name: 'Дмитрий Петров',\n    location: 'Никольская',\n    status: 'Повар',\n    image: 'https://images.unsplash.com/photo-1560250097-0b93528c311a?w=500',\n    experience: '8 лет работы',\n    specialization: 'Шеф-повар, специализация на итальянской кухне'\n  },\n]\n\nfunction Modal({ isOpen, onClose, children }) {\n  if (!isOpen) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nfunction EmployeesPage() {\n  const [selectedLocation, setSelectedLocation] = useState(null)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedStatus, setSelectedStatus] = useState('all')\n  const [selectedEmployee, setSelectedEmployee] = useState(null)\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  const closeModal = () => {\n    setModalIsOpen(false)\n    setSelectedEmployee(null)\n  }\n\n  if (!selectedLocation) {\n    return (\n      <div className=\"location-select\">\n        <h1 className=\"location-title\">Выберите локацию</h1>\n        <div className=\"location-grid\">\n          {locations.map(location => (\n            <div\n              key={location.id}\n              className=\"location-card\"\n              onClick={() => setSelectedLocation(location.name)}\n            >\n              <div \n                className=\"location-image\" \n                style={{ backgroundImage: `url(${location.image})` }}\n              />\n              <h2 className=\"location-name\">{location.name}</h2>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const filteredEmployees = employees.filter(employee =>\n    employee.name.toLowerCase().includes(searchTerm.toLowerCase()) &&\n    (selectedLocation === 'all' || employee.location === selectedLocation) &&\n    (selectedStatus === 'all' || employee.status === selectedStatus)\n  )\n\n  return (\n    <>\n      <div className={`main-content ${modalIsOpen ? 'blur-background' : ''}`}>\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Поиск по имени...\"\n            className=\"search-input\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <select\n            className=\"location-filter\"\n            value={selectedLocation}\n            onChange={(e) => setSelectedLocation(e.target.value)}\n          >\n            <option value=\"all\">Все локации</option>\n            {locations.map(location => (\n              <option key={location.id} value={location.name}>\n                {location.name}\n              </option>\n            ))}\n          </select>\n          <select\n            className=\"status-filter\"\n            value={selectedStatus}\n            onChange={(e) => setSelectedStatus(e.target.value)}\n          >\n            <option value=\"all\">Все должности</option>\n            {employeeStatuses.map(status => (\n              <option key={status} value={status}>\n                {status}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"regulars-grid\">\n          {filteredEmployees.map(employee => (\n            <div\n              key={employee.id}\n              className=\"regular-card\"\n              onClick={() => {\n                setSelectedEmployee(employee)\n                setModalIsOpen(true)\n              }}\n            >\n              <img src={employee.image} alt={employee.name} className=\"regular-image\" />\n              <div className=\"regular-info\">\n                <h3 className=\"regular-name\">{employee.name}</h3>\n                <p className=\"employee-status\">{employee.status}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <Modal isOpen={modalIsOpen} onClose={closeModal}>\n        {selectedEmployee && (\n          <>\n            <div className=\"modal-header\">\n              <h2>{selectedEmployee.name}</h2>\n              <button\n                className=\"close-button\"\n                onClick={closeModal}\n              >\n                ×\n              </button>\n            </div>\n            <img\n              src={selectedEmployee.image}\n              alt={selectedEmployee.name}\n              className=\"modal-image\"\n            />\n            <div className=\"modal-details\">\n              <p><strong>Должность:</strong> {selectedEmployee.status}</p>\n              <p><strong>Локация:</strong> {selectedEmployee.location}</p>\n              <p><strong>Опыт:</strong> {selectedEmployee.experience}</p>\n              <p><strong>Специализация:</strong> {selectedEmployee.specialization}</p>\n            </div>\n          </>\n        )}\n      </Modal>\n    </>\n  )\n}\n\nexport default EmployeesPage\n\n*/","map":{"version":3,"names":[],"sources":["/home/f1alka/front_fut/front2.0/src/pages/Workers.jsx"],"sourcesContent":["/*\n\nimport React, { useState } from 'react';\nimport './css/work.css'\n\nconst locations = [\n  { \n    id: 1, \n    name: 'Арбат',\n    image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?w=800'\n  },\n  { \n    id: 2, \n    name: 'Проспект мира',\n    image: 'https://images.unsplash.com/photo-1537047902294-62a40c20a6ae?w=800'\n  },\n  { \n    id: 3, \n    name: 'Никольская',\n    image: 'https://images.unsplash.com/photo-1514933651103-005eec06c04b?w=800'\n  }\n]\n\nconst employeeStatuses = [\n  'Официант',\n  'Бармен',\n  'Повар',\n  'Хостес',\n  'Управляющий'\n]\n\nconst employees = [\n  {\n    id: 1,\n    name: 'Алексей Смирнов',\n    location: 'Арбат',\n    status: 'Официант',\n    image: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=500',\n    experience: '2 года работы',\n    specialization: 'Специализируется на винной карте, отлично знает европейскую кухню'\n  },\n  {\n    id: 2,\n    name: 'Елена Козлова',\n    location: 'Проспект мира',\n    status: 'Бармен',\n    image: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=500',\n    experience: '5 лет работы',\n    specialization: 'Эксперт по коктейлям, победитель городского конкурса барменов 2024'\n  },\n  {\n    id: 3,\n    name: 'Дмитрий Петров',\n    location: 'Никольская',\n    status: 'Повар',\n    image: 'https://images.unsplash.com/photo-1560250097-0b93528c311a?w=500',\n    experience: '8 лет работы',\n    specialization: 'Шеф-повар, специализация на итальянской кухне'\n  },\n]\n\nfunction Modal({ isOpen, onClose, children }) {\n  if (!isOpen) return null\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nfunction EmployeesPage() {\n  const [selectedLocation, setSelectedLocation] = useState(null)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedStatus, setSelectedStatus] = useState('all')\n  const [selectedEmployee, setSelectedEmployee] = useState(null)\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  const closeModal = () => {\n    setModalIsOpen(false)\n    setSelectedEmployee(null)\n  }\n\n  if (!selectedLocation) {\n    return (\n      <div className=\"location-select\">\n        <h1 className=\"location-title\">Выберите локацию</h1>\n        <div className=\"location-grid\">\n          {locations.map(location => (\n            <div\n              key={location.id}\n              className=\"location-card\"\n              onClick={() => setSelectedLocation(location.name)}\n            >\n              <div \n                className=\"location-image\" \n                style={{ backgroundImage: `url(${location.image})` }}\n              />\n              <h2 className=\"location-name\">{location.name}</h2>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const filteredEmployees = employees.filter(employee =>\n    employee.name.toLowerCase().includes(searchTerm.toLowerCase()) &&\n    (selectedLocation === 'all' || employee.location === selectedLocation) &&\n    (selectedStatus === 'all' || employee.status === selectedStatus)\n  )\n\n  return (\n    <>\n      <div className={`main-content ${modalIsOpen ? 'blur-background' : ''}`}>\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Поиск по имени...\"\n            className=\"search-input\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <select\n            className=\"location-filter\"\n            value={selectedLocation}\n            onChange={(e) => setSelectedLocation(e.target.value)}\n          >\n            <option value=\"all\">Все локации</option>\n            {locations.map(location => (\n              <option key={location.id} value={location.name}>\n                {location.name}\n              </option>\n            ))}\n          </select>\n          <select\n            className=\"status-filter\"\n            value={selectedStatus}\n            onChange={(e) => setSelectedStatus(e.target.value)}\n          >\n            <option value=\"all\">Все должности</option>\n            {employeeStatuses.map(status => (\n              <option key={status} value={status}>\n                {status}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"regulars-grid\">\n          {filteredEmployees.map(employee => (\n            <div\n              key={employee.id}\n              className=\"regular-card\"\n              onClick={() => {\n                setSelectedEmployee(employee)\n                setModalIsOpen(true)\n              }}\n            >\n              <img src={employee.image} alt={employee.name} className=\"regular-image\" />\n              <div className=\"regular-info\">\n                <h3 className=\"regular-name\">{employee.name}</h3>\n                <p className=\"employee-status\">{employee.status}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <Modal isOpen={modalIsOpen} onClose={closeModal}>\n        {selectedEmployee && (\n          <>\n            <div className=\"modal-header\">\n              <h2>{selectedEmployee.name}</h2>\n              <button\n                className=\"close-button\"\n                onClick={closeModal}\n              >\n                ×\n              </button>\n            </div>\n            <img\n              src={selectedEmployee.image}\n              alt={selectedEmployee.name}\n              className=\"modal-image\"\n            />\n            <div className=\"modal-details\">\n              <p><strong>Должность:</strong> {selectedEmployee.status}</p>\n              <p><strong>Локация:</strong> {selectedEmployee.location}</p>\n              <p><strong>Опыт:</strong> {selectedEmployee.experience}</p>\n              <p><strong>Специализация:</strong> {selectedEmployee.specialization}</p>\n            </div>\n          </>\n        )}\n      </Modal>\n    </>\n  )\n}\n\nexport default EmployeesPage\n\n*/"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}