{"ast":null,"code":"var _jsxFileName = \"/home/f1alka/front_fut/front2.0/src/pages/Table.jsx\";\n/* import { useState, useEffect } from 'react';\nimport './css/table.css';\nimport React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(\"Ошибка в компоненте:\", error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Что-то пошло не так...</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nfunction App() {\n  const [workdays, setWorkdays] = useState([]);  // Данные о рабочих днях\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);  // Общее количество рабочих дней\n  const [searchName, setSearchName] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const itemsPerPage = 10;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://172.20.10.2:8000/workdays/get_list_workdays?page=${currentPage}&limit=${itemsPerPage}`);\n        const data = await response.json();\n\n        // Проверка структуры данных и обновление состояний\n        if (data && Array.isArray(data)) {\n          setWorkdays(data);  // Данные о рабочих днях\n          setTotalItems(data.length);  // Общее количество\n        }\n      } catch (error) {\n        console.error('Ошибка при загрузке данных:', error);\n      }\n    };\n\n    fetchData();\n  }, [currentPage]);\n\n  const filteredWorkdays = workdays.filter(workday => {\n    const nameMatch = workday.employer_fio.toLowerCase().includes(searchName.toLowerCase());\n    const dateMatch = !selectedDate || workday.work_time.startsWith(selectedDate);\n    return nameMatch && dateMatch;\n  });\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentWorkdays = filteredWorkdays.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  const getStatusText = (status) => {\n    switch (status) {\n      case 0: return 'работает';\n      case 1: return 'не начал';\n      case 2: return 'не пришел';\n      default: return '';\n    }\n  };\n\n  const getStatusClass = (status) => {\n    switch (status) {\n      case 0: return 'status-working';\n      case 1: return 'status-not-started';\n      case 2: return 'status-absent';\n      default: return '';\n    }\n  };\n\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const maxVisiblePages = 5;\n    \n    if (totalPages <= maxVisiblePages) {\n      for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      pageNumbers.push(1);\n      \n      if (currentPage > 3) {\n        pageNumbers.push('...');\n      }\n      \n      for (let i = Math.max(2, currentPage - 1); i <= Math.min(totalPages - 1, currentPage + 1); i++) {\n        pageNumbers.push(i);\n      }\n      \n      if (currentPage < totalPages - 2) {\n        pageNumbers.push('...');\n      }\n      \n      pageNumbers.push(totalPages);\n    }\n    \n    return pageNumbers;\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\"schedule-container\">\n        <div className=\"header\">\n          <h1>Расписание сотрудников</h1>\n          <p>Управление расписанием и статусами сотрудников</p>\n        </div>\n\n        <div className=\"filters\">\n          <div className=\"filters-grid\">\n            <div className=\"filter-group\">\n              <label>Поиск по ФИО</label>\n              <input\n                type=\"text\"\n                value={searchName}\n                onChange={(e) => setSearchName(e.target.value)}\n                placeholder=\"Введите ФИО сотрудника\"\n              />\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Фильтр по дате</label>\n              <input\n                type=\"date\"\n                value={selectedDate}\n                onChange={(e) => setSelectedDate(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n\n        {filteredWorkdays.length === 0 ? (\n          <div className=\"no-data\">Нет данных для отображения</div>\n        ) : (\n          <div className=\"employees-grid\">\n            {currentWorkdays.map(workday => (\n              <div key={workday.id} className=\"employee-card\">\n                <div className=\"card-content\">\n                  <h3 className=\"employee-name\">{workday.employer_fio}</h3>\n                  <p className=\"employee-date\">{new Date(workday.work_time).toLocaleDateString()}</p>\n                  <span className={`status-badge ${getStatusClass(workday.status)}`}>\n                    {getStatusText(workday.status)}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {totalPages > 1 && (\n          <div className=\"pagination\">\n            <button\n              onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n              disabled={currentPage === 1}\n            >\n              ←\n            </button>\n            \n            {getPageNumbers().map((pageNum, index) => (\n              pageNum === '...' ? (\n                <span key={`ellipsis-${index}`} className=\"ellipsis\">\n                  ...\n                </span>\n              ) : (\n                <button\n                  key={pageNum}\n                  onClick={() => setCurrentPage(pageNum)}\n                  className={currentPage === pageNum ? 'active' : ''}\n                >\n                  {pageNum}\n                </button>\n              )\n            ))}\n            \n            <button\n              onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n              disabled={currentPage === totalPages}\n            >\n              →\n            </button>\n          </div>\n        )}\n\n        <div className=\"results-counter\">\n          Показано {indexOfFirstItem + 1}-{Math.min(indexOfLastItem, filteredWorkdays.length)} из {totalItems} сотрудников\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n*/\n\nimport React, { useState } from 'react';\nimport './css/LocationSelect.css';\nimport './css/Schedule.css';\n\n// Компонент Table\n\n// Компонент LocationSelect\nexport function LocationSelect({\n  locations,\n  onSelect\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044E\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, locations.map(location => /*#__PURE__*/React.createElement(\"div\", {\n    key: location.id,\n    className: \"location-card\",\n    onClick: () => onSelect(location),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: location.image,\n    alt: location.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, location.name)))));\n}\n\n// Компонент Schedule\nexport function Schedule({\n  location\n}) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedPosition, setSelectedPosition] = useState('');\n  const [selectedLocation, setSelectedLocation] = useState((location === null || location === void 0 ? void 0 : location.name) || '');\n  const employees = [{\n    id: 1,\n    name: 'Иванов Иван',\n    position: 'Официант',\n    location: 'Арбат',\n    schedule: {\n      date: '2024-03-18',\n      time: '10:00 - 18:00'\n    }\n  }, {\n    id: 2,\n    name: 'Петрова Анна',\n    position: 'Бармен',\n    location: 'Проспект мира',\n    schedule: {\n      date: '2024-03-19',\n      time: '12:00 - 20:00'\n    }\n  }, {\n    id: 3,\n    name: 'Сидоров Алексей',\n    position: 'Администратор',\n    location: 'Никольская',\n    schedule: {\n      date: '2024-03-20',\n      time: '09:00 - 17:00'\n    }\n  }, {\n    id: 4,\n    name: 'Козлова Елена',\n    position: 'Повар',\n    location: 'Арбат',\n    schedule: {\n      date: '2024-03-21',\n      time: '08:00 - 16:00'\n    }\n  }, {\n    id: 5,\n    name: 'Морозов Дмитрий',\n    position: 'Официант',\n    location: 'Проспект мира',\n    schedule: {\n      date: '2024-03-22',\n      time: '14:00 - 22:00'\n    }\n  }, {\n    id: 6,\n    name: 'Волкова Ольга',\n    position: 'Бармен',\n    location: 'Никольская',\n    schedule: {\n      date: '2024-03-23',\n      time: '11:00 - 19:00'\n    }\n  }, {\n    id: 7,\n    name: 'Новиков Сергей',\n    position: 'Администратор',\n    location: 'Арбат',\n    schedule: {\n      date: '2024-03-24',\n      time: '10:00 - 18:00'\n    }\n  }, {\n    id: 8,\n    name: 'Лебедева Мария',\n    position: 'Повар',\n    location: 'Проспект мира',\n    schedule: {\n      date: '2024-03-25',\n      time: '07:00 - 15:00'\n    }\n  }, {\n    id: 9,\n    name: 'Кузнецов Андрей',\n    position: 'Официант',\n    location: 'Никольская',\n    schedule: {\n      date: '2024-03-26',\n      time: '13:00 - 21:00'\n    }\n  }, {\n    id: 10,\n    name: 'Соколова Виктория',\n    position: 'Бармен',\n    location: 'Арбат',\n    schedule: {\n      date: '2024-03-27',\n      time: '12:00 - 20:00'\n    }\n  }];\n  const positions = ['Официант', 'Бармен', 'Администратор', 'Повар'];\n  const locations = ['Арбат', 'Проспект мира', 'Никольская'];\n  const filteredEmployees = employees.filter(employee => {\n    const matchesSearch = employee.name.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesPosition = !selectedPosition || employee.position === selectedPosition;\n    const matchesDate = !selectedDate || employee.schedule.date === selectedDate;\n    const matchesLocation = !selectedLocation || employee.location === selectedLocation;\n    return matchesSearch && matchesPosition && matchesDate && matchesLocation;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"schedule-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, \"\\u0420\\u0430\\u0441\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u043E\\u0432\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0438\\u043C\\u0435\\u043D\\u0438\",\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: selectedDate,\n    onChange: e => setSelectedDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedPosition,\n    onChange: e => setSelectedPosition(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, \"\\u0412\\u0441\\u0435 \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E\\u0441\\u0442\\u0438\"), positions.map(position => /*#__PURE__*/React.createElement(\"option\", {\n    key: position,\n    value: position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, position))), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedLocation,\n    onChange: e => setSelectedLocation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, \"\\u0412\\u0441\\u0435 \\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u0438\"), locations.map(loc => /*#__PURE__*/React.createElement(\"option\", {\n    key: loc,\n    value: loc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, loc))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"employee-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, filteredEmployees.map(employee => /*#__PURE__*/React.createElement(\"div\", {\n    key: employee.id,\n    className: \"employee-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"employee-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }, employee.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, employee.position), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 15\n    }\n  }, employee.location), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  }, employee.schedule.time))))));\n}\n\n// Главный компонент TableApp\nexport function TableApp() {\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const locations = [{\n    id: 1,\n    name: 'Арбат',\n    image: '/images/arbat.jpg'\n  }, {\n    id: 2,\n    name: 'Проспект мира',\n    image: './prospekt_mira.jpg'\n  }, {\n    id: 3,\n    name: 'Никольская',\n    image: './nikolskaya.jpg'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 5\n    }\n  }, !selectedLocation ? /*#__PURE__*/React.createElement(LocationSelect, {\n    locations: locations,\n    onSelect: setSelectedLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Schedule, {\n    location: selectedLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","LocationSelect","locations","onSelect","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","location","key","id","onClick","src","image","alt","name","Schedule","searchQuery","setSearchQuery","selectedDate","setSelectedDate","selectedPosition","setSelectedPosition","selectedLocation","setSelectedLocation","employees","position","schedule","date","time","positions","filteredEmployees","filter","employee","matchesSearch","toLowerCase","includes","matchesPosition","matchesDate","matchesLocation","type","placeholder","value","onChange","e","target","loc","TableApp"],"sources":["/home/f1alka/front_fut/front2.0/src/pages/Table.jsx"],"sourcesContent":["/* import { useState, useEffect } from 'react';\nimport './css/table.css';\nimport React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(\"Ошибка в компоненте:\", error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Что-то пошло не так...</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nfunction App() {\n  const [workdays, setWorkdays] = useState([]);  // Данные о рабочих днях\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);  // Общее количество рабочих дней\n  const [searchName, setSearchName] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const itemsPerPage = 10;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://172.20.10.2:8000/workdays/get_list_workdays?page=${currentPage}&limit=${itemsPerPage}`);\n        const data = await response.json();\n\n        // Проверка структуры данных и обновление состояний\n        if (data && Array.isArray(data)) {\n          setWorkdays(data);  // Данные о рабочих днях\n          setTotalItems(data.length);  // Общее количество\n        }\n      } catch (error) {\n        console.error('Ошибка при загрузке данных:', error);\n      }\n    };\n\n    fetchData();\n  }, [currentPage]);\n\n  const filteredWorkdays = workdays.filter(workday => {\n    const nameMatch = workday.employer_fio.toLowerCase().includes(searchName.toLowerCase());\n    const dateMatch = !selectedDate || workday.work_time.startsWith(selectedDate);\n    return nameMatch && dateMatch;\n  });\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentWorkdays = filteredWorkdays.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  const getStatusText = (status) => {\n    switch (status) {\n      case 0: return 'работает';\n      case 1: return 'не начал';\n      case 2: return 'не пришел';\n      default: return '';\n    }\n  };\n\n  const getStatusClass = (status) => {\n    switch (status) {\n      case 0: return 'status-working';\n      case 1: return 'status-not-started';\n      case 2: return 'status-absent';\n      default: return '';\n    }\n  };\n\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const maxVisiblePages = 5;\n    \n    if (totalPages <= maxVisiblePages) {\n      for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      pageNumbers.push(1);\n      \n      if (currentPage > 3) {\n        pageNumbers.push('...');\n      }\n      \n      for (let i = Math.max(2, currentPage - 1); i <= Math.min(totalPages - 1, currentPage + 1); i++) {\n        pageNumbers.push(i);\n      }\n      \n      if (currentPage < totalPages - 2) {\n        pageNumbers.push('...');\n      }\n      \n      pageNumbers.push(totalPages);\n    }\n    \n    return pageNumbers;\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\"schedule-container\">\n        <div className=\"header\">\n          <h1>Расписание сотрудников</h1>\n          <p>Управление расписанием и статусами сотрудников</p>\n        </div>\n\n        <div className=\"filters\">\n          <div className=\"filters-grid\">\n            <div className=\"filter-group\">\n              <label>Поиск по ФИО</label>\n              <input\n                type=\"text\"\n                value={searchName}\n                onChange={(e) => setSearchName(e.target.value)}\n                placeholder=\"Введите ФИО сотрудника\"\n              />\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Фильтр по дате</label>\n              <input\n                type=\"date\"\n                value={selectedDate}\n                onChange={(e) => setSelectedDate(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n\n        {filteredWorkdays.length === 0 ? (\n          <div className=\"no-data\">Нет данных для отображения</div>\n        ) : (\n          <div className=\"employees-grid\">\n            {currentWorkdays.map(workday => (\n              <div key={workday.id} className=\"employee-card\">\n                <div className=\"card-content\">\n                  <h3 className=\"employee-name\">{workday.employer_fio}</h3>\n                  <p className=\"employee-date\">{new Date(workday.work_time).toLocaleDateString()}</p>\n                  <span className={`status-badge ${getStatusClass(workday.status)}`}>\n                    {getStatusText(workday.status)}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {totalPages > 1 && (\n          <div className=\"pagination\">\n            <button\n              onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n              disabled={currentPage === 1}\n            >\n              ←\n            </button>\n            \n            {getPageNumbers().map((pageNum, index) => (\n              pageNum === '...' ? (\n                <span key={`ellipsis-${index}`} className=\"ellipsis\">\n                  ...\n                </span>\n              ) : (\n                <button\n                  key={pageNum}\n                  onClick={() => setCurrentPage(pageNum)}\n                  className={currentPage === pageNum ? 'active' : ''}\n                >\n                  {pageNum}\n                </button>\n              )\n            ))}\n            \n            <button\n              onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n              disabled={currentPage === totalPages}\n            >\n              →\n            </button>\n          </div>\n        )}\n\n        <div className=\"results-counter\">\n          Показано {indexOfFirstItem + 1}-{Math.min(indexOfLastItem, filteredWorkdays.length)} из {totalItems} сотрудников\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n*/\n\n\nimport React, { useState } from 'react';\nimport './css/LocationSelect.css';\nimport './css/Schedule.css';\n\n// Компонент Table\n\n\n// Компонент LocationSelect\nexport function LocationSelect({ locations, onSelect }) {\n  return (\n    <div className=\"location-select\">\n      <h1>Выберите локацию</h1>\n      <div className=\"location-cards\">\n        {locations.map((location) => (\n          <div\n            key={location.id}\n            className=\"location-card\"\n            onClick={() => onSelect(location)}\n          >\n            <img src={location.image} alt={location.name} />\n            <h2>{location.name}</h2>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Компонент Schedule\nexport function Schedule({ location }) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedPosition, setSelectedPosition] = useState('');\n  const [selectedLocation, setSelectedLocation] = useState(location?.name || '');\n\n  const employees = [\n    {\n      id: 1,\n      name: 'Иванов Иван',\n      position: 'Официант',\n      location: 'Арбат',\n      schedule: { date: '2024-03-18', time: '10:00 - 18:00' },\n    },\n    {\n      id: 2,\n      name: 'Петрова Анна',\n      position: 'Бармен',\n      location: 'Проспект мира',\n      schedule: { date: '2024-03-19', time: '12:00 - 20:00' },\n    },\n    {\n      id: 3,\n      name: 'Сидоров Алексей',\n      position: 'Администратор',\n      location: 'Никольская',\n      schedule: { date: '2024-03-20', time: '09:00 - 17:00' },\n    },\n    {\n      id: 4,\n      name: 'Козлова Елена',\n      position: 'Повар',\n      location: 'Арбат',\n      schedule: { date: '2024-03-21', time: '08:00 - 16:00' },\n    },\n    {\n      id: 5,\n      name: 'Морозов Дмитрий',\n      position: 'Официант',\n      location: 'Проспект мира',\n      schedule: { date: '2024-03-22', time: '14:00 - 22:00' },\n    },\n    {\n      id: 6,\n      name: 'Волкова Ольга',\n      position: 'Бармен',\n      location: 'Никольская',\n      schedule: { date: '2024-03-23', time: '11:00 - 19:00' },\n    },\n    {\n      id: 7,\n      name: 'Новиков Сергей',\n      position: 'Администратор',\n      location: 'Арбат',\n      schedule: { date: '2024-03-24', time: '10:00 - 18:00' },\n    },\n    {\n      id: 8,\n      name: 'Лебедева Мария',\n      position: 'Повар',\n      location: 'Проспект мира',\n      schedule: { date: '2024-03-25', time: '07:00 - 15:00' },\n    },\n    {\n      id: 9,\n      name: 'Кузнецов Андрей',\n      position: 'Официант',\n      location: 'Никольская',\n      schedule: { date: '2024-03-26', time: '13:00 - 21:00' },\n    },\n    {\n      id: 10,\n      name: 'Соколова Виктория',\n      position: 'Бармен',\n      location: 'Арбат',\n      schedule: { date: '2024-03-27', time: '12:00 - 20:00' },\n    },\n  ];\n\n  const positions = ['Официант', 'Бармен', 'Администратор', 'Повар'];\n  const locations = ['Арбат', 'Проспект мира', 'Никольская'];\n\n  const filteredEmployees = employees.filter((employee) => {\n    const matchesSearch = employee.name.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesPosition = !selectedPosition || employee.position === selectedPosition;\n    const matchesDate = !selectedDate || employee.schedule.date === selectedDate;\n    const matchesLocation = !selectedLocation || employee.location === selectedLocation;\n    return matchesSearch && matchesPosition && matchesDate && matchesLocation;\n  });\n\n  return (\n    <div className=\"schedule\">\n      <div className=\"schedule-header\">\n        <h1>Расписание сотрудников</h1>\n        <div className=\"filters\">\n          <input\n            type=\"text\"\n            placeholder=\"Поиск по имени\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n          <input\n            type=\"date\"\n            value={selectedDate}\n            onChange={(e) => setSelectedDate(e.target.value)}\n          />\n          <select\n            value={selectedPosition}\n            onChange={(e) => setSelectedPosition(e.target.value)}\n          >\n            <option value=\"\">Все должности</option>\n            {positions.map((position) => (\n              <option key={position} value={position}>\n                {position}\n              </option>\n            ))}\n          </select>\n          <select\n            value={selectedLocation}\n            onChange={(e) => setSelectedLocation(e.target.value)}\n          >\n            <option value=\"\">Все локации</option>\n            {locations.map((loc) => (\n              <option key={loc} value={loc}>\n                {loc}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"employee-cards\">\n        {filteredEmployees.map((employee) => (\n          <div key={employee.id} className=\"employee-card\">\n            <div className=\"employee-info\">\n              <h3>{employee.name}</h3>\n              <p>{employee.position}</p>\n              <p>{employee.location}</p>\n              <p>{employee.schedule.time}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Главный компонент TableApp\nexport function TableApp() {\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  const locations = [\n    { id: 1, name: 'Арбат', image: '/images/arbat.jpg' },\n    { id: 2, name: 'Проспект мира', image: './prospekt_mira.jpg' },\n    { id: 3, name: 'Никольская', image: './nikolskaya.jpg' },\n  ];\n\n  return (\n    <div className=\"app\">\n      {!selectedLocation ? (\n        <LocationSelect locations={locations} onSelect={setSelectedLocation} />\n      ) : (\n        <Schedule location={selectedLocation} />\n      )}\n    </div>\n  );\n}"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}