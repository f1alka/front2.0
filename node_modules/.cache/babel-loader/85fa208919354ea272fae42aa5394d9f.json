{"ast":null,"code":"var _jsxFileName = \"/home/f1alka/front_fut/front2.0/src/pages/Profile.jsx\";\n/*\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport './css/Home.css';\nimport './css/table.css';\n\nconst Profile = () => {\n  const [profile, setProfile] = useState(null);\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [workDays, setWorkDays] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      setLoading(true);\n      setError(null);\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Нет токена авторизации');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('http://172.20.10.2:8000/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки профиля: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setProfile(data.user);\n        setWorkDays(data.work_days);\n\n        const userId = data.user.id;\n        const photoUrl = userId ? `http://172.20.10.2:8000/files/employer/${userId}/get-photo` : null;\n\n        if (photoUrl) {\n          const photoResponse = await fetch(photoUrl, {\n            method: 'GET',\n            headers: { 'Authorization': `Bearer ${token}` },\n          });\n\n          if (photoResponse.ok) {\n            const photoData = await photoResponse.json();\n            if (photoData.status === 'success' && photoData.file_url) {\n              setPhotoUrl(photoData.file_url.url);\n            }\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProfile();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"main-content\">\n        <Header title=\"Личный кабинет\" subtitle=\"Ваши данные\" />\n\n        {loading ? (\n          <p>Загрузка...</p>\n        ) : error ? (\n          <p className=\"error\">{error}</p>\n        ) : profile ? (\n          <>\n            <div className=\"profile-header\">\n              <div className=\"profile-photo\">\n                <img id=\"test-image\" src={photoUrl || ''} alt=\"Фото пользователя\" />\n              </div>\n              <div className=\"profile-info\">\n                <h1 className=\"profile-name\">{profile.fio}</h1>\n              </div>\n            </div>\n\n            <div className=\"profile-details\">\n              <div className=\"profile-job\">\n                <p>Должность: <span>{profile.work_type}</span></p>\n              </div>\n              <div className=\"personal-data\">\n                <h2>Личные данные</h2>\n                <ul>\n                  <li><strong>Email:</strong> {profile.email}</li>\n                  <li><strong>Контакты:</strong> {profile.contacts?.join(', ') || 'Нет данных'}</li>\n                  {profile.description && (\n                    <li><strong>Описание:</strong> <span style={{ fontWeight: 'bold' }}>{profile.description}</span></li>\n                  )}\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"schedule-container\" style={{ maxHeight: '400px', overflowY: 'auto' }}>\n              {workDays.length === 0 ? (\n                <div className=\"no-data\">Нет данных для отображения</div>\n              ) : (\n                <div className=\"employees-list\" style={{ display: 'block' }}>\n                  {workDays.map((workday, index) => (\n                    <div key={index} className=\"employee-card\" style={{ marginBottom: '15px' }}>\n                      <div className=\"card-content\">\n                        <h3 className=\"employee-name\">{workday.employer_fio}</h3>\n                        <p className=\"employee-date\">{new Date(workday.work_time).toLocaleDateString()}</p>\n                        <span className={`status-badge ${workday.status === 1 ? 'status-working' : 'status-absent'}`}>\n                          {workday.status === 1 ? 'Работал' : 'Отсутствовал'}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <p>Нет данных</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n*/\n\n/*\nimport React from 'react';\nimport './css/profile.css'\n\nfunction App() {\n  const employeeData = {\n    name: 'Иван Петров',\n    position: 'Старший кальянщик',\n    photo: 'https://sun9-23.userapi.com/impg/pG-hMO4mKKtBsF7p71dimlhpILr4OoSgSDQ5DA/KN_bTdlS_-Y.jpg?size=2560x1706&quality=95&sign=d424de847538d01077c9e48539ecd4d9&type=album',\n    description: 'Старший кальянщик, обладающий большим опытом работы в кальянном оборудовании. П',\n    contacts: [\n      { type: 'Email', value: 'uzbek.petrov@company.com' },\n      { type: 'Телефон', value: '+7 (999) 123-45-67' },\n      { type: 'Skype', value: 'ivan.petrov.dev' }\n    ],\n    schedule: [\n      {\n        date: '2024-03-18',\n        time: '10:00 - 11:30'\n      },\n      {\n        date: '2024-03-18',\n        time: '13:00 - 15:00'\n      },\n      {\n        date: '2024-03-18',\n        time: '16:00 - 17:30'\n      },\n      {\n        date: '2024-03-19',\n        time: '11:00 - 12:30'\n      },\n      {\n        date: '2024-03-19',\n        time: '14:00 - 16:00'\n      }\n    ]\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <img \n          src={employeeData.photo} \n          alt={employeeData.name} \n          className=\"profile-image\"\n        />\n        <div className=\"profile-info\">\n          <h1 className=\"profile-name\">{employeeData.name}</h1>\n          <h2 className=\"profile-position\">{employeeData.position}</h2>\n          \n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">О сотруднике</h3>\n            <p className=\"profile-description\">{employeeData.description}</p>\n          </div>\n\n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">Контактная информация</h3>\n            <ul className=\"profile-contacts\">\n              {employeeData.contacts.map((contact, index) => (\n                <li key={index} className=\"contact-item\">\n                  <span className=\"contact-label\">{contact.type}:</span>\n                  <span className=\"contact-value\">{contact.value}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <section className=\"schedule-section\">\n        <h2 className=\"schedule-title\">Расписание</h2>\n        <div className=\"schedule-cards\">\n          {employeeData.schedule.map((item, index) => (\n            <div key={index} className=\"schedule-card\">\n              <div className=\"card-date\">\n                {new Date(item.date).toLocaleDateString('ru-RU', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </div>\n              <div className=\"card-time\">{item.time}</div>\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App\n\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport './css/profile.css';\nfunction App() {\n  var _employeeData$contact;\n  const [employeeData, setEmployeeData] = useState(null);\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProfile = async () => {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Нет токена авторизации');\n        setLoading(false);\n        return;\n      }\n      try {\n        // Запрос профиля\n        const response = await fetch('http://176.114.90.207:8000/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки профиля: ${response.status}`);\n        }\n        const data = await response.json();\n        setEmployeeData(data.user);\n\n        // Запрос фото\n        const userId = data.user.id;\n        if (userId) {\n          const photoResponse = await fetch(`http://176.114.90.207:8000/files/employer/${userId}/get-photo`, {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (photoResponse.ok) {\n            const photoData = await photoResponse.json();\n            if (photoData.status === 'success' && photoData.file_url) {\n              setPhotoUrl(photoData.file_url.url);\n            }\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProfile();\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 23\n    }\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 5\n    }\n  }, employeeData ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: photoUrl || 'https://via.placeholder.com/150',\n    alt: employeeData.name,\n    className: \"profile-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"profile-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, employeeData.fio), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"profile-position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, employeeData.work_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"info-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, \"\\u041E \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0435\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, employeeData.description || 'Нет описания')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"info-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"profile-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 23\n    }\n  }, \"Email:\"), \" \", employeeData.email), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 23\n    }\n  }, \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B:\"), \" \", ((_employeeData$contact = employeeData.contacts) === null || _employeeData$contact === void 0 ? void 0 : _employeeData$contact.join(', ')) || 'Нет данных'))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"schedule-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"schedule-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, \"\\u0420\\u0430\\u0441\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"schedule-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, employeeData.work_days && employeeData.work_days.length > 0 ? employeeData.work_days.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"schedule-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, new Date(item.work_time).toLocaleDateString('ru-RU', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }, item.work_time))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }\n  }, \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\")))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }, \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","App","_employeeData$contact","employeeData","setEmployeeData","photoUrl","setPhotoUrl","loading","setLoading","error","setError","fetchProfile","token","localStorage","getItem","response","fetch","method","headers","ok","Error","status","data","json","user","userId","id","photoResponse","photoData","file_url","url","err","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","Fragment","src","alt","name","fio","work_type","description","email","contacts","join","work_days","length","map","item","index","key","Date","work_time","toLocaleDateString","weekday","year","month","day"],"sources":["/home/f1alka/front_fut/front2.0/src/pages/Profile.jsx"],"sourcesContent":["/*\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport './css/Home.css';\nimport './css/table.css';\n\nconst Profile = () => {\n  const [profile, setProfile] = useState(null);\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [workDays, setWorkDays] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      setLoading(true);\n      setError(null);\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Нет токена авторизации');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('http://172.20.10.2:8000/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки профиля: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setProfile(data.user);\n        setWorkDays(data.work_days);\n\n        const userId = data.user.id;\n        const photoUrl = userId ? `http://172.20.10.2:8000/files/employer/${userId}/get-photo` : null;\n\n        if (photoUrl) {\n          const photoResponse = await fetch(photoUrl, {\n            method: 'GET',\n            headers: { 'Authorization': `Bearer ${token}` },\n          });\n\n          if (photoResponse.ok) {\n            const photoData = await photoResponse.json();\n            if (photoData.status === 'success' && photoData.file_url) {\n              setPhotoUrl(photoData.file_url.url);\n            }\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProfile();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"main-content\">\n        <Header title=\"Личный кабинет\" subtitle=\"Ваши данные\" />\n\n        {loading ? (\n          <p>Загрузка...</p>\n        ) : error ? (\n          <p className=\"error\">{error}</p>\n        ) : profile ? (\n          <>\n            <div className=\"profile-header\">\n              <div className=\"profile-photo\">\n                <img id=\"test-image\" src={photoUrl || ''} alt=\"Фото пользователя\" />\n              </div>\n              <div className=\"profile-info\">\n                <h1 className=\"profile-name\">{profile.fio}</h1>\n              </div>\n            </div>\n\n            <div className=\"profile-details\">\n              <div className=\"profile-job\">\n                <p>Должность: <span>{profile.work_type}</span></p>\n              </div>\n              <div className=\"personal-data\">\n                <h2>Личные данные</h2>\n                <ul>\n                  <li><strong>Email:</strong> {profile.email}</li>\n                  <li><strong>Контакты:</strong> {profile.contacts?.join(', ') || 'Нет данных'}</li>\n                  {profile.description && (\n                    <li><strong>Описание:</strong> <span style={{ fontWeight: 'bold' }}>{profile.description}</span></li>\n                  )}\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"schedule-container\" style={{ maxHeight: '400px', overflowY: 'auto' }}>\n              {workDays.length === 0 ? (\n                <div className=\"no-data\">Нет данных для отображения</div>\n              ) : (\n                <div className=\"employees-list\" style={{ display: 'block' }}>\n                  {workDays.map((workday, index) => (\n                    <div key={index} className=\"employee-card\" style={{ marginBottom: '15px' }}>\n                      <div className=\"card-content\">\n                        <h3 className=\"employee-name\">{workday.employer_fio}</h3>\n                        <p className=\"employee-date\">{new Date(workday.work_time).toLocaleDateString()}</p>\n                        <span className={`status-badge ${workday.status === 1 ? 'status-working' : 'status-absent'}`}>\n                          {workday.status === 1 ? 'Работал' : 'Отсутствовал'}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <p>Нет данных</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n*/\n\n/*\nimport React from 'react';\nimport './css/profile.css'\n\nfunction App() {\n  const employeeData = {\n    name: 'Иван Петров',\n    position: 'Старший кальянщик',\n    photo: 'https://sun9-23.userapi.com/impg/pG-hMO4mKKtBsF7p71dimlhpILr4OoSgSDQ5DA/KN_bTdlS_-Y.jpg?size=2560x1706&quality=95&sign=d424de847538d01077c9e48539ecd4d9&type=album',\n    description: 'Старший кальянщик, обладающий большим опытом работы в кальянном оборудовании. П',\n    contacts: [\n      { type: 'Email', value: 'uzbek.petrov@company.com' },\n      { type: 'Телефон', value: '+7 (999) 123-45-67' },\n      { type: 'Skype', value: 'ivan.petrov.dev' }\n    ],\n    schedule: [\n      {\n        date: '2024-03-18',\n        time: '10:00 - 11:30'\n      },\n      {\n        date: '2024-03-18',\n        time: '13:00 - 15:00'\n      },\n      {\n        date: '2024-03-18',\n        time: '16:00 - 17:30'\n      },\n      {\n        date: '2024-03-19',\n        time: '11:00 - 12:30'\n      },\n      {\n        date: '2024-03-19',\n        time: '14:00 - 16:00'\n      }\n    ]\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <img \n          src={employeeData.photo} \n          alt={employeeData.name} \n          className=\"profile-image\"\n        />\n        <div className=\"profile-info\">\n          <h1 className=\"profile-name\">{employeeData.name}</h1>\n          <h2 className=\"profile-position\">{employeeData.position}</h2>\n          \n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">О сотруднике</h3>\n            <p className=\"profile-description\">{employeeData.description}</p>\n          </div>\n\n          <div className=\"info-card\">\n            <h3 className=\"info-card-title\">Контактная информация</h3>\n            <ul className=\"profile-contacts\">\n              {employeeData.contacts.map((contact, index) => (\n                <li key={index} className=\"contact-item\">\n                  <span className=\"contact-label\">{contact.type}:</span>\n                  <span className=\"contact-value\">{contact.value}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <section className=\"schedule-section\">\n        <h2 className=\"schedule-title\">Расписание</h2>\n        <div className=\"schedule-cards\">\n          {employeeData.schedule.map((item, index) => (\n            <div key={index} className=\"schedule-card\">\n              <div className=\"card-date\">\n                {new Date(item.date).toLocaleDateString('ru-RU', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </div>\n              <div className=\"card-time\">{item.time}</div>\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App\n\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport './css/profile.css';\n\nfunction App() {\n  const [employeeData, setEmployeeData] = useState(null);\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      setLoading(true);\n      setError(null);\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Нет токена авторизации');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // Запрос профиля\n        const response = await fetch('http://176.114.90.207:8000/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки профиля: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setEmployeeData(data.user);\n\n        // Запрос фото\n        const userId = data.user.id;\n        if (userId) {\n          const photoResponse = await fetch(\n            `http://176.114.90.207:8000/files/employer/${userId}/get-photo`,\n            {\n              method: 'GET',\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n            }\n          );\n\n          if (photoResponse.ok) {\n            const photoData = await photoResponse.json();\n            if (photoData.status === 'success' && photoData.file_url) {\n              setPhotoUrl(photoData.file_url.url);\n            }\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProfile();\n  }, []);\n\n  if (loading) return <p>Загрузка...</p>;\n  if (error) return <p className=\"error\">{error}</p>;\n\n  return (\n    <div className=\"profile-container\">\n      {employeeData ? (\n        <>\n          <div className=\"profile-header\">\n            <img\n              src={photoUrl || 'https://via.placeholder.com/150'}\n              alt={employeeData.name}\n              className=\"profile-image\"\n            />\n            <div className=\"profile-info\">\n              <h1 className=\"profile-name\">{employeeData.fio}</h1>\n              <h2 className=\"profile-position\">{employeeData.work_type}</h2>\n              <div className=\"info-card\">\n                <h3 className=\"info-card-title\">О сотруднике</h3>\n                <p className=\"profile-description\">{employeeData.description || 'Нет описания'}</p>\n              </div>\n              <div className=\"info-card\">\n                <h3 className=\"info-card-title\">Контактная информация</h3>\n                <ul className=\"profile-contacts\">\n                  <li><strong>Email:</strong> {employeeData.email}</li>\n                  <li><strong>Контакты:</strong> {employeeData.contacts?.join(', ') || 'Нет данных'}</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <section className=\"schedule-section\">\n            <h2 className=\"schedule-title\">Расписание</h2>\n            <div className=\"schedule-cards\">\n              {employeeData.work_days && employeeData.work_days.length > 0 ? (\n                employeeData.work_days.map((item, index) => (\n                  <div key={index} className=\"schedule-card\">\n                    <div className=\"card-date\">\n                      {new Date(item.work_time).toLocaleDateString('ru-RU', {\n                        weekday: 'long',\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                      })}\n                    </div>\n                    <div className=\"card-time\">{item.work_time}</div>\n                  </div>\n                ))\n              ) : (\n                <p>Нет данных для отображения</p>\n              )}\n            </div>\n          </section>\n        </>\n      ) : (\n        <p>Нет данных</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}