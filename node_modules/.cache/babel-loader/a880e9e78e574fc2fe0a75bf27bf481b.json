{"ast":null,"code":"var _jsxFileName = \"/home/f1alka/front_fut/front2.0/src/pages/Mixes.jsx\";\n/*import React, { useState, useEffect } from 'react';\nimport './css/admin.css';\nimport { \n  User, ArrowLeft, Calendar, Book, Clock, Search, \n  Plus, X, Edit, ChevronLeft, ChevronRight \n} from 'lucide-react';\nimport mainImage1 from './nikolskaya.jpg';\nimport mainImage2 from './prospekt_mira.jpg';\nimport mainImage3 from './strast.jpg';\n\n// Main component\nconst AdminPanel = () => {\n  // States\n  const [step, setStep] = useState('category');\n  const [category, setCategory] = useState(null);\n  const [location, setLocation] = useState(null);\n  \n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  \n  const [showModal, setShowModal] = useState(false);\n  const [modalMode, setModalMode] = useState('add');\n  const [currentItem, setCurrentItem] = useState(null);\n\n  // Mock data for demonstration\n  const mockData = {\n    employers: [\n      { id: 1, email: 'anna@example.com', fio: 'Петрова Анна', work_type: 'Бармен', roles: ['staff'], contacts: ['123-456-7890'], location_name: 'Проспект мира' },\n      { id: 2, email: 'dmitry@example.com', fio: 'Морозов Дмитрий', work_type: 'Официант', roles: ['staff'], contacts: ['123-456-7891'], location_name: 'Проспект мира' },\n      { id: 3, email: 'maria@example.com', fio: 'Лебедева Мария', work_type: 'Повар', roles: ['staff'], contacts: ['123-456-7892'], location_name: 'Проспект мира' },\n    ],\n    events: [\n      { id: 1, name: 'Дегустация вин', date_start: '2023-10-20T18:00:00', description: 'Дегустация итальянских вин', location_name: 'Никольская' },\n      { id: 2, name: 'Джазовый вечер', date_start: '2023-11-15T19:00:00', description: 'Живая музыка и коктейли', location_name: 'Страстная' },\n    ],\n    residents: [\n      { id: 1, fio: 'Иванов Иван', discount_value: 15, location_name: 'Никольская' },\n      { id: 2, fio: 'Смирнова Елена', discount_value: 10, location_name: 'Проспект мира' },\n    ],\n    products: [\n      { id: 1, name: 'Маргарита', description: 'Классическая пицца', type_product: 'Пицца', components: { 'тесто': '200г', 'томаты': '100г', 'сыр': '150г' }, location_name: 'Страстная' },\n      { id: 2, name: 'Цезарь', description: 'Салат с курицей', type_product: 'Салат', components: { 'курица': '150г', 'салат': '100г', 'соус': '50г' }, location_name: 'Никольская' },\n    ],\n    workdays: [\n      { id: 1, work_time: '2023-10-20T12:00:00', employer_fio: 'Петрова Анна', location_name: 'Проспект мира' },\n      { id: 2, work_time: '2023-10-20T14:00:00', employer_fio: 'Морозов Дмитрий', location_name: 'Проспект мира' },\n      { id: 3, work_time: '2023-10-20T07:00:00', employer_fio: 'Лебедева Мария', location_name: 'Проспект мира' },\n    ]\n  };\n\n  // Fetch data based on category and location\n  useEffect(() => {\n    if (category && location) {\n      fetchData();\n    }\n  }, [category, location]);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // In a real application, this would be an actual API call\n      // For now, we'll use mock data\n      setTimeout(() => {\n        let endpoint = '';\n        \n        switch(category) {\n          case 'employers':\n            endpoint = `http://176.114.90.207:8000/employers/get_list_employers/${location}`;\n            setData(mockData.employers.filter(item => item.location_name === location));\n            break;\n          case 'events':\n            endpoint = `http://176.114.90.207:8000/events/get_list_events/${location}`;\n            setData(mockData.events.filter(item => item.location_name === location));\n            break;\n          case 'residents':\n            endpoint = `http://176.114.90.207:8000/residents/${location}/get_list_residents`;\n            setData(mockData.residents.filter(item => item.location_name === location));\n            break;\n          case 'products':\n            endpoint = `http://176.114.90.207:8000/product/${location}/get_list_products`;\n            setData(mockData.products.filter(item => item.location_name === location));\n            break;\n          case 'workdays':\n            endpoint = `http://176.114.90.207:8000/workdays/${location}/get_list_workdays`;\n            setData(mockData.workdays.filter(item => item.location_name === location));\n            break;\n        }\n        \n        console.log(`Fetching data from: ${endpoint}`);\n        setLoading(false);\n      }, 500);\n    } catch (err) {\n      setError('Ошибка при загрузке данных');\n      setLoading(false);\n    }\n  };\n\n  // Filter data based on search term\n  const filteredData = data.filter(item => {\n    const searchLower = searchTerm.toLowerCase();\n    \n    // Different search logic based on category\n    if (category === 'employers' || category === 'residents') {\n      return item.fio.toLowerCase().includes(searchLower);\n    } else if (category === 'events' || category === 'products') {\n      return item.name.toLowerCase().includes(searchLower);\n    } else if (category === 'workdays') {\n      return item.employer_fio.toLowerCase().includes(searchLower);\n    }\n    \n    return true;\n  }).filter(item => {\n    // Filter by date if date filter is set\n    if (dateFilter && (category === 'events' || category === 'workdays')) {\n      const itemDate = new Date(category === 'events' ? item.date_start : item.work_time);\n      const filterDate = new Date(dateFilter);\n      \n      return itemDate.toDateString() === filterDate.toDateString();\n    }\n    \n    return true;\n  });\n\n  // Pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle add/edit/delete\n  const handleAdd = () => {\n    setModalMode('add');\n    \n    // Initialize empty item based on category\n    let emptyItem = {};\n    \n    switch(category) {\n      case 'employers':\n        emptyItem = { email: '', fio: '', work_type: '', roles: ['staff'], contacts: [], location_name: location };\n        break;\n      case 'events':\n        emptyItem = { name: '', date_start: '', description: '', location_name: location };\n        break;\n      case 'residents':\n        emptyItem = { fio: '', discount_value: 0, location_name: location };\n        break;\n      case 'products':\n        emptyItem = { name: '', description: '', type_product: '', components: {}, location_name: location };\n        break;\n      case 'workdays':\n        emptyItem = { work_time: '', employer_fio: '', location_name: location };\n        break;\n    }\n    \n    setCurrentItem(emptyItem);\n    setShowModal(true);\n  };\n\n  const handleEdit = (item) => {\n    setModalMode('edit');\n    setCurrentItem(item);\n    setShowModal(true);\n  };\n\n  const handleDelete = (id) => {\n    // In a real application, this would be an API call\n    setData(data.filter(item => item.id !== id));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (modalMode === 'add') {\n      // In a real application, this would be an API call\n      const newItem = { ...currentItem, id: data.length + 1 };\n      setData([...data, newItem]);\n    } else {\n      // In a real application, this would be an API call\n      setData(data.map(item => item.id === currentItem.id ? currentItem : item));\n    }\n    \n    setShowModal(false);\n  };\n\n  // Render functions\n  const renderCategorySelection = () => (\n    <div className=\"admin-selection\">\n      <div className=\"admin-option\" onClick={() => { setCategory('employers'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Работники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('residents'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Постоянники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('events'); setStep('location'); }}>\n        <Calendar className=\"admin-option-icon\" />\n        События\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('products'); setStep('location'); }}>\n        <Book className=\"admin-option-icon\" />\n        Методички\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('workdays'); setStep('location'); }}>\n        <Clock className=\"admin-option-icon\" />\n        Расписание\n      </div>\n    </div>\n  );\n\n  const renderLocationSelection = () => (\n    <>\n      <button className=\"admin-back-button\" onClick={() => { setStep('category'); setCategory(null); }}>\n        <ArrowLeft size={16} /> Назад\n      </button>\n      \n      <div className=\"admin-location-selection\">\n        <div className=\"admin-location-card\" onClick={() => { setLocation('Проспект мира'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80\" \n            alt=\"Проспект мира\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Проспект мира</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Страстная'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1374&q=80\" \n            alt=\"Страстная\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Страстная</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Никольская'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1525268323446-0505b6fe7778?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1472&q=80\" \n            alt=\"Никольская\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Никольская</div>\n        </div>\n      </div>\n    </>\n  );\n\n  const renderDataView = () => {\n    if (loading) return <div>Загрузка...</div>;\n    if (error) return <div>{error}</div>;\n    \n    return (\n      <>\n        <div className=\"admin-back-button\" onClick={() => { setStep('location'); setLocation(null); }}>\n          <ArrowLeft size={16} /> Назад\n        </div>\n        \n        <div className=\"admin-location-title\">{location}</div>\n        \n        <div className=\"admin-data-container\">\n          <div className=\"admin-search-bar\">\n            <input \n              type=\"text\" \n              placeholder={category === 'workdays' ? \"Поиск по имени сотрудника...\" : \"Поиск...\"}\n              className=\"admin-search-input\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            \n            {(category === 'events' || category === 'workdays') && (\n              <input \n                type=\"date\" \n                className=\"admin-date-input\"\n                value={dateFilter}\n                onChange={(e) => setDateFilter(e.target.value)}\n              />\n            )}\n          </div>\n          \n          <button className=\"admin-add-button\" onClick={handleAdd}>\n            <Plus size={16} /> Добавить\n          </button>\n          \n          {renderDataContent()}\n          \n          {totalPages > 1 && (\n            <div className=\"admin-pagination\">\n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === 1}\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n              >\n                <ChevronLeft size={16} />\n              </button>\n              \n              {Array.from({ length: totalPages }, (_, i) => (\n                <button \n                  key={i}\n                  className={`admin-pagination-button ${currentPage === i + 1 ? 'active' : ''}`}\n                  onClick={() => setCurrentPage(i + 1)}\n                >\n                  {i + 1}\n                </button>\n              ))}\n              \n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === totalPages}\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n              >\n                <ChevronRight size={16} />\n              </button>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderDataContent = () => {\n    switch(category) {\n      case 'employers':\n        return renderEmployersTable();\n      case 'events':\n        return renderEventsTable();\n      case 'residents':\n        return renderResidentsCards();\n      case 'products':\n        return renderProductsTable();\n      case 'workdays':\n        return renderWorkdaysTable();\n      default:\n        return null;\n    }\n  };\n\n  const renderEmployersTable = () => (\n    <div>\n      {currentItems.map((employer) => (\n        <div key={employer.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{employer.fio}</div>\n          <div className=\"admin-table-cell\">{employer.work_type}</div>\n          <div className=\"admin-table-cell\">{employer.email}</div>\n          <div className=\"admin-table-cell\">{employer.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(employer)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(employer.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderEventsTable = () => (\n    <div>\n      {currentItems.map((event) => (\n        <div key={event.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{event.name}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-{new Date(new Date(event.date_start).getTime() + 4 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>\n          <div className=\"admin-table-cell\">{event.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(event)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(event.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderResidentsCards = () => (\n    <div className=\"admin-cards-container\">\n      {currentItems.map((resident) => (\n        <div key={resident.id} className=\"admin-card\">\n          <div className=\"admin-card-header\">{resident.fio}</div>\n          <div className=\"admin-card-body\">\n            <p>Скидка: {resident.discount_value}%</p>\n            <p>Локация: {resident.location_name}</p>\n          </div>\n          <div className=\"admin-card-footer\">\n            <div className=\"admin-card-action admin-card-edit\" onClick={() => handleEdit(resident)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-card-action admin-card-delete\" onClick={() => handleDelete(resident.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderProductsTable = () => (\n    <div>\n      {currentItems.map((product) => (\n        <div key={product.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{product.name}</div>\n          <div className=\"admin-table-cell\">{product.type_product}</div>\n          <div className=\"admin-table-cell\">{product.description.substring(0, 50)}...</div>\n          <div className=\"admin-table-cell\">{product.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(product)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(product.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderWorkdaysTable = () => (\n    <div>\n      {currentItems.map((workday) => (\n        <div key={workday.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{workday.employer_fio}</div>\n          <div className=\"admin-table-cell\">{workday.location_name}</div>\n          <div className=\"admin-table-cell\">{new Date(workday.work_time).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">\n            {new Date(workday.work_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-\n            {new Date(new Date(workday.work_time).getTime() + 8 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n          </div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(workday)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(workday.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderModal = () => {\n    if (!showModal) return null;\n    \n    return (\n      <div className=\"admin-modal\">\n        <div className=\"admin-modal-content\">\n          <div className=\"admin-modal-header\">\n            <h2>{modalMode === 'add' ? 'Добавить' : 'Редактировать'}</h2>\n            <button className=\"admin-modal-close\" onClick={() => setShowModal(false)}>×</button>\n          </div>\n          \n          <form className=\"admin-form\" onSubmit={handleSubmit}>\n            {renderFormFields()}\n            \n            <button type=\"submit\" className=\"admin-form-submit\">\n              {modalMode === 'add' ? 'Добавить' : 'Сохранить'}\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFormFields = () => {\n    switch(category) {\n      case 'employers':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Email</label>\n              <input \n                type=\"email\" \n                className=\"admin-form-input\"\n                value={currentItem?.email || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, email: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Должность</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_type || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_type: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Контакты</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.contacts?.join(', ') || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, contacts: e.target.value.split(', ') })}\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n              />\n            </div>\n          </>\n        );\n        \n      case 'events':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.date_start ? new Date(currentItem.date_start).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, date_start: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'residents':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Скидка (%)</label>\n              <input \n                type=\"number\" \n                className=\"admin-form-input\"\n                value={currentItem?.discount_value || 0}\n                onChange={(e) => setCurrentItem({ ...currentItem, discount_value: parseInt(e.target.value) })}\n                required\n                min=\"0\"\n                max=\"100\"\n              />\n            </div>\n          </>\n        );\n        \n      case 'products':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Тип</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.type_product || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, type_product: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Компоненты (JSON)</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={JSON.stringify(currentItem?.components || {}, null, 2)}\n                onChange={(e) => {\n                  try {\n                    const components = JSON.parse(e.target.value);\n                    setCurrentItem({ ...currentItem, components });\n                  } catch (err) {\n                    // Invalid JSON, do nothing\n                  }\n                }}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'workdays':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО сотрудника</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.employer_fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, employer_fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_time ? new Date(currentItem.work_time).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_time: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <div className=\"admin-header\">\n        Административная панель\n      </div>\n      \n      {step === 'category' && renderCategorySelection()}\n      {step === 'location' && renderLocationSelection()}\n      {step === 'data' && renderDataView()}\n      \n      {renderModal()}\n    </div>\n  );\n};\n\nexport default AdminPanel;\n\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport './css/admin.css';\nimport axios from 'axios';\nimport { User, ArrowLeft, Calendar, Book, Clock, Search, Plus, X, Edit, ChevronLeft, ChevronRight, Upload } from 'lucide-react';\n\n// Main component\nconst AdminPanel = () => {\n  // States\n  const [step, setStep] = useState('category');\n  const [category, setCategory] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [showModal, setShowModal] = useState(false);\n  const [modalMode, setModalMode] = useState('add');\n  const [currentItem, setCurrentItem] = useState(null);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n\n  // Mock data for demonstration\n  const mockData = {\n    employers: [{\n      id: 1,\n      email: 'anna@example.com',\n      fio: 'Петрова Анна',\n      work_type: 'Бармен',\n      roles: ['staff'],\n      contacts: ['123-456-7890'],\n      location_name: 'Проспект мира',\n      photo: null\n    }, {\n      id: 2,\n      email: 'dmitry@example.com',\n      fio: 'Морозов Дмитрий',\n      work_type: 'Официант',\n      roles: ['staff'],\n      contacts: ['123-456-7891'],\n      location_name: 'Проспект мира',\n      photo: null\n    }, {\n      id: 3,\n      email: 'maria@example.com',\n      fio: 'Лебедева Мария',\n      work_type: 'Повар',\n      roles: ['staff'],\n      contacts: ['123-456-7892'],\n      location_name: 'Проспект мира',\n      photo: null\n    }],\n    events: [{\n      id: 1,\n      name: 'Дегустация вин',\n      date_start: '2023-10-20T18:00:00',\n      description: 'Дегустация итальянских вин',\n      location_name: 'Никольская'\n    }, {\n      id: 2,\n      name: 'Джазовый вечер',\n      date_start: '2023-11-15T19:00:00',\n      description: 'Живая музыка и коктейли',\n      location_name: 'Страстная'\n    }],\n    residents: [{\n      id: 1,\n      fio: 'Иванов Иван',\n      discount_value: 15,\n      description: 'VIP клиент',\n      location_name: 'Никольская',\n      photo: null\n    }, {\n      id: 2,\n      fio: 'Смирнова Елена',\n      discount_value: 10,\n      description: 'Постоянный гость',\n      location_name: 'Проспект мира',\n      photo: null\n    }],\n    products: [{\n      id: 1,\n      name: 'Маргарита',\n      description: 'Классическая пицца',\n      category: 'Пицца',\n      photo: null,\n      location_name: 'Страстная'\n    }, {\n      id: 2,\n      name: 'Цезарь',\n      description: 'Салат с курицей',\n      category: 'Салат',\n      photo: null,\n      location_name: 'Никольская'\n    }],\n    workdays: [{\n      id: 1,\n      work_time: '2023-10-20T12:00:00',\n      employer_fio: 'Петрова Анна',\n      location_name: 'Проспект мира'\n    }, {\n      id: 2,\n      work_time: '2023-10-20T14:00:00',\n      employer_fio: 'Морозов Дмитрий',\n      location_name: 'Проспект мира'\n    }, {\n      id: 3,\n      work_time: '2023-10-20T07:00:00',\n      employer_fio: 'Лебедева Мария',\n      location_name: 'Проспект мира'\n    }]\n  };\n\n  // Handle photo upload\n  const handlePhotoChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedPhoto(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPhotoPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const uploadPhoto = async (category, id) => {\n    if (!selectedPhoto) return;\n    const formData = new FormData();\n    formData.append('photo', selectedPhoto);\n    try {\n      await axios.post(`/files/${category}/${id}/upload-photo`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Refresh photo\n      const response = await axios.get(`/files/${category}/${id}/get-photo`);\n      return response.data;\n    } catch (error) {\n      console.error('Error uploading photo:', error);\n    }\n  };\n\n  // Fetch data based on category and location\n  useEffect(() => {\n    if (category && location) {\n      fetchData();\n    }\n  }, [category, location]);\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let endpoint = '';\n      let response;\n      switch (category) {\n        case 'employers':\n          endpoint = `http://176.114.90.207:8000/employers/get_list_employers/${location}`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n        case 'events':\n          endpoint = `/events/get_list_events/${location}`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n        case 'residents':\n          endpoint = `/residents/${location}/get_list_residents`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n        case 'products':\n          endpoint = `/cards/admin/get_list_cards`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n        case 'workdays':\n          endpoint = `/workdays/${location}/get_list_workdays`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n      }\n      setLoading(false);\n    } catch (err) {\n      var _mockData$category;\n      setError('Ошибка при загрузке данных');\n      setLoading(false);\n      // For demo, use mock data\n      setData(((_mockData$category = mockData[category]) === null || _mockData$category === void 0 ? void 0 : _mockData$category.filter(item => item.location_name === location)) || []);\n    }\n  };\n\n  // Filter data based on search term\n  const filteredData = data.filter(item => {\n    const searchLower = searchTerm.toLowerCase();\n\n    // Different search logic based on category\n    if (category === 'employers' || category === 'residents') {\n      return item.fio.toLowerCase().includes(searchLower);\n    } else if (category === 'events' || category === 'products') {\n      return item.name.toLowerCase().includes(searchLower);\n    } else if (category === 'workdays') {\n      return item.employer_fio.toLowerCase().includes(searchLower);\n    }\n    return true;\n  }).filter(item => {\n    // Filter by date if date filter is set\n    if (dateFilter && (category === 'events' || category === 'workdays')) {\n      const itemDate = new Date(category === 'events' ? item.date_start : item.work_time);\n      const filterDate = new Date(dateFilter);\n      return itemDate.toDateString() === filterDate.toDateString();\n    }\n    return true;\n  });\n\n  // Pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle add/edit/delete\n  const handleAdd = () => {\n    setModalMode('add');\n    setSelectedPhoto(null);\n    setPhotoPreview(null);\n\n    // Initialize empty item based on category\n    let emptyItem = {};\n    switch (category) {\n      case 'employers':\n        emptyItem = {\n          email: '',\n          fio: '',\n          work_type: '',\n          roles: ['staff'],\n          contacts: [],\n          description: '',\n          location_id: 0\n        };\n        break;\n      case 'events':\n        emptyItem = {\n          name: '',\n          date_start: '',\n          description: '',\n          location_id: 0\n        };\n        break;\n      case 'residents':\n        emptyItem = {\n          fio: '',\n          discount_value: 0,\n          description: '',\n          location_id: 0\n        };\n        break;\n      case 'products':\n        emptyItem = {\n          name: '',\n          description: '',\n          category: '',\n          location_id: 0\n        };\n        break;\n      case 'workdays':\n        emptyItem = {\n          work_time: '',\n          employer_id: 0,\n          location_id: 0\n        };\n        break;\n    }\n    setCurrentItem(emptyItem);\n    setShowModal(true);\n  };\n  const handleEdit = item => {\n    setModalMode('edit');\n    setSelectedPhoto(null);\n    setPhotoPreview(null);\n    setCurrentItem(item);\n    setShowModal(true);\n  };\n  const handleDelete = async id => {\n    try {\n      let endpoint = '';\n      switch (category) {\n        case 'employers':\n          endpoint = '/employers/delete_employer';\n          break;\n        case 'events':\n          endpoint = '/events/delete_event';\n          break;\n        case 'residents':\n          endpoint = '/residents/delete_resident';\n          break;\n        case 'products':\n          endpoint = '/cards/admin/delete_product';\n          break;\n        case 'workdays':\n          endpoint = '/workdays/delete_workday';\n          break;\n      }\n      await axios.delete(`${endpoint}/${id}`);\n      setData(data.filter(item => item.id !== id));\n    } catch (error) {\n      console.error('Error deleting item:', error);\n      // For demo, remove from local state\n      setData(data.filter(item => item.id !== id));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let endpoint = '';\n      let payload = {\n        ...currentItem\n      };\n      switch (category) {\n        case 'employers':\n          endpoint = '/employers/edit_employer';\n          break;\n        case 'events':\n          endpoint = '/events/create_event';\n          break;\n        case 'residents':\n          endpoint = '/residents/add_resident';\n          break;\n        case 'products':\n          endpoint = '/cards/admin/add_card';\n          break;\n        case 'workdays':\n          endpoint = '/workdays/add_workday';\n          break;\n      }\n      let response;\n      if (modalMode === 'add') {\n        response = await axios.post(endpoint, payload);\n      } else {\n        response = await axios.put(endpoint, payload);\n      }\n\n      // If photo was selected, upload it\n      if (selectedPhoto && response.data.id) {\n        await uploadPhoto(category, response.data.id);\n      }\n      await fetchData();\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error saving item:', error);\n      // For demo, update local state\n      if (modalMode === 'add') {\n        const newItem = {\n          ...currentItem,\n          id: data.length + 1\n        };\n        setData([...data, newItem]);\n      } else {\n        setData(data.map(item => item.id === currentItem.id ? currentItem : item));\n      }\n      setShowModal(false);\n    }\n  };\n\n  // Render functions\n  const renderCategorySelection = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('employers');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(User, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 9\n    }\n  }), \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('residents');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1039,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(User, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 9\n    }\n  }), \"\\u041F\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u043D\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('events');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 9\n    }\n  }), \"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('products');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Book, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 9\n    }\n  }), \"\\u041C\\u0435\\u0442\\u043E\\u0434\\u0438\\u0447\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('workdays');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 9\n    }\n  }), \"\\u0420\\u0430\\u0441\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"));\n  const renderLocationSelection = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"admin-back-button\",\n    onClick: () => {\n      setStep('category');\n      setCategory(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeft, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 9\n    }\n  }), \" \\u041D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-card\",\n    onClick: () => {\n      setLocation('Проспект мира');\n      setStep('data');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80\",\n    alt: \"\\u041F\\u0440\\u043E\\u0441\\u043F\\u0435\\u043A\\u0442 \\u043C\\u0438\\u0440\\u0430\",\n    className: \"admin-location-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u0440\\u043E\\u0441\\u043F\\u0435\\u043A\\u0442 \\u043C\\u0438\\u0440\\u0430\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-card\",\n    onClick: () => {\n      setLocation('Страстная');\n      setStep('data');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1374&q=80\",\n    alt: \"\\u0421\\u0442\\u0440\\u0430\\u0441\\u0442\\u043D\\u0430\\u044F\",\n    className: \"admin-location-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0442\\u0440\\u0430\\u0441\\u0442\\u043D\\u0430\\u044F\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-card\",\n    onClick: () => {\n      setLocation('Никольская');\n      setStep('data');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.unsplash.com/photo-1525268323446-0505b6fe7778?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1472&q=80\",\n    alt: \"\\u041D\\u0438\\u043A\\u043E\\u043B\\u044C\\u0441\\u043A\\u0430\\u044F\",\n    className: \"admin-location-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 11\n    }\n  }, \"\\u041D\\u0438\\u043A\\u043E\\u043B\\u044C\\u0441\\u043A\\u0430\\u044F\"))));\n  const renderDataView = () => {\n    if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 25\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n    if (error) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 23\n      }\n    }, error);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-back-button\",\n      onClick: () => {\n        setStep('location');\n        setLocation(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ArrowLeft, {\n      size: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 11\n      }\n    }), \" \\u041D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-location-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 9\n      }\n    }, location), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-data-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: category === 'workdays' ? \"Поиск по имени сотрудника...\" : \"Поиск...\",\n      className: \"admin-search-input\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 13\n      }\n    }), (category === 'events' || category === 'workdays') && /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"admin-date-input\",\n      value: dateFilter,\n      onChange: e => setDateFilter(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"admin-add-button\",\n      onClick: handleAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Plus, {\n      size: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 13\n      }\n    }), \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), renderDataContent(), totalPages > 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"admin-pagination-button\",\n      disabled: currentPage === 1,\n      onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ChevronLeft, {\n      size: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 17\n      }\n    })), Array.from({\n      length: totalPages\n    }, (_, i) => /*#__PURE__*/React.createElement(\"button\", {\n      key: i,\n      className: `admin-pagination-button ${currentPage === i + 1 ? 'active' : ''}`,\n      onClick: () => setCurrentPage(i + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 17\n      }\n    }, i + 1)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"admin-pagination-button\",\n      disabled: currentPage === totalPages,\n      onClick: () => setCurrentPage(prev => Math.min(prev + 1, totalPages)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ChevronRight, {\n      size: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 17\n      }\n    })))));\n  };\n  const renderDataContent = () => {\n    switch (category) {\n      case 'employers':\n        return renderEmployersTable();\n      case 'events':\n        return renderEventsTable();\n      case 'residents':\n        return renderResidentsCards();\n      case 'products':\n        return renderProductsTable();\n      case 'workdays':\n        return renderWorkdaysTable();\n      default:\n        return null;\n    }\n  };\n  const renderEmployersTable = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 5\n    }\n  }, currentItems.map(employer => /*#__PURE__*/React.createElement(\"div\", {\n    key: employer.id,\n    className: \"admin-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 11\n    }\n  }, employer.photo ? /*#__PURE__*/React.createElement(\"img\", {\n    src: employer.photo,\n    alt: employer.fio,\n    className: \"admin-table-cell-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1190,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(User, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 15\n    }\n  }), employer.fio), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 11\n    }\n  }, employer.work_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 11\n    }\n  }, employer.email), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 11\n    }\n  }, employer.location_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-edit-button\",\n    onClick: () => handleEdit(employer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-delete-button\",\n    onClick: () => handleDelete(employer.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 15\n    }\n  }))))));\n  const renderEventsTable = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 5\n    }\n  }, currentItems.map(event => /*#__PURE__*/React.createElement(\"div\", {\n    key: event.id,\n    className: \"admin-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1216,\n      columnNumber: 11\n    }\n  }, event.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 11\n    }\n  }, new Date(event.date_start).toLocaleDateString()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218,\n      columnNumber: 11\n    }\n  }, new Date(event.date_start).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  }), \"-\", new Date(new Date(event.date_start).getTime() + 4 * 60 * 60 * 1000).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 11\n    }\n  }, event.location_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-edit-button\",\n    onClick: () => handleEdit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-delete-button\",\n    onClick: () => handleDelete(event.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 15\n    }\n  }))))));\n  const renderResidentsCards = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-cards-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234,\n      columnNumber: 5\n    }\n  }, currentItems.map(resident => /*#__PURE__*/React.createElement(\"div\", {\n    key: resident.id,\n    className: \"admin-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1236,\n      columnNumber: 9\n    }\n  }, resident.photo ? /*#__PURE__*/React.createElement(\"img\", {\n    src: resident.photo,\n    alt: resident.fio,\n    className: \"admin-card-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1238,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-photo\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#2a2a2a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(User, {\n    size: 64,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1241,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 11\n    }\n  }, resident.fio), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 13\n    }\n  }, \"\\u0421\\u043A\\u0438\\u0434\\u043A\\u0430: \", resident.discount_value, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 13\n    }\n  }, \"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F: \", resident.location_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"admin-card-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 13\n    }\n  }, resident.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-action admin-card-edit\",\n    onClick: () => handleEdit(resident),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1252,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-action admin-card-delete\",\n    onClick: () => handleDelete(resident.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 15\n    }\n  }))))));\n  const renderProductsTable = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 5\n    }\n  }, currentItems.map(product => /*#__PURE__*/React.createElement(\"div\", {\n    key: product.id,\n    className: \"admin-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 11\n    }\n  }, product.photo ? /*#__PURE__*/React.createElement(\"img\", {\n    src: product.photo,\n    alt: product.name,\n    className: \"admin-table-cell-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1269,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Book, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1271,\n      columnNumber: 15\n    }\n  }), product.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 11\n    }\n  }, product.category), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1276,\n      columnNumber: 11\n    }\n  }, product.description.substring(0, 50), \"...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1277,\n      columnNumber: 11\n    }\n  }, product.location_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1278,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-edit-button\",\n    onClick: () => handleEdit(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-delete-button\",\n    onClick: () => handleDelete(product.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1283,\n      columnNumber: 15\n    }\n  }))))));\n  const renderWorkdaysTable = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1292,\n      columnNumber: 5\n    }\n  }, currentItems.map(workday => /*#__PURE__*/React.createElement(\"div\", {\n    key: workday.id,\n    className: \"admin-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 11\n    }\n  }, workday.employer_fio), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1296,\n      columnNumber: 11\n    }\n  }, workday.location_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 11\n    }\n  }, new Date(workday.work_time).toLocaleDateString()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1298,\n      columnNumber: 11\n    }\n  }, new Date(workday.work_time).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  }), \"-\", new Date(new Date(workday.work_time).getTime() + 8 * 60 * 60 * 1000).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-edit-button\",\n    onClick: () => handleEdit(workday),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1303,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-delete-button\",\n    onClick: () => handleDelete(workday.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1307,\n      columnNumber: 15\n    }\n  }))))));\n  const renderPhotoUpload = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-photo-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1316,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"admin-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1317,\n      columnNumber: 7\n    }\n  }, \"\\u0424\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044F\"), photoPreview && /*#__PURE__*/React.createElement(\"img\", {\n    src: photoPreview,\n    alt: \"Preview\",\n    className: \"admin-photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1319,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"admin-photo-upload-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1321,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handlePhotoChange,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Upload, {\n    size: 16,\n    style: {\n      marginRight: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1328,\n      columnNumber: 9\n    }\n  }), photoPreview ? 'Изменить фото' : 'Загрузить фото'));\n  const renderModal = () => {\n    if (!showModal) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1338,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1341,\n        columnNumber: 13\n      }\n    }, modalMode === 'add' ? 'Добавить' : 'Редактировать'), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"admin-modal-close\",\n      onClick: () => setShowModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1342,\n        columnNumber: 13\n      }\n    }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"admin-form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1345,\n        columnNumber: 11\n      }\n    }, renderFormFields(), (category === 'employers' || category === 'residents' || category === 'products') && renderPhotoUpload(), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"admin-form-submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1350,\n        columnNumber: 13\n      }\n    }, modalMode === 'add' ? 'Добавить' : 'Сохранить'))));\n  };\n  const renderFormFields = () => {\n    var _currentItem$contacts;\n    switch (category) {\n      case 'employers':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1365,\n            columnNumber: 15\n          }\n        }, \"\\u0424\\u0418\\u041E\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.fio) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            fio: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1376,\n            columnNumber: 15\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"email\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.email) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            email: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1377,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1386,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1387,\n            columnNumber: 15\n          }\n        }, \"\\u0414\\u043E\\u043B\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.work_type) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            work_type: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1388,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1397,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1398,\n            columnNumber: 15\n          }\n        }, \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : (_currentItem$contacts = currentItem.contacts) === null || _currentItem$contacts === void 0 ? void 0 : _currentItem$contacts.join(', ')) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            contacts: e.target.value.split(', ')\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1399,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1407,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1408,\n            columnNumber: 15\n          }\n        }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"admin-form-textarea\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.description) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            description: e.target.value\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1409,\n            columnNumber: 15\n          }\n        })));\n      case 'events':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1421,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1422,\n            columnNumber: 15\n          }\n        }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.name) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            name: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1423,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1432,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1433,\n            columnNumber: 15\n          }\n        }, \"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"datetime-local\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.date_start) ? new Date(currentItem.date_start).toISOString().slice(0, 16) : '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            date_start: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1444,\n            columnNumber: 15\n          }\n        }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"admin-form-textarea\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.description) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            description: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 15\n          }\n        })));\n      case 'residents':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1458,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1459,\n            columnNumber: 15\n          }\n        }, \"\\u0424\\u0418\\u041E\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.fio) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            fio: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1470,\n            columnNumber: 15\n          }\n        }, \"\\u0421\\u043A\\u0438\\u0434\\u043A\\u0430 (%)\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.discount_value) || 0,\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            discount_value: parseInt(e.target.value)\n          }),\n          required: true,\n          min: \"0\",\n          max: \"100\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1482,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1483,\n            columnNumber: 15\n          }\n        }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"admin-form-textarea\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.description) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            description: e.target.value\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1484,\n            columnNumber: 15\n          }\n        })));\n      case 'products':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1496,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1497,\n            columnNumber: 15\n          }\n        }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.name) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            name: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1498,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1507,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1508,\n            columnNumber: 15\n          }\n        }, \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.category) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            category: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1509,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1518,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1519,\n            columnNumber: 15\n          }\n        }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"admin-form-textarea\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.description) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            description: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1520,\n            columnNumber: 15\n          }\n        })));\n      case 'workdays':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1533,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1534,\n            columnNumber: 15\n          }\n        }, \"\\u0424\\u0418\\u041E \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.employer_fio) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            employer_fio: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1544,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1545,\n            columnNumber: 15\n          }\n        }, \"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"datetime-local\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.work_time) ? new Date(currentItem.work_time).toISOString().slice(0, 16) : '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            work_time: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1546,\n            columnNumber: 15\n          }\n        })));\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1563,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1564,\n      columnNumber: 7\n    }\n  }, \"\\u0410\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u0438\\u0432\\u043D\\u0430\\u044F \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"), step === 'category' && renderCategorySelection(), step === 'location' && renderLocationSelection(), step === 'data' && renderDataView(), renderModal());\n};\nexport default AdminPanel;","map":{"version":3,"names":["React","useState","useEffect","axios","User","ArrowLeft","Calendar","Book","Clock","Search","Plus","X","Edit","ChevronLeft","ChevronRight","Upload","AdminPanel","step","setStep","category","setCategory","location","setLocation","data","setData","loading","setLoading","error","setError","searchTerm","setSearchTerm","dateFilter","setDateFilter","currentPage","setCurrentPage","itemsPerPage","showModal","setShowModal","modalMode","setModalMode","currentItem","setCurrentItem","selectedPhoto","setSelectedPhoto","photoPreview","setPhotoPreview","mockData","employers","id","email","fio","work_type","roles","contacts","location_name","photo","events","name","date_start","description","residents","discount_value","products","workdays","work_time","employer_fio","handlePhotoChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","uploadPhoto","formData","FormData","append","post","headers","response","get","console","fetchData","endpoint","err","_mockData$category","filter","item","filteredData","searchLower","toLowerCase","includes","itemDate","Date","filterDate","toDateString","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","handleAdd","emptyItem","location_id","employer_id","handleEdit","handleDelete","delete","handleSubmit","preventDefault","payload","put","newItem","map","renderCategorySelection","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderLocationSelection","Fragment","size","src","alt","renderDataView","type","placeholder","value","onChange","renderDataContent","disabled","prev","max","Array","from","_","i","key","min","renderEmployersTable","renderEventsTable","renderResidentsCards","renderProductsTable","renderWorkdaysTable","employer","event","toLocaleDateString","toLocaleTimeString","hour","minute","getTime","resident","style","display","alignItems","justifyContent","backgroundColor","product","substring","workday","renderPhotoUpload","accept","marginRight","renderModal","onSubmit","renderFormFields","_currentItem$contacts","required","join","split","toISOString","parseInt"],"sources":["/home/f1alka/front_fut/front2.0/src/pages/Mixes.jsx"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport './css/admin.css';\nimport { \n  User, ArrowLeft, Calendar, Book, Clock, Search, \n  Plus, X, Edit, ChevronLeft, ChevronRight \n} from 'lucide-react';\nimport mainImage1 from './nikolskaya.jpg';\nimport mainImage2 from './prospekt_mira.jpg';\nimport mainImage3 from './strast.jpg';\n\n// Main component\nconst AdminPanel = () => {\n  // States\n  const [step, setStep] = useState('category');\n  const [category, setCategory] = useState(null);\n  const [location, setLocation] = useState(null);\n  \n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  \n  const [showModal, setShowModal] = useState(false);\n  const [modalMode, setModalMode] = useState('add');\n  const [currentItem, setCurrentItem] = useState(null);\n\n  // Mock data for demonstration\n  const mockData = {\n    employers: [\n      { id: 1, email: 'anna@example.com', fio: 'Петрова Анна', work_type: 'Бармен', roles: ['staff'], contacts: ['123-456-7890'], location_name: 'Проспект мира' },\n      { id: 2, email: 'dmitry@example.com', fio: 'Морозов Дмитрий', work_type: 'Официант', roles: ['staff'], contacts: ['123-456-7891'], location_name: 'Проспект мира' },\n      { id: 3, email: 'maria@example.com', fio: 'Лебедева Мария', work_type: 'Повар', roles: ['staff'], contacts: ['123-456-7892'], location_name: 'Проспект мира' },\n    ],\n    events: [\n      { id: 1, name: 'Дегустация вин', date_start: '2023-10-20T18:00:00', description: 'Дегустация итальянских вин', location_name: 'Никольская' },\n      { id: 2, name: 'Джазовый вечер', date_start: '2023-11-15T19:00:00', description: 'Живая музыка и коктейли', location_name: 'Страстная' },\n    ],\n    residents: [\n      { id: 1, fio: 'Иванов Иван', discount_value: 15, location_name: 'Никольская' },\n      { id: 2, fio: 'Смирнова Елена', discount_value: 10, location_name: 'Проспект мира' },\n    ],\n    products: [\n      { id: 1, name: 'Маргарита', description: 'Классическая пицца', type_product: 'Пицца', components: { 'тесто': '200г', 'томаты': '100г', 'сыр': '150г' }, location_name: 'Страстная' },\n      { id: 2, name: 'Цезарь', description: 'Салат с курицей', type_product: 'Салат', components: { 'курица': '150г', 'салат': '100г', 'соус': '50г' }, location_name: 'Никольская' },\n    ],\n    workdays: [\n      { id: 1, work_time: '2023-10-20T12:00:00', employer_fio: 'Петрова Анна', location_name: 'Проспект мира' },\n      { id: 2, work_time: '2023-10-20T14:00:00', employer_fio: 'Морозов Дмитрий', location_name: 'Проспект мира' },\n      { id: 3, work_time: '2023-10-20T07:00:00', employer_fio: 'Лебедева Мария', location_name: 'Проспект мира' },\n    ]\n  };\n\n  // Fetch data based on category and location\n  useEffect(() => {\n    if (category && location) {\n      fetchData();\n    }\n  }, [category, location]);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // In a real application, this would be an actual API call\n      // For now, we'll use mock data\n      setTimeout(() => {\n        let endpoint = '';\n        \n        switch(category) {\n          case 'employers':\n            endpoint = `http://176.114.90.207:8000/employers/get_list_employers/${location}`;\n            setData(mockData.employers.filter(item => item.location_name === location));\n            break;\n          case 'events':\n            endpoint = `http://176.114.90.207:8000/events/get_list_events/${location}`;\n            setData(mockData.events.filter(item => item.location_name === location));\n            break;\n          case 'residents':\n            endpoint = `http://176.114.90.207:8000/residents/${location}/get_list_residents`;\n            setData(mockData.residents.filter(item => item.location_name === location));\n            break;\n          case 'products':\n            endpoint = `http://176.114.90.207:8000/product/${location}/get_list_products`;\n            setData(mockData.products.filter(item => item.location_name === location));\n            break;\n          case 'workdays':\n            endpoint = `http://176.114.90.207:8000/workdays/${location}/get_list_workdays`;\n            setData(mockData.workdays.filter(item => item.location_name === location));\n            break;\n        }\n        \n        console.log(`Fetching data from: ${endpoint}`);\n        setLoading(false);\n      }, 500);\n    } catch (err) {\n      setError('Ошибка при загрузке данных');\n      setLoading(false);\n    }\n  };\n\n  // Filter data based on search term\n  const filteredData = data.filter(item => {\n    const searchLower = searchTerm.toLowerCase();\n    \n    // Different search logic based on category\n    if (category === 'employers' || category === 'residents') {\n      return item.fio.toLowerCase().includes(searchLower);\n    } else if (category === 'events' || category === 'products') {\n      return item.name.toLowerCase().includes(searchLower);\n    } else if (category === 'workdays') {\n      return item.employer_fio.toLowerCase().includes(searchLower);\n    }\n    \n    return true;\n  }).filter(item => {\n    // Filter by date if date filter is set\n    if (dateFilter && (category === 'events' || category === 'workdays')) {\n      const itemDate = new Date(category === 'events' ? item.date_start : item.work_time);\n      const filterDate = new Date(dateFilter);\n      \n      return itemDate.toDateString() === filterDate.toDateString();\n    }\n    \n    return true;\n  });\n\n  // Pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle add/edit/delete\n  const handleAdd = () => {\n    setModalMode('add');\n    \n    // Initialize empty item based on category\n    let emptyItem = {};\n    \n    switch(category) {\n      case 'employers':\n        emptyItem = { email: '', fio: '', work_type: '', roles: ['staff'], contacts: [], location_name: location };\n        break;\n      case 'events':\n        emptyItem = { name: '', date_start: '', description: '', location_name: location };\n        break;\n      case 'residents':\n        emptyItem = { fio: '', discount_value: 0, location_name: location };\n        break;\n      case 'products':\n        emptyItem = { name: '', description: '', type_product: '', components: {}, location_name: location };\n        break;\n      case 'workdays':\n        emptyItem = { work_time: '', employer_fio: '', location_name: location };\n        break;\n    }\n    \n    setCurrentItem(emptyItem);\n    setShowModal(true);\n  };\n\n  const handleEdit = (item) => {\n    setModalMode('edit');\n    setCurrentItem(item);\n    setShowModal(true);\n  };\n\n  const handleDelete = (id) => {\n    // In a real application, this would be an API call\n    setData(data.filter(item => item.id !== id));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (modalMode === 'add') {\n      // In a real application, this would be an API call\n      const newItem = { ...currentItem, id: data.length + 1 };\n      setData([...data, newItem]);\n    } else {\n      // In a real application, this would be an API call\n      setData(data.map(item => item.id === currentItem.id ? currentItem : item));\n    }\n    \n    setShowModal(false);\n  };\n\n  // Render functions\n  const renderCategorySelection = () => (\n    <div className=\"admin-selection\">\n      <div className=\"admin-option\" onClick={() => { setCategory('employers'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Работники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('residents'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Постоянники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('events'); setStep('location'); }}>\n        <Calendar className=\"admin-option-icon\" />\n        События\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('products'); setStep('location'); }}>\n        <Book className=\"admin-option-icon\" />\n        Методички\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('workdays'); setStep('location'); }}>\n        <Clock className=\"admin-option-icon\" />\n        Расписание\n      </div>\n    </div>\n  );\n\n  const renderLocationSelection = () => (\n    <>\n      <button className=\"admin-back-button\" onClick={() => { setStep('category'); setCategory(null); }}>\n        <ArrowLeft size={16} /> Назад\n      </button>\n      \n      <div className=\"admin-location-selection\">\n        <div className=\"admin-location-card\" onClick={() => { setLocation('Проспект мира'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80\" \n            alt=\"Проспект мира\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Проспект мира</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Страстная'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1374&q=80\" \n            alt=\"Страстная\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Страстная</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Никольская'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1525268323446-0505b6fe7778?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1472&q=80\" \n            alt=\"Никольская\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Никольская</div>\n        </div>\n      </div>\n    </>\n  );\n\n  const renderDataView = () => {\n    if (loading) return <div>Загрузка...</div>;\n    if (error) return <div>{error}</div>;\n    \n    return (\n      <>\n        <div className=\"admin-back-button\" onClick={() => { setStep('location'); setLocation(null); }}>\n          <ArrowLeft size={16} /> Назад\n        </div>\n        \n        <div className=\"admin-location-title\">{location}</div>\n        \n        <div className=\"admin-data-container\">\n          <div className=\"admin-search-bar\">\n            <input \n              type=\"text\" \n              placeholder={category === 'workdays' ? \"Поиск по имени сотрудника...\" : \"Поиск...\"}\n              className=\"admin-search-input\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            \n            {(category === 'events' || category === 'workdays') && (\n              <input \n                type=\"date\" \n                className=\"admin-date-input\"\n                value={dateFilter}\n                onChange={(e) => setDateFilter(e.target.value)}\n              />\n            )}\n          </div>\n          \n          <button className=\"admin-add-button\" onClick={handleAdd}>\n            <Plus size={16} /> Добавить\n          </button>\n          \n          {renderDataContent()}\n          \n          {totalPages > 1 && (\n            <div className=\"admin-pagination\">\n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === 1}\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n              >\n                <ChevronLeft size={16} />\n              </button>\n              \n              {Array.from({ length: totalPages }, (_, i) => (\n                <button \n                  key={i}\n                  className={`admin-pagination-button ${currentPage === i + 1 ? 'active' : ''}`}\n                  onClick={() => setCurrentPage(i + 1)}\n                >\n                  {i + 1}\n                </button>\n              ))}\n              \n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === totalPages}\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n              >\n                <ChevronRight size={16} />\n              </button>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderDataContent = () => {\n    switch(category) {\n      case 'employers':\n        return renderEmployersTable();\n      case 'events':\n        return renderEventsTable();\n      case 'residents':\n        return renderResidentsCards();\n      case 'products':\n        return renderProductsTable();\n      case 'workdays':\n        return renderWorkdaysTable();\n      default:\n        return null;\n    }\n  };\n\n  const renderEmployersTable = () => (\n    <div>\n      {currentItems.map((employer) => (\n        <div key={employer.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{employer.fio}</div>\n          <div className=\"admin-table-cell\">{employer.work_type}</div>\n          <div className=\"admin-table-cell\">{employer.email}</div>\n          <div className=\"admin-table-cell\">{employer.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(employer)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(employer.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderEventsTable = () => (\n    <div>\n      {currentItems.map((event) => (\n        <div key={event.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{event.name}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-{new Date(new Date(event.date_start).getTime() + 4 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>\n          <div className=\"admin-table-cell\">{event.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(event)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(event.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderResidentsCards = () => (\n    <div className=\"admin-cards-container\">\n      {currentItems.map((resident) => (\n        <div key={resident.id} className=\"admin-card\">\n          <div className=\"admin-card-header\">{resident.fio}</div>\n          <div className=\"admin-card-body\">\n            <p>Скидка: {resident.discount_value}%</p>\n            <p>Локация: {resident.location_name}</p>\n          </div>\n          <div className=\"admin-card-footer\">\n            <div className=\"admin-card-action admin-card-edit\" onClick={() => handleEdit(resident)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-card-action admin-card-delete\" onClick={() => handleDelete(resident.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderProductsTable = () => (\n    <div>\n      {currentItems.map((product) => (\n        <div key={product.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{product.name}</div>\n          <div className=\"admin-table-cell\">{product.type_product}</div>\n          <div className=\"admin-table-cell\">{product.description.substring(0, 50)}...</div>\n          <div className=\"admin-table-cell\">{product.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(product)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(product.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderWorkdaysTable = () => (\n    <div>\n      {currentItems.map((workday) => (\n        <div key={workday.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{workday.employer_fio}</div>\n          <div className=\"admin-table-cell\">{workday.location_name}</div>\n          <div className=\"admin-table-cell\">{new Date(workday.work_time).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">\n            {new Date(workday.work_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-\n            {new Date(new Date(workday.work_time).getTime() + 8 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n          </div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(workday)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(workday.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderModal = () => {\n    if (!showModal) return null;\n    \n    return (\n      <div className=\"admin-modal\">\n        <div className=\"admin-modal-content\">\n          <div className=\"admin-modal-header\">\n            <h2>{modalMode === 'add' ? 'Добавить' : 'Редактировать'}</h2>\n            <button className=\"admin-modal-close\" onClick={() => setShowModal(false)}>×</button>\n          </div>\n          \n          <form className=\"admin-form\" onSubmit={handleSubmit}>\n            {renderFormFields()}\n            \n            <button type=\"submit\" className=\"admin-form-submit\">\n              {modalMode === 'add' ? 'Добавить' : 'Сохранить'}\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFormFields = () => {\n    switch(category) {\n      case 'employers':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Email</label>\n              <input \n                type=\"email\" \n                className=\"admin-form-input\"\n                value={currentItem?.email || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, email: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Должность</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_type || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_type: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Контакты</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.contacts?.join(', ') || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, contacts: e.target.value.split(', ') })}\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n              />\n            </div>\n          </>\n        );\n        \n      case 'events':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.date_start ? new Date(currentItem.date_start).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, date_start: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'residents':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Скидка (%)</label>\n              <input \n                type=\"number\" \n                className=\"admin-form-input\"\n                value={currentItem?.discount_value || 0}\n                onChange={(e) => setCurrentItem({ ...currentItem, discount_value: parseInt(e.target.value) })}\n                required\n                min=\"0\"\n                max=\"100\"\n              />\n            </div>\n          </>\n        );\n        \n      case 'products':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Тип</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.type_product || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, type_product: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Компоненты (JSON)</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={JSON.stringify(currentItem?.components || {}, null, 2)}\n                onChange={(e) => {\n                  try {\n                    const components = JSON.parse(e.target.value);\n                    setCurrentItem({ ...currentItem, components });\n                  } catch (err) {\n                    // Invalid JSON, do nothing\n                  }\n                }}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'workdays':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО сотрудника</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.employer_fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, employer_fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_time ? new Date(currentItem.work_time).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_time: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <div className=\"admin-header\">\n        Административная панель\n      </div>\n      \n      {step === 'category' && renderCategorySelection()}\n      {step === 'location' && renderLocationSelection()}\n      {step === 'data' && renderDataView()}\n      \n      {renderModal()}\n    </div>\n  );\n};\n\nexport default AdminPanel;\n\n*/\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport './css/admin.css';\nimport axios from 'axios';\nimport { \n  User, ArrowLeft, Calendar, Book, Clock, Search, \n  Plus, X, Edit, ChevronLeft, ChevronRight, Upload\n} from 'lucide-react';\n\n// Main component\nconst AdminPanel = () => {\n  // States\n  const [step, setStep] = useState('category');\n  const [category, setCategory] = useState(null);\n  const [location, setLocation] = useState(null);\n  \n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  \n  const [showModal, setShowModal] = useState(false);\n  const [modalMode, setModalMode] = useState('add');\n  const [currentItem, setCurrentItem] = useState(null);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n\n  // Mock data for demonstration\n  const mockData = {\n    employers: [\n      { id: 1, email: 'anna@example.com', fio: 'Петрова Анна', work_type: 'Бармен', roles: ['staff'], contacts: ['123-456-7890'], location_name: 'Проспект мира', photo: null },\n      { id: 2, email: 'dmitry@example.com', fio: 'Морозов Дмитрий', work_type: 'Официант', roles: ['staff'], contacts: ['123-456-7891'], location_name: 'Проспект мира', photo: null },\n      { id: 3, email: 'maria@example.com', fio: 'Лебедева Мария', work_type: 'Повар', roles: ['staff'], contacts: ['123-456-7892'], location_name: 'Проспект мира', photo: null },\n    ],\n    events: [\n      { id: 1, name: 'Дегустация вин', date_start: '2023-10-20T18:00:00', description: 'Дегустация итальянских вин', location_name: 'Никольская' },\n      { id: 2, name: 'Джазовый вечер', date_start: '2023-11-15T19:00:00', description: 'Живая музыка и коктейли', location_name: 'Страстная' },\n    ],\n    residents: [\n      { id: 1, fio: 'Иванов Иван', discount_value: 15, description: 'VIP клиент', location_name: 'Никольская', photo: null },\n      { id: 2, fio: 'Смирнова Елена', discount_value: 10, description: 'Постоянный гость', location_name: 'Проспект мира', photo: null },\n    ],\n    products: [\n      { id: 1, name: 'Маргарита', description: 'Классическая пицца', category: 'Пицца', photo: null, location_name: 'Страстная' },\n      { id: 2, name: 'Цезарь', description: 'Салат с курицей', category: 'Салат', photo: null, location_name: 'Никольская' },\n    ],\n    workdays: [\n      { id: 1, work_time: '2023-10-20T12:00:00', employer_fio: 'Петрова Анна', location_name: 'Проспект мира' },\n      { id: 2, work_time: '2023-10-20T14:00:00', employer_fio: 'Морозов Дмитрий', location_name: 'Проспект мира' },\n      { id: 3, work_time: '2023-10-20T07:00:00', employer_fio: 'Лебедева Мария', location_name: 'Проспект мира' },\n    ]\n  };\n\n  // Handle photo upload\n  const handlePhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedPhoto(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPhotoPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const uploadPhoto = async (category, id) => {\n    if (!selectedPhoto) return;\n\n    const formData = new FormData();\n    formData.append('photo', selectedPhoto);\n\n    try {\n      await axios.post(`/files/${category}/${id}/upload-photo`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      // Refresh photo\n      const response = await axios.get(`/files/${category}/${id}/get-photo`);\n      return response.data;\n    } catch (error) {\n      console.error('Error uploading photo:', error);\n    }\n  };\n\n  // Fetch data based on category and location\n  useEffect(() => {\n    if (category && location) {\n      fetchData();\n    }\n  }, [category, location]);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      let endpoint = '';\n      let response;\n      \n      switch(category) {\n        case 'employers':\n          endpoint = `http://176.114.90.207:8000/employers/get_list_employers/${location}`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n        case 'events':\n          endpoint = `/events/get_list_events/${location}`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n        case 'residents':\n          endpoint = `/residents/${location}/get_list_residents`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n        case 'products':\n          endpoint = `/cards/admin/get_list_cards`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n        case 'workdays':\n          endpoint = `/workdays/${location}/get_list_workdays`;\n          response = await axios.get(endpoint);\n          setData(response.data);\n          break;\n      }\n      \n      setLoading(false);\n    } catch (err) {\n      setError('Ошибка при загрузке данных');\n      setLoading(false);\n      // For demo, use mock data\n      setData(mockData[category]?.filter(item => item.location_name === location) || []);\n    }\n  };\n\n  // Filter data based on search term\n  const filteredData = data.filter(item => {\n    const searchLower = searchTerm.toLowerCase();\n    \n    // Different search logic based on category\n    if (category === 'employers' || category === 'residents') {\n      return item.fio.toLowerCase().includes(searchLower);\n    } else if (category === 'events' || category === 'products') {\n      return item.name.toLowerCase().includes(searchLower);\n    } else if (category === 'workdays') {\n      return item.employer_fio.toLowerCase().includes(searchLower);\n    }\n    \n    return true;\n  }).filter(item => {\n    // Filter by date if date filter is set\n    if (dateFilter && (category === 'events' || category === 'workdays')) {\n      const itemDate = new Date(category === 'events' ? item.date_start : item.work_time);\n      const filterDate = new Date(dateFilter);\n      \n      return itemDate.toDateString() === filterDate.toDateString();\n    }\n    \n    return true;\n  });\n\n  // Pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle add/edit/delete\n  const handleAdd = () => {\n    setModalMode('add');\n    setSelectedPhoto(null);\n    setPhotoPreview(null);\n    \n    // Initialize empty item based on category\n    let emptyItem = {};\n    \n    switch(category) {\n      case 'employers':\n        emptyItem = { \n          email: '', \n          fio: '', \n          work_type: '', \n          roles: ['staff'], \n          contacts: [], \n          description: '',\n          location_id: 0 \n        };\n        break;\n      case 'events':\n        emptyItem = { \n          name: '', \n          date_start: '', \n          description: '', \n          location_id: 0 \n        };\n        break;\n      case 'residents':\n        emptyItem = { \n          fio: '', \n          discount_value: 0, \n          description: '',\n          location_id: 0 \n        };\n        break;\n      case 'products':\n        emptyItem = { \n          name: '', \n          description: '', \n          category: '', \n          location_id: 0 \n        };\n        break;\n      case 'workdays':\n        emptyItem = { \n          work_time: '', \n          employer_id: 0, \n          location_id: 0 \n        };\n        break;\n    }\n    \n    setCurrentItem(emptyItem);\n    setShowModal(true);\n  };\n\n  const handleEdit = (item) => {\n    setModalMode('edit');\n    setSelectedPhoto(null);\n    setPhotoPreview(null);\n    setCurrentItem(item);\n    setShowModal(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      let endpoint = '';\n      switch(category) {\n        case 'employers':\n          endpoint = '/employers/delete_employer';\n          break;\n        case 'events':\n          endpoint = '/events/delete_event';\n          break;\n        case 'residents':\n          endpoint = '/residents/delete_resident';\n          break;\n        case 'products':\n          endpoint = '/cards/admin/delete_product';\n          break;\n        case 'workdays':\n          endpoint = '/workdays/delete_workday';\n          break;\n      }\n      \n      await axios.delete(`${endpoint}/${id}`);\n      setData(data.filter(item => item.id !== id));\n    } catch (error) {\n      console.error('Error deleting item:', error);\n      // For demo, remove from local state\n      setData(data.filter(item => item.id !== id));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      let endpoint = '';\n      let payload = { ...currentItem };\n      \n      switch(category) {\n        case 'employers':\n          endpoint = '/employers/edit_employer';\n          break;\n        case 'events':\n          endpoint = '/events/create_event';\n          break;\n        case 'residents':\n          endpoint = '/residents/add_resident';\n          break;\n        case 'products':\n          endpoint = '/cards/admin/add_card';\n          break;\n        case 'workdays':\n          endpoint = '/workdays/add_workday';\n          break;\n      }\n      \n      let response;\n      if (modalMode === 'add') {\n        response = await axios.post(endpoint, payload);\n      } else {\n        response = await axios.put(endpoint, payload);\n      }\n      \n      // If photo was selected, upload it\n      if (selectedPhoto && response.data.id) {\n        await uploadPhoto(category, response.data.id);\n      }\n      \n      await fetchData();\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error saving item:', error);\n      // For demo, update local state\n      if (modalMode === 'add') {\n        const newItem = { ...currentItem, id: data.length + 1 };\n        setData([...data, newItem]);\n      } else {\n        setData(data.map(item => item.id === currentItem.id ? currentItem : item));\n      }\n      setShowModal(false);\n    }\n  };\n\n  // Render functions\n  const renderCategorySelection = () => (\n    <div className=\"admin-selection\">\n      <div className=\"admin-option\" onClick={() => { setCategory('employers'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Работники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('residents'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Постоянники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('events'); setStep('location'); }}>\n        <Calendar className=\"admin-option-icon\" />\n        События\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('products'); setStep('location'); }}>\n        <Book className=\"admin-option-icon\" />\n        Методички\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('workdays'); setStep('location'); }}>\n        <Clock className=\"admin-option-icon\" />\n        Расписание\n      </div>\n    </div>\n  );\n\n  const renderLocationSelection = () => (\n    <>\n      <button className=\"admin-back-button\" onClick={() => { setStep('category'); setCategory(null); }}>\n        <ArrowLeft size={16} /> Назад\n      </button>\n      \n      <div className=\"admin-location-selection\">\n        <div className=\"admin-location-card\" onClick={() => { setLocation('Проспект мира'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80\" \n            alt=\"Проспект мира\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Проспект мира</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Страстная'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1374&q=80\" \n            alt=\"Страстная\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Страстная</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Никольская'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1525268323446-0505b6fe7778?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1472&q=80\" \n            alt=\"Никольская\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Никольская</div>\n        </div>\n      </div>\n    </>\n  );\n\n  const renderDataView = () => {\n    if (loading) return <div>Загрузка...</div>;\n    if (error) return <div>{error}</div>;\n    \n    return (\n      <>\n        <div className=\"admin-back-button\" onClick={() => { setStep('location'); setLocation(null); }}>\n          <ArrowLeft size={16} /> Назад\n        </div>\n        \n        <div className=\"admin-location-title\">{location}</div>\n        \n        <div className=\"admin-data-container\">\n          <div className=\"admin-search-bar\">\n            <input \n              type=\"text\" \n              placeholder={category === 'workdays' ? \"Поиск по имени сотрудника...\" : \"Поиск...\"}\n              className=\"admin-search-input\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            \n            {(category === 'events' || category === 'workdays') && (\n              <input \n                type=\"date\" \n                className=\"admin-date-input\"\n                value={dateFilter}\n                onChange={(e) => setDateFilter(e.target.value)}\n              />\n            )}\n          </div>\n          \n          <button className=\"admin-add-button\" onClick={handleAdd}>\n            <Plus size={16} /> Добавить\n          </button>\n          \n          {renderDataContent()}\n          \n          {totalPages > 1 && (\n            <div className=\"admin-pagination\">\n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === 1}\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n              >\n                <ChevronLeft size={16} />\n              </button>\n              \n              {Array.from({ length: totalPages }, (_, i) => (\n                <button \n                  key={i}\n                  className={`admin-pagination-button ${currentPage === i + 1 ? 'active' : ''}`}\n                  onClick={() => setCurrentPage(i + 1)}\n                >\n                  {i + 1}\n                </button>\n              ))}\n              \n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === totalPages}\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n              >\n                <ChevronRight size={16} />\n              </button>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderDataContent = () => {\n    switch(category) {\n      case 'employers':\n        return renderEmployersTable();\n      case 'events':\n        return renderEventsTable();\n      case 'residents':\n        return renderResidentsCards();\n      case 'products':\n        return renderProductsTable();\n      case 'workdays':\n        return renderWorkdaysTable();\n      default:\n        return null;\n    }\n  };\n\n  const renderEmployersTable = () => (\n    <div>\n      {currentItems.map((employer) => (\n        <div key={employer.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">\n            {employer.photo ? (\n              <img src={employer.photo} alt={employer.fio} className=\"admin-table-cell-photo\" />\n            ) : (\n              <User size={40} />\n            )}\n            {employer.fio}\n          </div>\n          <div className=\"admin-table-cell\">{employer.work_type}</div>\n          <div className=\"admin-table-cell\">{employer.email}</div>\n          <div className=\"admin-table-cell\">{employer.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(employer)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(employer.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderEventsTable = () => (\n    <div>\n      {currentItems.map((event) => (\n        <div key={event.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{event.name}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-{new Date(new Date(event.date_start).getTime() + 4 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>\n          <div className=\"admin-table-cell\">{event.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(event)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(event.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderResidentsCards = () => (\n    <div className=\"admin-cards-container\">\n      {currentItems.map((resident) => (\n        <div key={resident.id} className=\"admin-card\">\n          {resident.photo ? (\n            <img src={resident.photo} alt={resident.fio} className=\"admin-card-photo\" />\n          ) : (\n            <div className=\"admin-card-photo\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#2a2a2a' }}>\n              <User size={64} />\n            </div>\n          )}\n          <div className=\"admin-card-header\">{resident.fio}</div>\n          <div className=\"admin-card-body\">\n            <p>Скидка: {resident.discount_value}%</p>\n            <p>Локация: {resident.location_name}</p>\n            <p className=\"admin-card-description\">{resident.description}</p>\n          </div>\n          <div className=\"admin-card-footer\">\n            <div className=\"admin-card-action admin-card-edit\" onClick={() => handleEdit(resident)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-card-action admin-card-delete\" onClick={() => handleDelete(resident.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderProductsTable = () => (\n    <div>\n      {currentItems.map((product) => (\n        <div key={product.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">\n            {product.photo ? (\n              <img src={product.photo} alt={product.name} className=\"admin-table-cell-photo\" />\n            ) : (\n              <Book size={40} />\n            )}\n            {product.name}\n          </div>\n          <div className=\"admin-table-cell\">{product.category}</div>\n          <div className=\"admin-table-cell\">{product.description.substring(0, 50)}...</div>\n          <div className=\"admin-table-cell\">{product.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(product)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(product.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderWorkdaysTable = () => (\n    <div>\n      {currentItems.map((workday) => (\n        <div key={workday.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{workday.employer_fio}</div>\n          <div className=\"admin-table-cell\">{workday.location_name}</div>\n          <div className=\"admin-table-cell\">{new Date(workday.work_time).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">\n            {new Date(workday.work_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-\n            {new Date(new Date(workday.work_time).getTime() + 8 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n          </div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(workday)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(workday.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderPhotoUpload = () => (\n    <div className=\"admin-photo-upload\">\n      <label className=\"admin-form-label\">Фотография</label>\n      {photoPreview && (\n        <img src={photoPreview} alt=\"Preview\" className=\"admin-photo-preview\" />\n      )}\n      <label className=\"admin-photo-upload-button\">\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handlePhotoChange}\n          style={{ display: 'none' }}\n        />\n        <Upload size={16} style={{ marginRight: '8px' }} />\n        {photoPreview ? 'Изменить фото' : 'Загрузить фото'}\n      </label>\n    </div>\n  );\n\n  const renderModal = () => {\n    if (!showModal) return null;\n    \n    return (\n      <div className=\"admin-modal\">\n        <div className=\"admin-modal-content\">\n          <div className=\"admin-modal-header\">\n            <h2>{modalMode === 'add' ? 'Добавить' : 'Редактировать'}</h2>\n            <button className=\"admin-modal-close\" onClick={() => setShowModal(false)}>×</button>\n          </div>\n          \n          <form className=\"admin-form\" onSubmit={handleSubmit}>\n            {renderFormFields()}\n            \n            {(category === 'employers' || category === 'residents' || category === 'products') && renderPhotoUpload()}\n            \n            <button type=\"submit\" className=\"admin-form-submit\">\n              {modalMode === 'add' ? 'Добавить' : 'Сохранить'}\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFormFields = () => {\n    switch(category) {\n      case 'employers':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Email</label>\n              <input \n                type=\"email\" \n                className=\"admin-form-input\"\n                value={currentItem?.email || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, email: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Должность</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_type || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_type: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Контакты</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.contacts?.join(', ') || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, contacts: e.target.value.split(', ') })}\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n              />\n            </div>\n          </>\n        );\n        \n      case 'events':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.date_start ? new Date(currentItem.date_start).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, date_start: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'residents':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Скидка (%)</label>\n              <input \n                type=\"number\" \n                className=\"admin-form-input\"\n                value={currentItem?.discount_value || 0}\n                onChange={(e) => setCurrentItem({ ...currentItem, discount_value: parseInt(e.target.value) })}\n                required\n                min=\"0\"\n                max=\"100\"\n              />\n            </div>\n\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n              />\n            </div>\n          </>\n        );\n        \n      case 'products':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Категория</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.category || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, category: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'workdays':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО сотрудника</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.employer_fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, employer_fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_time ? new Date(currentItem.work_time).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_time: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <div className=\"admin-header\">\n        Административная панель\n      </div>\n      \n      {step === 'category' && renderCategorySelection()}\n      {step === 'location' && renderLocationSelection()}\n      {step === 'data' && renderDataView()}\n      \n      {renderModal()}\n    </div>\n  );\n};\n\nexport default AdminPanel;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}