{"ast":null,"code":"var _jsxFileName = \"/home/f1alka/front_fut/front2.0/src/pages/Mixes.jsx\";\n/*import React, { useState, useRef } from 'react';\nimport { FaEdit, FaTimes, FaPlus, FaUser, FaCalendar, FaArrowLeft, FaClock } from 'react-icons/fa';\nimport './css/admin.css';\n\nconst LOCATIONS = [\n  { id: 1, name: 'Арбат', image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4' },\n  { id: 2, name: 'Проспект мира', image: 'https://images.unsplash.com/photo-1552566626-52f8b828add9' },\n  { id: 3, name: 'Никольская', image: 'https://images.unsplash.com/photo-1514933651103-005eec06c04b' }\n];\n\nconst ROLES = ['Повар', 'Кальянщик', 'Бармен', 'Официант', 'Хостес', 'Другое'];\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('main');\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  \n  const [items, setItems] = useState({\n    workers: [\n      { id: 1, name: 'Иван Иванов', role: 'Повар', photo: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80', location: 'Арбат', email: 'ivan@example.com', phone: '+7 999 123 45 67', telegram: '@ivan', description: 'Опытный шеф-повар', workTime: '09:00-18:00' },\n      { id: 2, name: 'Петр Петров', role: 'Бармен', photo: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e', location: 'Никольская', email: 'petr@example.com', phone: '+7 999 765 43 21', telegram: '@petr', description: 'Профессиональный бармен', workTime: '12:00-21:00' }\n    ],\n    regulars: [\n      { id: 1, name: 'Анна Смирнова', photo: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2', location: 'Арбат', description: 'Постоянный клиент с 2020 года' },\n      { id: 2, name: 'Мария Козлова', photo: 'https://images.unsplash.com/photo-1547425260-76bcadfb4f2c', location: 'Проспект мира', description: 'VIP гость' }\n    ],\n    events: [\n      { id: 1, title: 'Джазовый вечер', description: 'Живая музыка и особое меню', location: 'Арбат', date: '2023-10-15', time: '19:00-23:00' },\n      { id: 2, title: 'Дегустация вин', description: 'Презентация новой винной карты', location: 'Никольская', date: '2023-10-20', time: '18:00-22:00' }\n    ]\n  });\n\n  const handleBack = () => {\n    if (currentView === 'items') {\n      setCurrentView('locations');\n      setSelectedLocation(null);\n    } else if (currentView === 'locations') {\n      setCurrentView('main');\n      setSelectedType(null);\n    }\n  };\n\n  const handleMainButtonClick = (type) => {\n    setSelectedType(type);\n    setCurrentView('locations');\n  };\n\n  const handleLocationSelect = (location) => {\n    setSelectedLocation(location);\n    setCurrentView('items');\n  };\n\n  const handleAddItem = () => {\n    setModalType('add');\n    setShowModal(true);\n    setSelectedItem(null);\n  };\n\n  const handleEditItem = (item) => {\n    setModalType('edit');\n    setShowModal(true);\n    setSelectedItem(item);\n  };\n\n  const handleDeleteItem = (item) => {\n    setSelectedItem(item);\n    setShowDeleteConfirm(true);\n  };\n\n  const confirmDelete = () => {\n    setItems(prev => ({\n      ...prev,\n      [selectedType]: prev[selectedType].filter(item => item.id !== selectedItem.id)\n    }));\n    setShowDeleteConfirm(false);\n  };\n\n  const handleFileChange = (e, setFormData) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFormData(prev => ({ ...prev, photo: reader.result }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleModalSubmit = (formData) => {\n    if (modalType === 'add') {\n      setItems(prev => ({\n        ...prev,\n        [selectedType]: [...prev[selectedType], { id: Date.now(), ...formData, location: selectedLocation }]\n      }));\n    } else {\n      setItems(prev => ({\n        ...prev,\n        [selectedType]: prev[selectedType].map(item => \n          item.id === selectedItem.id ? { ...item, ...formData } : item\n        )\n      }));\n    }\n    setShowModal(false);\n  };\n\n  const filterItems = (items) => {\n    return items.filter(item => {\n      const searchMatch = selectedType === 'events'\n        ? item.title.toLowerCase().includes(searchTerm.toLowerCase())\n        : item.name.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const roleMatch = selectedType === 'workers'\n        ? !selectedRole || item.role === selectedRole\n        : true;\n      \n      const dateMatch = selectedType === 'events'\n        ? !selectedDate || item.date === selectedDate\n        : true;\n\n      return searchMatch && roleMatch && dateMatch;\n    });\n  };\n\n  const renderMainView = () => (\n    <div className=\"main-buttons\">\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('workers')}>\n        <FaUser /> Работники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('regulars')}>\n        <FaUser /> Постоянники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('events')}>\n        <FaCalendar /> События\n      </button>\n    </div>\n  );\n\n  const renderLocationsView = () => (\n    <>\n      <div className=\"navigation\">\n        <button className=\"back-button\" onClick={handleBack}>\n          <FaArrowLeft />\n        </button>\n        <h1 className=\"page-title\">Выберите локацию</h1>\n      </div>\n      <div className=\"locations\">\n        {LOCATIONS.map(location => (\n          <div key={location.id} className=\"location-card\" onClick={() => handleLocationSelect(location.name)}>\n            <img src={location.image} alt={location.name} />\n            <h3>{location.name}</h3>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n\n  const renderItemsView = () => {\n    const currentItems = filterItems(items[selectedType].filter(item => item.location === selectedLocation));\n    \n    return (\n      <>\n        <div className=\"navigation\">\n          <button className=\"back-button\" onClick={handleBack}>\n            <FaArrowLeft />\n          </button>\n          <h1 className=\"page-title\">{selectedLocation}</h1>\n        </div>\n        <div className=\"filters\">\n          <input\n            type=\"text\"\n            placeholder={selectedType === 'events' ? \"Поиск по названию...\" : \"Поиск по имени...\"}\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"filter-input\"\n          />\n          {selectedType === 'workers' && (\n            <select\n              value={selectedRole}\n              onChange={(e) => setSelectedRole(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"\">Все должности</option>\n              {ROLES.map(role => (\n                <option key={role} value={role}>{role}</option>\n              ))}\n            </select>\n          )}\n          {selectedType === 'events' && (\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"filter-input\"\n            />\n          )}\n        </div>\n        <div className=\"items-list\">\n          {currentItems.map(item => (\n            <div key={item.id} className=\"item-row\">\n              <div>{item.name || item.title}</div>\n              {selectedType === 'workers' && <div>{item.role}</div>}\n              \n              {selectedType === 'events' && (\n                <>\n                  <div>{item.date}</div>\n                  <div>{item.time}</div>\n                </>\n              )}\n              {selectedType === 'workers' && <div>{item.workTime}</div>}\n              \n              <div>{item.location}</div>\n              <div className=\"item-actions\">\n                <button className=\"action-button delete-button\" onClick={() => handleDeleteItem(item)}>\n                  <FaTimes />\n                </button>\n                <button className=\"action-button edit-button\" onClick={() => handleEditItem(item)}>\n                  <FaEdit />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n        <button className=\"add-button\" onClick={handleAddItem}>\n          <FaPlus />\n        </button>\n      </>\n    );\n  };\n\n  const renderModal = () => {\n    if (!showModal) return null;\n\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <ModalForm\n            type={selectedType}\n            initialData={selectedItem}\n            onSubmit={handleModalSubmit}\n            onCancel={() => setShowModal(false)}\n            onFileChange={handleFileChange}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderDeleteConfirm = () => {\n    if (!showDeleteConfirm) return null;\n\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <h3>Подтверждение удаления</h3>\n          <p>Вы уверены, что хотите удалить этот элемент?</p>\n          <div className=\"modal-buttons\">\n            <button className=\"modal-button cancel-button\" onClick={() => setShowDeleteConfirm(false)}>Нет</button>\n            <button className=\"modal-button confirm-button\" onClick={confirmDelete}>Да</button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"admin-panel\">\n      {currentView === 'main' && renderMainView()}\n      {currentView === 'locations' && renderLocationsView()}\n      {currentView === 'items' && renderItemsView()}\n      {renderModal()}\n      {renderDeleteConfirm()}\n    </div>\n  );\n}\n\nfunction ModalForm({ type, initialData, onSubmit, onCancel, onFileChange }) {\n  const [formData, setFormData] = useState(\n    initialData || {\n      name: '',\n      role: '',\n      photo: '',\n      title: '',\n      description: '',\n      email: '',\n      phone: '',\n      telegram: '',\n      workTime: '',\n      date: '',\n      time: ''\n    }\n  );\n\n  const fileInputRef = useRef(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-form\">\n      <h3>{initialData ? 'Редактировать' : 'Добавить'}</h3>\n      \n      {type !== 'events' && (\n        <>\n          <div className=\"form-group\">\n            <label>ФИО:</label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group file-input-group\">\n            <label>Фото:</label>\n            <button\n              type=\"button\"\n              className=\"file-input-button\"\n              onClick={() => fileInputRef.current.click()}\n            >\n              Выбрать фото\n            </button>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              style={{ display: 'none' }}\n              onChange={e => onFileChange(e, setFormData)}\n            />\n            <div className=\"file-input-preview\">\n              {formData.photo && <img src={formData.photo} alt=\"Preview\" />}\n            </div>\n          </div>\n        </>\n      )}\n\n      {type === 'workers' && (\n        <>\n          <div className=\"form-group\">\n            <label>Роль:</label>\n            <select\n              value={formData.role}\n              onChange={e => setFormData(prev => ({ ...prev, role: e.target.value }))}\n              required\n            >\n              <option value=\"\">Выберите роль</option>\n              {ROLES.map(role => (\n                <option key={role} value={role}>{role}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Время работы:</label>\n            <input\n              type=\"text\"\n              value={formData.workTime}\n              onChange={e => setFormData(prev => ({ ...prev, workTime: e.target.value }))}\n              placeholder=\"09:00-18:00\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              value={formData.email}\n              onChange={e => setFormData(prev => ({ ...prev, email: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Телефон:</label>\n            <input\n              type=\"tel\"\n              value={formData.phone}\n              onChange={e => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Telegram:</label>\n            <input\n              type=\"text\"\n              value={formData.telegram}\n              onChange={e => setFormData(prev => ({ ...prev, telegram: e.target.value }))}\n              required\n            />\n          </div>\n        </>\n      )}\n\n      {type === 'events' && (\n        <>\n          <div className=\"form-group\">\n            <label>Название:</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={e => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Дата:</label>\n            <input\n              type=\"date\"\n              value={formData.date}\n              onChange={e => setFormData(prev => ({ ...prev, date: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Время:</label>\n            <input\n              type=\"text\"\n              value={formData.time}\n              placeholder=\"18:00-22:00\"\n              onChange={e => setFormData(prev => ({ ...prev, time: e.target.value }))}\n              required\n            />\n          </div>\n        </>\n      )}\n\n      <div className=\"form-group\">\n        <label>Описание:</label>\n        <textarea\n          value={formData.description}\n          onChange={e => setFormData(prev => ({ ...prev, description: e.target.value }))}\n          required\n          rows=\"4\"\n        />\n      </div>\n\n      <div className=\"modal-buttons\">\n        <button type=\"button\" className=\"modal-button cancel-button\" onClick={onCancel}>\n          Отмена\n        </button>\n        <button type=\"submit\" className=\"modal-button confirm-button\">\n          {initialData ? 'Сохранить' : 'Добавить'}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default App;\n\n*/\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FaEdit, FaTimes, FaPlus, FaUser, FaCalendar, FaArrowLeft } from 'react-icons/fa';\nimport './css/admin.css';\nconst LOCATIONS = ['Арбат', 'Проспект мира', 'Никольская'];\nconst ROLES = ['Повар', 'Кальянщик', 'Бармен', 'Официант', 'Хостес', 'Другое'];\nconst API_BASE = 'https://api.example.com'; // Замените на реальный URL\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('main');\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n  useEffect(() => {\n    if (selectedType && selectedLocation) {\n      fetchItems();\n    }\n  }, [selectedType, selectedLocation, page]);\n  const fetchItems = async () => {\n    try {\n      setLoading(true);\n      const endpoint = `${API_BASE}/${getEndpoint(selectedType)}/${selectedLocation}`;\n      const response = await axios.get(endpoint, {\n        params: {\n          page,\n          limit\n        }\n      });\n      setItems(response.data.items);\n    } catch (error) {\n      console.error('Ошибка загрузки данных:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getEndpoint = type => {\n    switch (type) {\n      case 'workers':\n        return 'employers/get_list_employers';\n      case 'regulars':\n        return 'residents/get_list_residents';\n      case 'events':\n        return 'events/get_not_actually_events';\n      default:\n        return '';\n    }\n  };\n  const handleAddOrEdit = async formData => {\n    const endpoint = `${API_BASE}/${modalType === 'add' ? getCreateEndpoint(selectedType) : getEditEndpoint(selectedType)}`;\n    try {\n      setLoading(true);\n      if (modalType === 'add') {\n        await axios.post(endpoint, {\n          ...formData,\n          location: selectedLocation\n        });\n      } else {\n        await axios.put(`${endpoint}/${selectedItem.id}`, formData);\n      }\n      fetchItems();\n    } catch (error) {\n      console.error('Ошибка сохранения данных:', error);\n    } finally {\n      setShowModal(false);\n      setLoading(false);\n    }\n  };\n  const getCreateEndpoint = type => {\n    switch (type) {\n      case 'workers':\n        return 'employers/edit_employer';\n      case 'regulars':\n        return 'residents/edit_resident';\n      case 'events':\n        return 'events/create_event';\n      default:\n        return '';\n    }\n  };\n  const getEditEndpoint = type => getCreateEndpoint(type);\n  const handleDelete = async itemId => {\n    const endpoint = `${API_BASE}/${getDeleteEndpoint(selectedType)}`;\n    try {\n      setLoading(true);\n      await axios.delete(`${endpoint}/${itemId}`);\n      fetchItems();\n    } catch (error) {\n      console.error('Ошибка удаления:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getDeleteEndpoint = type => {\n    switch (type) {\n      case 'workers':\n        return 'employers/delete_employer';\n      case 'regulars':\n        return 'residents/delete_resident';\n      case 'events':\n        return 'events/delete_event';\n      default:\n        return '';\n    }\n  };\n  const renderMainView = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main-button\",\n    onClick: () => setSelectedType('workers'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 9\n    }\n  }), \" \\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main-button\",\n    onClick: () => setSelectedType('regulars'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 9\n    }\n  }), \" \\u041F\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u043D\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main-button\",\n    onClick: () => setSelectedType('events'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 9\n    }\n  }), \" \\u041C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"));\n  const renderLocationsView = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"locations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 5\n    }\n  }, LOCATIONS.map(location => /*#__PURE__*/React.createElement(\"button\", {\n    key: location,\n    onClick: () => setSelectedLocation(location),\n    className: \"location-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }\n  }, location)));\n  const renderItemsView = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCurrentView('locations'),\n    className: \"back-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 11\n    }\n  }), \" \\u041D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 9\n    }\n  }, selectedLocation)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.id,\n    className: \"item-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 13\n    }\n  }, item.name || item.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSelectedItem(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 15\n    }\n  }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 15\n    }\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 5\n    }\n  }, currentView === 'main' && renderMainView(), currentView === 'locations' && renderLocationsView(), currentView === 'items' && renderItemsView(), showModal && /*#__PURE__*/React.createElement(Modal, {\n    type: selectedType,\n    onClose: () => setShowModal(false),\n    onSubmit: handleAddOrEdit,\n    initialData: selectedItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 9\n    }\n  }));\n}\nfunction Modal({\n  type,\n  onClose,\n  onSubmit,\n  initialData\n}) {\n  const [formData, setFormData] = useState(initialData || {});\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 9\n    }\n  }, initialData ? 'Редактировать' : 'Добавить'), type === 'workers' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0424\\u0418\\u041E\",\n    value: formData.name || '',\n    onChange: e => setFormData({\n      ...formData,\n      name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 9\n    }\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","FaEdit","FaTimes","FaPlus","FaUser","FaCalendar","FaArrowLeft","LOCATIONS","ROLES","API_BASE","App","currentView","setCurrentView","selectedType","setSelectedType","selectedLocation","setSelectedLocation","items","setItems","page","setPage","limit","setLimit","loading","setLoading","showModal","setShowModal","modalType","setModalType","selectedItem","setSelectedItem","fetchItems","endpoint","getEndpoint","response","get","params","data","error","console","type","handleAddOrEdit","formData","getCreateEndpoint","getEditEndpoint","post","location","put","id","handleDelete","itemId","getDeleteEndpoint","delete","renderMainView","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderLocationsView","map","key","renderItemsView","item","name","title","Modal","onClose","onSubmit","initialData","setFormData","handleSubmit","e","preventDefault","placeholder","value","onChange","target"],"sources":["/home/f1alka/front_fut/front2.0/src/pages/Mixes.jsx"],"sourcesContent":["/*import React, { useState, useRef } from 'react';\nimport { FaEdit, FaTimes, FaPlus, FaUser, FaCalendar, FaArrowLeft, FaClock } from 'react-icons/fa';\nimport './css/admin.css';\n\nconst LOCATIONS = [\n  { id: 1, name: 'Арбат', image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4' },\n  { id: 2, name: 'Проспект мира', image: 'https://images.unsplash.com/photo-1552566626-52f8b828add9' },\n  { id: 3, name: 'Никольская', image: 'https://images.unsplash.com/photo-1514933651103-005eec06c04b' }\n];\n\nconst ROLES = ['Повар', 'Кальянщик', 'Бармен', 'Официант', 'Хостес', 'Другое'];\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('main');\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  \n  const [items, setItems] = useState({\n    workers: [\n      { id: 1, name: 'Иван Иванов', role: 'Повар', photo: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80', location: 'Арбат', email: 'ivan@example.com', phone: '+7 999 123 45 67', telegram: '@ivan', description: 'Опытный шеф-повар', workTime: '09:00-18:00' },\n      { id: 2, name: 'Петр Петров', role: 'Бармен', photo: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e', location: 'Никольская', email: 'petr@example.com', phone: '+7 999 765 43 21', telegram: '@petr', description: 'Профессиональный бармен', workTime: '12:00-21:00' }\n    ],\n    regulars: [\n      { id: 1, name: 'Анна Смирнова', photo: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2', location: 'Арбат', description: 'Постоянный клиент с 2020 года' },\n      { id: 2, name: 'Мария Козлова', photo: 'https://images.unsplash.com/photo-1547425260-76bcadfb4f2c', location: 'Проспект мира', description: 'VIP гость' }\n    ],\n    events: [\n      { id: 1, title: 'Джазовый вечер', description: 'Живая музыка и особое меню', location: 'Арбат', date: '2023-10-15', time: '19:00-23:00' },\n      { id: 2, title: 'Дегустация вин', description: 'Презентация новой винной карты', location: 'Никольская', date: '2023-10-20', time: '18:00-22:00' }\n    ]\n  });\n\n  const handleBack = () => {\n    if (currentView === 'items') {\n      setCurrentView('locations');\n      setSelectedLocation(null);\n    } else if (currentView === 'locations') {\n      setCurrentView('main');\n      setSelectedType(null);\n    }\n  };\n\n  const handleMainButtonClick = (type) => {\n    setSelectedType(type);\n    setCurrentView('locations');\n  };\n\n  const handleLocationSelect = (location) => {\n    setSelectedLocation(location);\n    setCurrentView('items');\n  };\n\n  const handleAddItem = () => {\n    setModalType('add');\n    setShowModal(true);\n    setSelectedItem(null);\n  };\n\n  const handleEditItem = (item) => {\n    setModalType('edit');\n    setShowModal(true);\n    setSelectedItem(item);\n  };\n\n  const handleDeleteItem = (item) => {\n    setSelectedItem(item);\n    setShowDeleteConfirm(true);\n  };\n\n  const confirmDelete = () => {\n    setItems(prev => ({\n      ...prev,\n      [selectedType]: prev[selectedType].filter(item => item.id !== selectedItem.id)\n    }));\n    setShowDeleteConfirm(false);\n  };\n\n  const handleFileChange = (e, setFormData) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFormData(prev => ({ ...prev, photo: reader.result }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleModalSubmit = (formData) => {\n    if (modalType === 'add') {\n      setItems(prev => ({\n        ...prev,\n        [selectedType]: [...prev[selectedType], { id: Date.now(), ...formData, location: selectedLocation }]\n      }));\n    } else {\n      setItems(prev => ({\n        ...prev,\n        [selectedType]: prev[selectedType].map(item => \n          item.id === selectedItem.id ? { ...item, ...formData } : item\n        )\n      }));\n    }\n    setShowModal(false);\n  };\n\n  const filterItems = (items) => {\n    return items.filter(item => {\n      const searchMatch = selectedType === 'events'\n        ? item.title.toLowerCase().includes(searchTerm.toLowerCase())\n        : item.name.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const roleMatch = selectedType === 'workers'\n        ? !selectedRole || item.role === selectedRole\n        : true;\n      \n      const dateMatch = selectedType === 'events'\n        ? !selectedDate || item.date === selectedDate\n        : true;\n\n      return searchMatch && roleMatch && dateMatch;\n    });\n  };\n\n  const renderMainView = () => (\n    <div className=\"main-buttons\">\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('workers')}>\n        <FaUser /> Работники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('regulars')}>\n        <FaUser /> Постоянники\n      </button>\n      <button className=\"main-button\" onClick={() => handleMainButtonClick('events')}>\n        <FaCalendar /> События\n      </button>\n    </div>\n  );\n\n  const renderLocationsView = () => (\n    <>\n      <div className=\"navigation\">\n        <button className=\"back-button\" onClick={handleBack}>\n          <FaArrowLeft />\n        </button>\n        <h1 className=\"page-title\">Выберите локацию</h1>\n      </div>\n      <div className=\"locations\">\n        {LOCATIONS.map(location => (\n          <div key={location.id} className=\"location-card\" onClick={() => handleLocationSelect(location.name)}>\n            <img src={location.image} alt={location.name} />\n            <h3>{location.name}</h3>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n\n  const renderItemsView = () => {\n    const currentItems = filterItems(items[selectedType].filter(item => item.location === selectedLocation));\n    \n    return (\n      <>\n        <div className=\"navigation\">\n          <button className=\"back-button\" onClick={handleBack}>\n            <FaArrowLeft />\n          </button>\n          <h1 className=\"page-title\">{selectedLocation}</h1>\n        </div>\n        <div className=\"filters\">\n          <input\n            type=\"text\"\n            placeholder={selectedType === 'events' ? \"Поиск по названию...\" : \"Поиск по имени...\"}\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"filter-input\"\n          />\n          {selectedType === 'workers' && (\n            <select\n              value={selectedRole}\n              onChange={(e) => setSelectedRole(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"\">Все должности</option>\n              {ROLES.map(role => (\n                <option key={role} value={role}>{role}</option>\n              ))}\n            </select>\n          )}\n          {selectedType === 'events' && (\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"filter-input\"\n            />\n          )}\n        </div>\n        <div className=\"items-list\">\n          {currentItems.map(item => (\n            <div key={item.id} className=\"item-row\">\n              <div>{item.name || item.title}</div>\n              {selectedType === 'workers' && <div>{item.role}</div>}\n              \n              {selectedType === 'events' && (\n                <>\n                  <div>{item.date}</div>\n                  <div>{item.time}</div>\n                </>\n              )}\n              {selectedType === 'workers' && <div>{item.workTime}</div>}\n              \n              <div>{item.location}</div>\n              <div className=\"item-actions\">\n                <button className=\"action-button delete-button\" onClick={() => handleDeleteItem(item)}>\n                  <FaTimes />\n                </button>\n                <button className=\"action-button edit-button\" onClick={() => handleEditItem(item)}>\n                  <FaEdit />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n        <button className=\"add-button\" onClick={handleAddItem}>\n          <FaPlus />\n        </button>\n      </>\n    );\n  };\n\n  const renderModal = () => {\n    if (!showModal) return null;\n\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <ModalForm\n            type={selectedType}\n            initialData={selectedItem}\n            onSubmit={handleModalSubmit}\n            onCancel={() => setShowModal(false)}\n            onFileChange={handleFileChange}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderDeleteConfirm = () => {\n    if (!showDeleteConfirm) return null;\n\n    return (\n      <div className=\"modal-overlay\">\n        <div className=\"modal-content\">\n          <h3>Подтверждение удаления</h3>\n          <p>Вы уверены, что хотите удалить этот элемент?</p>\n          <div className=\"modal-buttons\">\n            <button className=\"modal-button cancel-button\" onClick={() => setShowDeleteConfirm(false)}>Нет</button>\n            <button className=\"modal-button confirm-button\" onClick={confirmDelete}>Да</button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"admin-panel\">\n      {currentView === 'main' && renderMainView()}\n      {currentView === 'locations' && renderLocationsView()}\n      {currentView === 'items' && renderItemsView()}\n      {renderModal()}\n      {renderDeleteConfirm()}\n    </div>\n  );\n}\n\nfunction ModalForm({ type, initialData, onSubmit, onCancel, onFileChange }) {\n  const [formData, setFormData] = useState(\n    initialData || {\n      name: '',\n      role: '',\n      photo: '',\n      title: '',\n      description: '',\n      email: '',\n      phone: '',\n      telegram: '',\n      workTime: '',\n      date: '',\n      time: ''\n    }\n  );\n\n  const fileInputRef = useRef(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-form\">\n      <h3>{initialData ? 'Редактировать' : 'Добавить'}</h3>\n      \n      {type !== 'events' && (\n        <>\n          <div className=\"form-group\">\n            <label>ФИО:</label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group file-input-group\">\n            <label>Фото:</label>\n            <button\n              type=\"button\"\n              className=\"file-input-button\"\n              onClick={() => fileInputRef.current.click()}\n            >\n              Выбрать фото\n            </button>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              style={{ display: 'none' }}\n              onChange={e => onFileChange(e, setFormData)}\n            />\n            <div className=\"file-input-preview\">\n              {formData.photo && <img src={formData.photo} alt=\"Preview\" />}\n            </div>\n          </div>\n        </>\n      )}\n\n      {type === 'workers' && (\n        <>\n          <div className=\"form-group\">\n            <label>Роль:</label>\n            <select\n              value={formData.role}\n              onChange={e => setFormData(prev => ({ ...prev, role: e.target.value }))}\n              required\n            >\n              <option value=\"\">Выберите роль</option>\n              {ROLES.map(role => (\n                <option key={role} value={role}>{role}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Время работы:</label>\n            <input\n              type=\"text\"\n              value={formData.workTime}\n              onChange={e => setFormData(prev => ({ ...prev, workTime: e.target.value }))}\n              placeholder=\"09:00-18:00\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              value={formData.email}\n              onChange={e => setFormData(prev => ({ ...prev, email: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Телефон:</label>\n            <input\n              type=\"tel\"\n              value={formData.phone}\n              onChange={e => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Telegram:</label>\n            <input\n              type=\"text\"\n              value={formData.telegram}\n              onChange={e => setFormData(prev => ({ ...prev, telegram: e.target.value }))}\n              required\n            />\n          </div>\n        </>\n      )}\n\n      {type === 'events' && (\n        <>\n          <div className=\"form-group\">\n            <label>Название:</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={e => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Дата:</label>\n            <input\n              type=\"date\"\n              value={formData.date}\n              onChange={e => setFormData(prev => ({ ...prev, date: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Время:</label>\n            <input\n              type=\"text\"\n              value={formData.time}\n              placeholder=\"18:00-22:00\"\n              onChange={e => setFormData(prev => ({ ...prev, time: e.target.value }))}\n              required\n            />\n          </div>\n        </>\n      )}\n\n      <div className=\"form-group\">\n        <label>Описание:</label>\n        <textarea\n          value={formData.description}\n          onChange={e => setFormData(prev => ({ ...prev, description: e.target.value }))}\n          required\n          rows=\"4\"\n        />\n      </div>\n\n      <div className=\"modal-buttons\">\n        <button type=\"button\" className=\"modal-button cancel-button\" onClick={onCancel}>\n          Отмена\n        </button>\n        <button type=\"submit\" className=\"modal-button confirm-button\">\n          {initialData ? 'Сохранить' : 'Добавить'}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default App;\n\n*/\n\n\n\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FaEdit, FaTimes, FaPlus, FaUser, FaCalendar, FaArrowLeft } from 'react-icons/fa';\nimport './css/admin.css';\n\nconst LOCATIONS = ['Арбат', 'Проспект мира', 'Никольская'];\nconst ROLES = ['Повар', 'Кальянщик', 'Бармен', 'Официант', 'Хостес', 'Другое'];\nconst API_BASE = 'https://api.example.com'; // Замените на реальный URL\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('main');\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(10);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  useEffect(() => {\n    if (selectedType && selectedLocation) {\n      fetchItems();\n    }\n  }, [selectedType, selectedLocation, page]);\n\n  const fetchItems = async () => {\n    try {\n      setLoading(true);\n      const endpoint = `${API_BASE}/${getEndpoint(selectedType)}/${selectedLocation}`;\n      const response = await axios.get(endpoint, { params: { page, limit } });\n      setItems(response.data.items);\n    } catch (error) {\n      console.error('Ошибка загрузки данных:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getEndpoint = (type) => {\n    switch (type) {\n      case 'workers':\n        return 'employers/get_list_employers';\n      case 'regulars':\n        return 'residents/get_list_residents';\n      case 'events':\n        return 'events/get_not_actually_events';\n      default:\n        return '';\n    }\n  };\n\n  const handleAddOrEdit = async (formData) => {\n    const endpoint = `${API_BASE}/${modalType === 'add' ? getCreateEndpoint(selectedType) : getEditEndpoint(selectedType)}`;\n    try {\n      setLoading(true);\n      if (modalType === 'add') {\n        await axios.post(endpoint, { ...formData, location: selectedLocation });\n      } else {\n        await axios.put(`${endpoint}/${selectedItem.id}`, formData);\n      }\n      fetchItems();\n    } catch (error) {\n      console.error('Ошибка сохранения данных:', error);\n    } finally {\n      setShowModal(false);\n      setLoading(false);\n    }\n  };\n\n  const getCreateEndpoint = (type) => {\n    switch (type) {\n      case 'workers':\n        return 'employers/edit_employer';\n      case 'regulars':\n        return 'residents/edit_resident';\n      case 'events':\n        return 'events/create_event';\n      default:\n        return '';\n    }\n  };\n\n  const getEditEndpoint = (type) => getCreateEndpoint(type);\n\n  const handleDelete = async (itemId) => {\n    const endpoint = `${API_BASE}/${getDeleteEndpoint(selectedType)}`;\n    try {\n      setLoading(true);\n      await axios.delete(`${endpoint}/${itemId}`);\n      fetchItems();\n    } catch (error) {\n      console.error('Ошибка удаления:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getDeleteEndpoint = (type) => {\n    switch (type) {\n      case 'workers':\n        return 'employers/delete_employer';\n      case 'regulars':\n        return 'residents/delete_resident';\n      case 'events':\n        return 'events/delete_event';\n      default:\n        return '';\n    }\n  };\n\n  const renderMainView = () => (\n    <div className=\"main-buttons\">\n      <button className=\"main-button\" onClick={() => setSelectedType('workers')}>\n        <FaUser /> Работники\n      </button>\n      <button className=\"main-button\" onClick={() => setSelectedType('regulars')}>\n        <FaUser /> Постоянники\n      </button>\n      <button className=\"main-button\" onClick={() => setSelectedType('events')}>\n        <FaCalendar /> Мероприятия\n      </button>\n    </div>\n  );\n\n  const renderLocationsView = () => (\n    <div className=\"locations\">\n      {LOCATIONS.map((location) => (\n        <button key={location} onClick={() => setSelectedLocation(location)} className=\"location-button\">\n          {location}\n        </button>\n      ))}\n    </div>\n  );\n\n  const renderItemsView = () => (\n    <div>\n      <div className=\"items-header\">\n        <button onClick={() => setCurrentView('locations')} className=\"back-button\">\n          <FaArrowLeft /> Назад\n        </button>\n        <h1>{selectedLocation}</h1>\n      </div>\n      <div className=\"items-list\">\n        {items.map((item) => (\n          <div key={item.id} className=\"item-row\">\n            <span>{item.name || item.title}</span>\n            <div>\n              <button onClick={() => setSelectedItem(item)}>Редактировать</button>\n              <button onClick={() => handleDelete(item.id)}>Удалить</button>\n            </div>\n          </div>\n        ))}\n      </div>\n      <button onClick={() => setShowModal(true)}>Добавить</button>\n    </div>\n  );\n\n  return (\n    <div className=\"admin-panel\">\n      {currentView === 'main' && renderMainView()}\n      {currentView === 'locations' && renderLocationsView()}\n      {currentView === 'items' && renderItemsView()}\n      {showModal && (\n        <Modal\n          type={selectedType}\n          onClose={() => setShowModal(false)}\n          onSubmit={handleAddOrEdit}\n          initialData={selectedItem}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction Modal({ type, onClose, onSubmit, initialData }) {\n  const [formData, setFormData] = useState(initialData || {});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return (\n    <div className=\"modal\">\n      <form onSubmit={handleSubmit}>\n        <h3>{initialData ? 'Редактировать' : 'Добавить'}</h3>\n        {/* Форма изменяется в зависимости от типа */}\n        {type === 'workers' && (\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"ФИО\"\n              value={formData.name || ''}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            />\n          </div>\n        )}\n        {/* Другие поля */}\n        <button type=\"submit\">Сохранить</button>\n        <button type=\"button\" onClick={onClose}>Закрыть</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MA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","ignoreList":[]},"metadata":{},"sourceType":"module"}