{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './css/RegisterPage.css';\n\n// const LoginPage = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"handleSubmit вызван\");\n\n//     setError(null);\n//     setLoading(true);\n\n//     console.log('Отправка запроса на сервер...');\n//     console.log('Данные для отправки:', { username, password });\n\n//     try {\n//       const formData = new URLSearchParams();\n//       formData.append('username', username);\n//       formData.append('password', password);\n\n//       const response = await fetch('http://172.20.10.2:8000/auth/token', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n//         body: formData,\n//       });\n\n//       console.log(\"Ответ от сервера:\", response);\n\n//       if (!response.ok) {\n//         const errorMsg = await response.text();\n//         console.log(\"Ошибка в ответе:\", errorMsg);\n//         throw new Error(errorMsg || 'Ошибка авторизации');\n//       }\n\n//       const data = await response.json();\n//       console.log(\"Полученные данные:\", data);\n\n//       const token = data.access_token || data.token;\n//       if (!token) {\n//         throw new Error('Сервер не вернул токен');\n//       }\n\n//       localStorage.setItem('token', token);\n//       navigate('/profile');  // Перенаправляем в профиль\n\n//     } catch (err) {\n//       console.error(\"Ошибка при запросе:\", err);\n//       setError(err.message || 'Ошибка соединения с сервером');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleSubmit} className=\"login-form\">\n//         <h2>Вход</h2>\n//         {error && <p className=\"error\">{error}</p>}\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Введите логин\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Введите пароль\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n\n//         <button type=\"submit\" disabled={loading} className=\"login-button\">\n//           {loading ? 'Загрузка...' : 'Войти'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\n/*\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/RegisterPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"handleSubmit вызван\");\n\n    setError(null);\n    setLoading(true);\n\n  \n    try {\n      console.log('Данные для отправки:', { username, password });\n\n      navigate('/profile');  \n\n    } catch (err) {\n      console.error(\"Ошибка при обработке данных:\", err);\n      setError(err.message || 'Ошибка');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <h2>Вход</h2>\n        {error && <p className=\"error\">{error}</p>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Введите логин\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Введите пароль\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n\n        <button type=\"submit\" disabled={loading} className=\"login-button\">\n          {loading ? 'Загрузка...' : 'Войти'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n*/","map":{"version":3,"names":[],"sources":["/home/f1alka/front_fut/front2.0/src/pages/LoginPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './css/RegisterPage.css';\n\n// const LoginPage = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"handleSubmit вызван\");\n\n//     setError(null);\n//     setLoading(true);\n\n//     console.log('Отправка запроса на сервер...');\n//     console.log('Данные для отправки:', { username, password });\n\n//     try {\n//       const formData = new URLSearchParams();\n//       formData.append('username', username);\n//       formData.append('password', password);\n\n//       const response = await fetch('http://172.20.10.2:8000/auth/token', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n//         body: formData,\n//       });\n\n//       console.log(\"Ответ от сервера:\", response);\n\n//       if (!response.ok) {\n//         const errorMsg = await response.text();\n//         console.log(\"Ошибка в ответе:\", errorMsg);\n//         throw new Error(errorMsg || 'Ошибка авторизации');\n//       }\n\n//       const data = await response.json();\n//       console.log(\"Полученные данные:\", data);\n\n//       const token = data.access_token || data.token;\n//       if (!token) {\n//         throw new Error('Сервер не вернул токен');\n//       }\n\n//       localStorage.setItem('token', token);\n//       navigate('/profile');  // Перенаправляем в профиль\n\n//     } catch (err) {\n//       console.error(\"Ошибка при запросе:\", err);\n//       setError(err.message || 'Ошибка соединения с сервером');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleSubmit} className=\"login-form\">\n//         <h2>Вход</h2>\n//         {error && <p className=\"error\">{error}</p>}\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Введите логин\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Введите пароль\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n\n//         <button type=\"submit\" disabled={loading} className=\"login-button\">\n//           {loading ? 'Загрузка...' : 'Войти'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\n/*\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/RegisterPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"handleSubmit вызван\");\n\n    setError(null);\n    setLoading(true);\n\n  \n    try {\n      console.log('Данные для отправки:', { username, password });\n\n      navigate('/profile');  \n\n    } catch (err) {\n      console.error(\"Ошибка при обработке данных:\", err);\n      setError(err.message || 'Ошибка');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <h2>Вход</h2>\n        {error && <p className=\"error\">{error}</p>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Введите логин\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Введите пароль\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n\n        <button type=\"submit\" disabled={loading} className=\"login-button\">\n          {loading ? 'Загрузка...' : 'Войти'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n*/"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}