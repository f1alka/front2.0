{"ast":null,"code":"var _jsxFileName = \"/home/f1alka/front_fut/front2.0/src/pages/Mixes.jsx\";\n/*import React, { useState, useEffect } from 'react';\nimport './css/admin.css';\nimport { \n  User, ArrowLeft, Calendar, Book, Clock, Search, \n  Plus, X, Edit, ChevronLeft, ChevronRight \n} from 'lucide-react';\nimport mainImage1 from './nikolskaya.jpg';\nimport mainImage2 from './prospekt_mira.jpg';\nimport mainImage3 from './strast.jpg';\n\n// Main component\nconst AdminPanel = () => {\n  // States\n  const [step, setStep] = useState('category');\n  const [category, setCategory] = useState(null);\n  const [location, setLocation] = useState(null);\n  \n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  \n  const [showModal, setShowModal] = useState(false);\n  const [modalMode, setModalMode] = useState('add');\n  const [currentItem, setCurrentItem] = useState(null);\n\n  // Mock data for demonstration\n  const mockData = {\n    employers: [\n      { id: 1, email: 'anna@example.com', fio: 'Петрова Анна', work_type: 'Бармен', roles: ['staff'], contacts: ['123-456-7890'], location_name: 'Проспект мира' },\n      { id: 2, email: 'dmitry@example.com', fio: 'Морозов Дмитрий', work_type: 'Официант', roles: ['staff'], contacts: ['123-456-7891'], location_name: 'Проспект мира' },\n      { id: 3, email: 'maria@example.com', fio: 'Лебедева Мария', work_type: 'Повар', roles: ['staff'], contacts: ['123-456-7892'], location_name: 'Проспект мира' },\n    ],\n    events: [\n      { id: 1, name: 'Дегустация вин', date_start: '2023-10-20T18:00:00', description: 'Дегустация итальянских вин', location_name: 'Никольская' },\n      { id: 2, name: 'Джазовый вечер', date_start: '2023-11-15T19:00:00', description: 'Живая музыка и коктейли', location_name: 'Страстная' },\n    ],\n    residents: [\n      { id: 1, fio: 'Иванов Иван', discount_value: 15, location_name: 'Никольская' },\n      { id: 2, fio: 'Смирнова Елена', discount_value: 10, location_name: 'Проспект мира' },\n    ],\n    products: [\n      { id: 1, name: 'Маргарита', description: 'Классическая пицца', type_product: 'Пицца', components: { 'тесто': '200г', 'томаты': '100г', 'сыр': '150г' }, location_name: 'Страстная' },\n      { id: 2, name: 'Цезарь', description: 'Салат с курицей', type_product: 'Салат', components: { 'курица': '150г', 'салат': '100г', 'соус': '50г' }, location_name: 'Никольская' },\n    ],\n    workdays: [\n      { id: 1, work_time: '2023-10-20T12:00:00', employer_fio: 'Петрова Анна', location_name: 'Проспект мира' },\n      { id: 2, work_time: '2023-10-20T14:00:00', employer_fio: 'Морозов Дмитрий', location_name: 'Проспект мира' },\n      { id: 3, work_time: '2023-10-20T07:00:00', employer_fio: 'Лебедева Мария', location_name: 'Проспект мира' },\n    ]\n  };\n\n  // Fetch data based on category and location\n  useEffect(() => {\n    if (category && location) {\n      fetchData();\n    }\n  }, [category, location]);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // In a real application, this would be an actual API call\n      // For now, we'll use mock data\n      setTimeout(() => {\n        let endpoint = '';\n        \n        switch(category) {\n          case 'employers':\n            endpoint = `http://176.114.90.207:8000/employers/get_list_employers/${location}`;\n            setData(mockData.employers.filter(item => item.location_name === location));\n            break;\n          case 'events':\n            endpoint = `http://176.114.90.207:8000/events/get_list_events/${location}`;\n            setData(mockData.events.filter(item => item.location_name === location));\n            break;\n          case 'residents':\n            endpoint = `http://176.114.90.207:8000/residents/${location}/get_list_residents`;\n            setData(mockData.residents.filter(item => item.location_name === location));\n            break;\n          case 'products':\n            endpoint = `http://176.114.90.207:8000/product/${location}/get_list_products`;\n            setData(mockData.products.filter(item => item.location_name === location));\n            break;\n          case 'workdays':\n            endpoint = `http://176.114.90.207:8000/workdays/${location}/get_list_workdays`;\n            setData(mockData.workdays.filter(item => item.location_name === location));\n            break;\n        }\n        \n        console.log(`Fetching data from: ${endpoint}`);\n        setLoading(false);\n      }, 500);\n    } catch (err) {\n      setError('Ошибка при загрузке данных');\n      setLoading(false);\n    }\n  };\n\n  // Filter data based on search term\n  const filteredData = data.filter(item => {\n    const searchLower = searchTerm.toLowerCase();\n    \n    // Different search logic based on category\n    if (category === 'employers' || category === 'residents') {\n      return item.fio.toLowerCase().includes(searchLower);\n    } else if (category === 'events' || category === 'products') {\n      return item.name.toLowerCase().includes(searchLower);\n    } else if (category === 'workdays') {\n      return item.employer_fio.toLowerCase().includes(searchLower);\n    }\n    \n    return true;\n  }).filter(item => {\n    // Filter by date if date filter is set\n    if (dateFilter && (category === 'events' || category === 'workdays')) {\n      const itemDate = new Date(category === 'events' ? item.date_start : item.work_time);\n      const filterDate = new Date(dateFilter);\n      \n      return itemDate.toDateString() === filterDate.toDateString();\n    }\n    \n    return true;\n  });\n\n  // Pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle add/edit/delete\n  const handleAdd = () => {\n    setModalMode('add');\n    \n    // Initialize empty item based on category\n    let emptyItem = {};\n    \n    switch(category) {\n      case 'employers':\n        emptyItem = { email: '', fio: '', work_type: '', roles: ['staff'], contacts: [], location_name: location };\n        break;\n      case 'events':\n        emptyItem = { name: '', date_start: '', description: '', location_name: location };\n        break;\n      case 'residents':\n        emptyItem = { fio: '', discount_value: 0, location_name: location };\n        break;\n      case 'products':\n        emptyItem = { name: '', description: '', type_product: '', components: {}, location_name: location };\n        break;\n      case 'workdays':\n        emptyItem = { work_time: '', employer_fio: '', location_name: location };\n        break;\n    }\n    \n    setCurrentItem(emptyItem);\n    setShowModal(true);\n  };\n\n  const handleEdit = (item) => {\n    setModalMode('edit');\n    setCurrentItem(item);\n    setShowModal(true);\n  };\n\n  const handleDelete = (id) => {\n    // In a real application, this would be an API call\n    setData(data.filter(item => item.id !== id));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (modalMode === 'add') {\n      // In a real application, this would be an API call\n      const newItem = { ...currentItem, id: data.length + 1 };\n      setData([...data, newItem]);\n    } else {\n      // In a real application, this would be an API call\n      setData(data.map(item => item.id === currentItem.id ? currentItem : item));\n    }\n    \n    setShowModal(false);\n  };\n\n  // Render functions\n  const renderCategorySelection = () => (\n    <div className=\"admin-selection\">\n      <div className=\"admin-option\" onClick={() => { setCategory('employers'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Работники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('residents'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Постоянники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('events'); setStep('location'); }}>\n        <Calendar className=\"admin-option-icon\" />\n        События\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('products'); setStep('location'); }}>\n        <Book className=\"admin-option-icon\" />\n        Методички\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('workdays'); setStep('location'); }}>\n        <Clock className=\"admin-option-icon\" />\n        Расписание\n      </div>\n    </div>\n  );\n\n  const renderLocationSelection = () => (\n    <>\n      <button className=\"admin-back-button\" onClick={() => { setStep('category'); setCategory(null); }}>\n        <ArrowLeft size={16} /> Назад\n      </button>\n      \n      <div className=\"admin-location-selection\">\n        <div className=\"admin-location-card\" onClick={() => { setLocation('Проспект мира'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80\" \n            alt=\"Проспект мира\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Проспект мира</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Страстная'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1374&q=80\" \n            alt=\"Страстная\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Страстная</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Никольская'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1525268323446-0505b6fe7778?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1472&q=80\" \n            alt=\"Никольская\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Никольская</div>\n        </div>\n      </div>\n    </>\n  );\n\n  const renderDataView = () => {\n    if (loading) return <div>Загрузка...</div>;\n    if (error) return <div>{error}</div>;\n    \n    return (\n      <>\n        <div className=\"admin-back-button\" onClick={() => { setStep('location'); setLocation(null); }}>\n          <ArrowLeft size={16} /> Назад\n        </div>\n        \n        <div className=\"admin-location-title\">{location}</div>\n        \n        <div className=\"admin-data-container\">\n          <div className=\"admin-search-bar\">\n            <input \n              type=\"text\" \n              placeholder={category === 'workdays' ? \"Поиск по имени сотрудника...\" : \"Поиск...\"}\n              className=\"admin-search-input\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            \n            {(category === 'events' || category === 'workdays') && (\n              <input \n                type=\"date\" \n                className=\"admin-date-input\"\n                value={dateFilter}\n                onChange={(e) => setDateFilter(e.target.value)}\n              />\n            )}\n          </div>\n          \n          <button className=\"admin-add-button\" onClick={handleAdd}>\n            <Plus size={16} /> Добавить\n          </button>\n          \n          {renderDataContent()}\n          \n          {totalPages > 1 && (\n            <div className=\"admin-pagination\">\n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === 1}\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n              >\n                <ChevronLeft size={16} />\n              </button>\n              \n              {Array.from({ length: totalPages }, (_, i) => (\n                <button \n                  key={i}\n                  className={`admin-pagination-button ${currentPage === i + 1 ? 'active' : ''}`}\n                  onClick={() => setCurrentPage(i + 1)}\n                >\n                  {i + 1}\n                </button>\n              ))}\n              \n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === totalPages}\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n              >\n                <ChevronRight size={16} />\n              </button>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderDataContent = () => {\n    switch(category) {\n      case 'employers':\n        return renderEmployersTable();\n      case 'events':\n        return renderEventsTable();\n      case 'residents':\n        return renderResidentsCards();\n      case 'products':\n        return renderProductsTable();\n      case 'workdays':\n        return renderWorkdaysTable();\n      default:\n        return null;\n    }\n  };\n\n  const renderEmployersTable = () => (\n    <div>\n      {currentItems.map((employer) => (\n        <div key={employer.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{employer.fio}</div>\n          <div className=\"admin-table-cell\">{employer.work_type}</div>\n          <div className=\"admin-table-cell\">{employer.email}</div>\n          <div className=\"admin-table-cell\">{employer.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(employer)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(employer.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderEventsTable = () => (\n    <div>\n      {currentItems.map((event) => (\n        <div key={event.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{event.name}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-{new Date(new Date(event.date_start).getTime() + 4 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>\n          <div className=\"admin-table-cell\">{event.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(event)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(event.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderResidentsCards = () => (\n    <div className=\"admin-cards-container\">\n      {currentItems.map((resident) => (\n        <div key={resident.id} className=\"admin-card\">\n          <div className=\"admin-card-header\">{resident.fio}</div>\n          <div className=\"admin-card-body\">\n            <p>Скидка: {resident.discount_value}%</p>\n            <p>Локация: {resident.location_name}</p>\n          </div>\n          <div className=\"admin-card-footer\">\n            <div className=\"admin-card-action admin-card-edit\" onClick={() => handleEdit(resident)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-card-action admin-card-delete\" onClick={() => handleDelete(resident.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderProductsTable = () => (\n    <div>\n      {currentItems.map((product) => (\n        <div key={product.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{product.name}</div>\n          <div className=\"admin-table-cell\">{product.type_product}</div>\n          <div className=\"admin-table-cell\">{product.description.substring(0, 50)}...</div>\n          <div className=\"admin-table-cell\">{product.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(product)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(product.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderWorkdaysTable = () => (\n    <div>\n      {currentItems.map((workday) => (\n        <div key={workday.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{workday.employer_fio}</div>\n          <div className=\"admin-table-cell\">{workday.location_name}</div>\n          <div className=\"admin-table-cell\">{new Date(workday.work_time).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">\n            {new Date(workday.work_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-\n            {new Date(new Date(workday.work_time).getTime() + 8 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n          </div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(workday)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(workday.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderModal = () => {\n    if (!showModal) return null;\n    \n    return (\n      <div className=\"admin-modal\">\n        <div className=\"admin-modal-content\">\n          <div className=\"admin-modal-header\">\n            <h2>{modalMode === 'add' ? 'Добавить' : 'Редактировать'}</h2>\n            <button className=\"admin-modal-close\" onClick={() => setShowModal(false)}>×</button>\n          </div>\n          \n          <form className=\"admin-form\" onSubmit={handleSubmit}>\n            {renderFormFields()}\n            \n            <button type=\"submit\" className=\"admin-form-submit\">\n              {modalMode === 'add' ? 'Добавить' : 'Сохранить'}\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFormFields = () => {\n    switch(category) {\n      case 'employers':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Email</label>\n              <input \n                type=\"email\" \n                className=\"admin-form-input\"\n                value={currentItem?.email || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, email: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Должность</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_type || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_type: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Контакты</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.contacts?.join(', ') || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, contacts: e.target.value.split(', ') })}\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n              />\n            </div>\n          </>\n        );\n        \n      case 'events':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.date_start ? new Date(currentItem.date_start).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, date_start: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'residents':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Скидка (%)</label>\n              <input \n                type=\"number\" \n                className=\"admin-form-input\"\n                value={currentItem?.discount_value || 0}\n                onChange={(e) => setCurrentItem({ ...currentItem, discount_value: parseInt(e.target.value) })}\n                required\n                min=\"0\"\n                max=\"100\"\n              />\n            </div>\n          </>\n        );\n        \n      case 'products':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Тип</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.type_product || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, type_product: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Компоненты (JSON)</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={JSON.stringify(currentItem?.components || {}, null, 2)}\n                onChange={(e) => {\n                  try {\n                    const components = JSON.parse(e.target.value);\n                    setCurrentItem({ ...currentItem, components });\n                  } catch (err) {\n                    // Invalid JSON, do nothing\n                  }\n                }}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'workdays':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО сотрудника</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.employer_fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, employer_fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_time ? new Date(currentItem.work_time).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_time: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <div className=\"admin-header\">\n        Административная панель\n      </div>\n      \n      {step === 'category' && renderCategorySelection()}\n      {step === 'location' && renderLocationSelection()}\n      {step === 'data' && renderDataView()}\n      \n      {renderModal()}\n    </div>\n  );\n};\n\nexport default AdminPanel;\n\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport './css/admin.css';\nimport axios from 'axios';\nimport { User, ArrowLeft, Calendar, Book, Clock, Plus, X, Edit, ChevronLeft, ChevronRight, Upload } from 'lucide-react';\n\n// Constants for locations\nconst LOCATIONS = {\n  'Проспект мира': 1,\n  'Никольская': 2,\n  'Страстной бульвар': 3\n};\nconst LOCATIONS_BY_ID = {\n  1: 'Проспект мира',\n  2: 'Никольская',\n  3: 'Страстной бульвар'\n};\nconst BASE_URL = 'http://176.114.90.207:8000';\n\n// Main component\nconst AdminPanel = () => {\n  // States\n  const [step, setStep] = useState('category');\n  const [category, setCategory] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [locationId, setLocationId] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [showModal, setShowModal] = useState(false);\n  const [modalMode, setModalMode] = useState('add');\n  const [currentItem, setCurrentItem] = useState(null);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n\n  // Handle photo upload\n  const handlePhotoChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedPhoto(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPhotoPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const uploadPhoto = async (category, id) => {\n    if (!selectedPhoto) return;\n    const formData = new FormData();\n    formData.append('photo', selectedPhoto);\n    try {\n      await axios.post(`${BASE_URL}/files/${category}/${id}/upload-photo`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    } catch (error) {\n      console.error('Error uploading photo:', error);\n    }\n  };\n\n  // Fetch data based on category and location\n  useEffect(() => {\n    if (category && locationId) {\n      fetchData();\n    }\n  }, [category, locationId, currentPage]);\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let response;\n      const params = {\n        page: currentPage,\n        limit: itemsPerPage\n      };\n      switch (category) {\n        case 'employers':\n          response = await axios.get(`${BASE_URL}/employers/get_list_employers/${locationId}`, {\n            params\n          });\n          break;\n        case 'events':\n          response = await axios.get(`${BASE_URL}/events/get_events`, {\n            params: {\n              ...params,\n              location_id: locationId\n            }\n          });\n          break;\n        case 'residents':\n          response = await axios.get(`${BASE_URL}/residents/get_list_residents`, {\n            params: {\n              ...params,\n              location_id: locationId\n            }\n          });\n          break;\n        case 'products':\n          response = await axios.get(`${BASE_URL}/cards/get_list_products`, {\n            params: {\n              ...params,\n              location_id: locationId\n            }\n          });\n          break;\n        case 'workdays':\n          response = await axios.get(`${BASE_URL}/workdays/get_list_workdays`, {\n            params: {\n              ...params,\n              location_id: locationId\n            }\n          });\n          break;\n      }\n      setData(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Ошибка при загрузке данных');\n      setLoading(false);\n      console.error('Error fetching data:', err);\n    }\n  };\n\n  // Filter data based on search term\n  const filteredData = data.filter(item => {\n    const searchLower = searchTerm.toLowerCase();\n    if (category === 'employers' || category === 'residents') {\n      return item.fio.toLowerCase().includes(searchLower);\n    } else if (category === 'events' || category === 'products') {\n      return item.name.toLowerCase().includes(searchLower);\n    } else if (category === 'workdays') {\n      return item.employer_fio.toLowerCase().includes(searchLower);\n    }\n    return true;\n  }).filter(item => {\n    if (dateFilter && (category === 'events' || category === 'workdays')) {\n      const itemDate = new Date(category === 'events' ? item.date_start : item.work_time);\n      const filterDate = new Date(dateFilter);\n      return itemDate.toDateString() === filterDate.toDateString();\n    }\n    return true;\n  });\n\n  // Pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle add/edit/delete\n  const handleAdd = () => {\n    setModalMode('add');\n    setSelectedPhoto(null);\n    setPhotoPreview(null);\n    let emptyItem = {\n      location_id: locationId\n    };\n    switch (category) {\n      case 'employers':\n        emptyItem = {\n          ...emptyItem,\n          email: '',\n          fio: '',\n          work_type: '',\n          roles: ['employee'],\n          contacts: [],\n          description: ''\n        };\n        break;\n      case 'events':\n        emptyItem = {\n          ...emptyItem,\n          name: '',\n          date_start: '',\n          description: ''\n        };\n        break;\n      case 'residents':\n        emptyItem = {\n          ...emptyItem,\n          fio: '',\n          discount_value: 0,\n          description: ''\n        };\n        break;\n      case 'products':\n        emptyItem = {\n          ...emptyItem,\n          name: '',\n          description: '',\n          category: ''\n        };\n        break;\n      case 'workdays':\n        emptyItem = {\n          ...emptyItem,\n          work_time: '',\n          employer_id: 0\n        };\n        break;\n    }\n    setCurrentItem(emptyItem);\n    setShowModal(true);\n  };\n  const handleEdit = item => {\n    setModalMode('edit');\n    setSelectedPhoto(null);\n    setPhotoPreview(null);\n    setCurrentItem({\n      ...item,\n      location_id: locationId\n    });\n    setShowModal(true);\n  };\n  const handleDelete = async id => {\n    try {\n      const params = {\n        id\n      };\n      if (category === 'employers') {\n        params.employer_id = id;\n        delete params.id;\n      }\n      await axios.delete(`${BASE_URL}/${category === 'products' ? 'cards/admin/delete_product' : category === 'employers' ? 'employers/delete_employer' : category === 'events' ? 'events/delete_event' : category === 'residents' ? 'residents/delete_resident' : 'workdays/delete_workday'}`, {\n        params\n      });\n      await fetchData();\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let endpoint = '';\n      let payload = {\n        ...currentItem\n      };\n      switch (category) {\n        case 'employers':\n          endpoint = '/auth/admin/register';\n          if (modalMode === 'edit') {\n            endpoint = '/employers/edit_employer';\n          }\n          break;\n        case 'events':\n          endpoint = '/events/create_event';\n          break;\n        case 'residents':\n          endpoint = '/residents/add_resident';\n          break;\n        case 'products':\n          endpoint = '/cards/admin/add_card';\n          break;\n        case 'workdays':\n          endpoint = '/workdays/add_workday';\n          break;\n      }\n      let response;\n      if (modalMode === 'add') {\n        response = await axios.post(`${BASE_URL}${endpoint}`, payload);\n      } else {\n        response = await axios.put(`${BASE_URL}${endpoint}`, payload);\n      }\n      if (selectedPhoto && response.data.id) {\n        await uploadPhoto(category, response.data.id);\n      }\n      await fetchData();\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error saving item:', error);\n    }\n  };\n\n  // Render functions\n  const renderCategorySelection = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('employers');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(User, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 9\n    }\n  }), \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('residents');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(User, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 9\n    }\n  }), \"\\u041F\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u043D\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('events');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 9\n    }\n  }), \"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('products');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Book, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 9\n    }\n  }), \"\\u041C\\u0435\\u0442\\u043E\\u0434\\u0438\\u0447\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-option\",\n    onClick: () => {\n      setCategory('workdays');\n      setStep('location');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    className: \"admin-option-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 9\n    }\n  }), \"\\u0420\\u0430\\u0441\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"));\n  const renderLocationSelection = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"admin-back-button\",\n    onClick: () => {\n      setStep('category');\n      setCategory(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeft, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 9\n    }\n  }), \" \\u041D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-card\",\n    onClick: () => {\n      setLocation('Проспект мира');\n      setLocationId(LOCATIONS['Проспект мира']);\n      setStep('data');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80\",\n    alt: \"\\u041F\\u0440\\u043E\\u0441\\u043F\\u0435\\u043A\\u0442 \\u043C\\u0438\\u0440\\u0430\",\n    className: \"admin-location-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u0440\\u043E\\u0441\\u043F\\u0435\\u043A\\u0442 \\u043C\\u0438\\u0440\\u0430\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-card\",\n    onClick: () => {\n      setLocation('Никольская');\n      setLocationId(LOCATIONS['Никольская']);\n      setStep('data');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1374&q=80\",\n    alt: \"\\u041D\\u0438\\u043A\\u043E\\u043B\\u044C\\u0441\\u043A\\u0430\\u044F\",\n    className: \"admin-location-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 11\n    }\n  }, \"\\u041D\\u0438\\u043A\\u043E\\u043B\\u044C\\u0441\\u043A\\u0430\\u044F\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-card\",\n    onClick: () => {\n      setLocation('Страстной бульвар');\n      setLocationId(LOCATIONS['Страстной бульвар']);\n      setStep('data');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.unsplash.com/photo-1525268323446-0505b6fe7778?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1472&q=80\",\n    alt: \"\\u0421\\u0442\\u0440\\u0430\\u0441\\u0442\\u043D\\u043E\\u0439 \\u0431\\u0443\\u043B\\u044C\\u0432\\u0430\\u0440\",\n    className: \"admin-location-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-location-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0442\\u0440\\u0430\\u0441\\u0442\\u043D\\u043E\\u0439 \\u0431\\u0443\\u043B\\u044C\\u0432\\u0430\\u0440\"))));\n  const renderDataView = () => {\n    if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 25\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n    if (error) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 23\n      }\n    }, error);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-back-button\",\n      onClick: () => {\n        setStep('location');\n        setLocation(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ArrowLeft, {\n      size: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 11\n      }\n    }), \" \\u041D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-location-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 9\n      }\n    }, location), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-data-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: category === 'workdays' ? \"Поиск по имени сотрудника...\" : \"Поиск...\",\n      className: \"admin-search-input\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 13\n      }\n    }), (category === 'events' || category === 'workdays') && /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"admin-date-input\",\n      value: dateFilter,\n      onChange: e => setDateFilter(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"admin-add-button\",\n      onClick: handleAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Plus, {\n      size: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 13\n      }\n    }), \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), renderDataContent(), totalPages > 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"admin-pagination-button\",\n      disabled: currentPage === 1,\n      onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ChevronLeft, {\n      size: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 17\n      }\n    })), Array.from({\n      length: totalPages\n    }, (_, i) => /*#__PURE__*/React.createElement(\"button\", {\n      key: i,\n      className: `admin-pagination-button ${currentPage === i + 1 ? 'active' : ''}`,\n      onClick: () => setCurrentPage(i + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 17\n      }\n    }, i + 1)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"admin-pagination-button\",\n      disabled: currentPage === totalPages,\n      onClick: () => setCurrentPage(prev => Math.min(prev + 1, totalPages)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ChevronRight, {\n      size: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 17\n      }\n    })))));\n  };\n  const renderDataContent = () => {\n    switch (category) {\n      case 'employers':\n        return renderEmployersTable();\n      case 'events':\n        return renderEventsTable();\n      case 'residents':\n        return renderResidentsCards();\n      case 'products':\n        return renderProductsTable();\n      case 'workdays':\n        return renderWorkdaysTable();\n      default:\n        return null;\n    }\n  };\n  const renderEmployersTable = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 5\n    }\n  }, currentItems.map(employer => /*#__PURE__*/React.createElement(\"div\", {\n    key: employer.id,\n    className: \"admin-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 11\n    }\n  }, employer.photo ? /*#__PURE__*/React.createElement(\"img\", {\n    src: `${BASE_URL}/files/employers/${employer.id}/get-photo`,\n    alt: employer.fio,\n    className: \"admin-table-cell-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(User, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 15\n    }\n  }), employer.fio), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 11\n    }\n  }, employer.work_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1174,\n      columnNumber: 11\n    }\n  }, employer.email), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175,\n      columnNumber: 11\n    }\n  }, LOCATIONS_BY_ID[employer.location_id]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-edit-button\",\n    onClick: () => handleEdit(employer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-delete-button\",\n    onClick: () => handleDelete(employer.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1181,\n      columnNumber: 15\n    }\n  }))))));\n  const renderEventsTable = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1190,\n      columnNumber: 5\n    }\n  }, currentItems.map(event => /*#__PURE__*/React.createElement(\"div\", {\n    key: event.id,\n    className: \"admin-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 11\n    }\n  }, event.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 11\n    }\n  }, new Date(event.date_start).toLocaleDateString()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 11\n    }\n  }, new Date(event.date_start).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 11\n    }\n  }, LOCATIONS_BY_ID[event.location_id]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-edit-button\",\n    onClick: () => handleEdit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-delete-button\",\n    onClick: () => handleDelete(event.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 15\n    }\n  }))))));\n  const renderResidentsCards = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-cards-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 5\n    }\n  }, currentItems.map(resident => /*#__PURE__*/React.createElement(\"div\", {\n    key: resident.id,\n    className: \"admin-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 9\n    }\n  }, resident.photo ? /*#__PURE__*/React.createElement(\"img\", {\n    src: `${BASE_URL}/files/residents/${resident.id}/get-photo`,\n    alt: resident.fio,\n    className: \"admin-card-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-photo\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#2a2a2a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(User, {\n    size: 64,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 11\n    }\n  }, resident.fio), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 13\n    }\n  }, \"\\u0421\\u043A\\u0438\\u0434\\u043A\\u0430: \", resident.discount_value, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 13\n    }\n  }, \"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F: \", LOCATIONS_BY_ID[resident.location_id]), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"admin-card-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1227,\n      columnNumber: 13\n    }\n  }, resident.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-action admin-card-edit\",\n    onClick: () => handleEdit(resident),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1231,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-card-action admin-card-delete\",\n    onClick: () => handleDelete(resident.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234,\n      columnNumber: 15\n    }\n  }))))));\n  const renderProductsTable = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1243,\n      columnNumber: 5\n    }\n  }, currentItems.map(product => /*#__PURE__*/React.createElement(\"div\", {\n    key: product.id,\n    className: \"admin-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 11\n    }\n  }, product.photo ? /*#__PURE__*/React.createElement(\"img\", {\n    src: `${BASE_URL}/files/products/${product.id}/get-photo`,\n    alt: product.name,\n    className: \"admin-table-cell-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Book, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 15\n    }\n  }), product.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 11\n    }\n  }, product.category), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 11\n    }\n  }, product.description.substring(0, 50), \"...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1256,\n      columnNumber: 11\n    }\n  }, LOCATIONS_BY_ID[product.location_id]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1257,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-edit-button\",\n    onClick: () => handleEdit(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1258,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-delete-button\",\n    onClick: () => handleDelete(product.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1261,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262,\n      columnNumber: 15\n    }\n  }))))));\n  const renderWorkdaysTable = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1271,\n      columnNumber: 5\n    }\n  }, currentItems.map(workday => /*#__PURE__*/React.createElement(\"div\", {\n    key: workday.id,\n    className: \"admin-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1274,\n      columnNumber: 11\n    }\n  }, workday.employer_fio), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 11\n    }\n  }, LOCATIONS_BY_ID[workday.location_id]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1276,\n      columnNumber: 11\n    }\n  }, new Date(workday.work_time).toLocaleDateString()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1277,\n      columnNumber: 11\n    }\n  }, new Date(workday.work_time).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-edit-button\",\n    onClick: () => handleEdit(workday),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1282,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-action-button admin-delete-button\",\n    onClick: () => handleDelete(workday.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1284,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(X, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 15\n    }\n  }))))));\n  const renderPhotoUpload = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-photo-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"admin-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 7\n    }\n  }, \"\\u0424\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044F\"), photoPreview && /*#__PURE__*/React.createElement(\"img\", {\n    src: photoPreview,\n    alt: \"Preview\",\n    className: \"admin-photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"admin-photo-upload-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1299,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handlePhotoChange,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1300,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Upload, {\n    size: 16,\n    style: {\n      marginRight: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1306,\n      columnNumber: 9\n    }\n  }), photoPreview ? 'Изменить фото' : 'Загрузить фото'));\n  const renderModal = () => {\n    if (!showModal) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 13\n      }\n    }, modalMode === 'add' ? 'Добавить' : 'Редактировать'), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"admin-modal-close\",\n      onClick: () => setShowModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 13\n      }\n    }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"admin-form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 11\n      }\n    }, renderFormFields(), (category === 'employers' || category === 'residents' || category === 'products') && renderPhotoUpload(), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"admin-form-submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 13\n      }\n    }, modalMode === 'add' ? 'Добавить' : 'Сохранить'))));\n  };\n  const renderFormFields = () => {\n    var _currentItem$contacts;\n    switch (category) {\n      case 'employers':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1342,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1343,\n            columnNumber: 15\n          }\n        }, \"\\u0424\\u0418\\u041E\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.fio) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            fio: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1353,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1354,\n            columnNumber: 15\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"email\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.email) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            email: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 15\n          }\n        })), modalMode === 'add' && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1365,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 17\n          }\n        }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"password\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.hashed_password) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            hashed_password: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1367,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1377,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1378,\n            columnNumber: 15\n          }\n        }, \"\\u0414\\u043E\\u043B\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.work_type) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            work_type: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1379,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1388,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1389,\n            columnNumber: 15\n          }\n        }, \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : (_currentItem$contacts = currentItem.contacts) === null || _currentItem$contacts === void 0 ? void 0 : _currentItem$contacts.join(', ')) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            contacts: e.target.value.split(', ')\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1390,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1398,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1399,\n            columnNumber: 15\n          }\n        }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"admin-form-textarea\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.description) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            description: e.target.value\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 15\n          }\n        })));\n      case 'events':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1412,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1413,\n            columnNumber: 15\n          }\n        }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.name) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            name: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1414,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1423,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1424,\n            columnNumber: 15\n          }\n        }, \"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"datetime-local\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.date_start) ? new Date(currentItem.date_start).toISOString().slice(0, 16) : '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            date_start: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1425,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1435,\n            columnNumber: 15\n          }\n        }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"admin-form-textarea\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.description) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            description: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1436,\n            columnNumber: 15\n          }\n        })));\n      case 'residents':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1449,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1450,\n            columnNumber: 15\n          }\n        }, \"\\u0424\\u0418\\u041E\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.fio) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            fio: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 15\n          }\n        }, \"\\u0421\\u043A\\u0438\\u0434\\u043A\\u0430 (%)\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.discount_value) || 0,\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            discount_value: parseInt(e.target.value)\n          }),\n          required: true,\n          min: \"0\",\n          max: \"100\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1462,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1473,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1474,\n            columnNumber: 15\n          }\n        }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"admin-form-textarea\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.description) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            description: e.target.value\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1475,\n            columnNumber: 15\n          }\n        })));\n      case 'products':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1488,\n            columnNumber: 15\n          }\n        }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.name) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            name: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1489,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1498,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1499,\n            columnNumber: 15\n          }\n        }, \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.category) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            category: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1500,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1509,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1510,\n            columnNumber: 15\n          }\n        }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"admin-form-textarea\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.description) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            description: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1511,\n            columnNumber: 15\n          }\n        })));\n      case 'workdays':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1524,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1525,\n            columnNumber: 15\n          }\n        }, \"ID \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.employer_id) || '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            employer_id: parseInt(e.target.value)\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1526,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"admin-form-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 15\n          }\n        }, \"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"datetime-local\",\n          className: \"admin-form-input\",\n          value: (currentItem === null || currentItem === void 0 ? void 0 : currentItem.work_time) ? new Date(currentItem.work_time).toISOString().slice(0, 16) : '',\n          onChange: e => setCurrentItem({\n            ...currentItem,\n            work_time: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1537,\n            columnNumber: 15\n          }\n        })));\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1554,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1555,\n      columnNumber: 7\n    }\n  }, \"\\u0410\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u0438\\u0432\\u043D\\u0430\\u044F \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"), step === 'category' && renderCategorySelection(), step === 'location' && renderLocationSelection(), step === 'data' && renderDataView(), renderModal());\n};\nexport default AdminPanel;","map":{"version":3,"names":["React","useState","useEffect","axios","User","ArrowLeft","Calendar","Book","Clock","Plus","X","Edit","ChevronLeft","ChevronRight","Upload","LOCATIONS","LOCATIONS_BY_ID","BASE_URL","AdminPanel","step","setStep","category","setCategory","location","setLocation","locationId","setLocationId","data","setData","loading","setLoading","error","setError","searchTerm","setSearchTerm","dateFilter","setDateFilter","currentPage","setCurrentPage","itemsPerPage","showModal","setShowModal","modalMode","setModalMode","currentItem","setCurrentItem","selectedPhoto","setSelectedPhoto","photoPreview","setPhotoPreview","handlePhotoChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","uploadPhoto","id","formData","FormData","append","post","headers","console","fetchData","response","params","page","limit","get","location_id","err","filteredData","filter","item","searchLower","toLowerCase","fio","includes","name","employer_fio","itemDate","Date","date_start","work_time","filterDate","toDateString","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","handleAdd","emptyItem","email","work_type","roles","contacts","description","discount_value","employer_id","handleEdit","handleDelete","delete","handleSubmit","preventDefault","endpoint","payload","put","renderCategorySelection","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderLocationSelection","Fragment","size","src","alt","renderDataView","type","placeholder","value","onChange","renderDataContent","disabled","prev","max","Array","from","_","i","key","min","renderEmployersTable","renderEventsTable","renderResidentsCards","renderProductsTable","renderWorkdaysTable","map","employer","photo","event","toLocaleDateString","toLocaleTimeString","hour","minute","resident","style","display","alignItems","justifyContent","backgroundColor","product","substring","workday","renderPhotoUpload","accept","marginRight","renderModal","onSubmit","renderFormFields","_currentItem$contacts","required","hashed_password","join","split","toISOString","parseInt"],"sources":["/home/f1alka/front_fut/front2.0/src/pages/Mixes.jsx"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport './css/admin.css';\nimport { \n  User, ArrowLeft, Calendar, Book, Clock, Search, \n  Plus, X, Edit, ChevronLeft, ChevronRight \n} from 'lucide-react';\nimport mainImage1 from './nikolskaya.jpg';\nimport mainImage2 from './prospekt_mira.jpg';\nimport mainImage3 from './strast.jpg';\n\n// Main component\nconst AdminPanel = () => {\n  // States\n  const [step, setStep] = useState('category');\n  const [category, setCategory] = useState(null);\n  const [location, setLocation] = useState(null);\n  \n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  \n  const [showModal, setShowModal] = useState(false);\n  const [modalMode, setModalMode] = useState('add');\n  const [currentItem, setCurrentItem] = useState(null);\n\n  // Mock data for demonstration\n  const mockData = {\n    employers: [\n      { id: 1, email: 'anna@example.com', fio: 'Петрова Анна', work_type: 'Бармен', roles: ['staff'], contacts: ['123-456-7890'], location_name: 'Проспект мира' },\n      { id: 2, email: 'dmitry@example.com', fio: 'Морозов Дмитрий', work_type: 'Официант', roles: ['staff'], contacts: ['123-456-7891'], location_name: 'Проспект мира' },\n      { id: 3, email: 'maria@example.com', fio: 'Лебедева Мария', work_type: 'Повар', roles: ['staff'], contacts: ['123-456-7892'], location_name: 'Проспект мира' },\n    ],\n    events: [\n      { id: 1, name: 'Дегустация вин', date_start: '2023-10-20T18:00:00', description: 'Дегустация итальянских вин', location_name: 'Никольская' },\n      { id: 2, name: 'Джазовый вечер', date_start: '2023-11-15T19:00:00', description: 'Живая музыка и коктейли', location_name: 'Страстная' },\n    ],\n    residents: [\n      { id: 1, fio: 'Иванов Иван', discount_value: 15, location_name: 'Никольская' },\n      { id: 2, fio: 'Смирнова Елена', discount_value: 10, location_name: 'Проспект мира' },\n    ],\n    products: [\n      { id: 1, name: 'Маргарита', description: 'Классическая пицца', type_product: 'Пицца', components: { 'тесто': '200г', 'томаты': '100г', 'сыр': '150г' }, location_name: 'Страстная' },\n      { id: 2, name: 'Цезарь', description: 'Салат с курицей', type_product: 'Салат', components: { 'курица': '150г', 'салат': '100г', 'соус': '50г' }, location_name: 'Никольская' },\n    ],\n    workdays: [\n      { id: 1, work_time: '2023-10-20T12:00:00', employer_fio: 'Петрова Анна', location_name: 'Проспект мира' },\n      { id: 2, work_time: '2023-10-20T14:00:00', employer_fio: 'Морозов Дмитрий', location_name: 'Проспект мира' },\n      { id: 3, work_time: '2023-10-20T07:00:00', employer_fio: 'Лебедева Мария', location_name: 'Проспект мира' },\n    ]\n  };\n\n  // Fetch data based on category and location\n  useEffect(() => {\n    if (category && location) {\n      fetchData();\n    }\n  }, [category, location]);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // In a real application, this would be an actual API call\n      // For now, we'll use mock data\n      setTimeout(() => {\n        let endpoint = '';\n        \n        switch(category) {\n          case 'employers':\n            endpoint = `http://176.114.90.207:8000/employers/get_list_employers/${location}`;\n            setData(mockData.employers.filter(item => item.location_name === location));\n            break;\n          case 'events':\n            endpoint = `http://176.114.90.207:8000/events/get_list_events/${location}`;\n            setData(mockData.events.filter(item => item.location_name === location));\n            break;\n          case 'residents':\n            endpoint = `http://176.114.90.207:8000/residents/${location}/get_list_residents`;\n            setData(mockData.residents.filter(item => item.location_name === location));\n            break;\n          case 'products':\n            endpoint = `http://176.114.90.207:8000/product/${location}/get_list_products`;\n            setData(mockData.products.filter(item => item.location_name === location));\n            break;\n          case 'workdays':\n            endpoint = `http://176.114.90.207:8000/workdays/${location}/get_list_workdays`;\n            setData(mockData.workdays.filter(item => item.location_name === location));\n            break;\n        }\n        \n        console.log(`Fetching data from: ${endpoint}`);\n        setLoading(false);\n      }, 500);\n    } catch (err) {\n      setError('Ошибка при загрузке данных');\n      setLoading(false);\n    }\n  };\n\n  // Filter data based on search term\n  const filteredData = data.filter(item => {\n    const searchLower = searchTerm.toLowerCase();\n    \n    // Different search logic based on category\n    if (category === 'employers' || category === 'residents') {\n      return item.fio.toLowerCase().includes(searchLower);\n    } else if (category === 'events' || category === 'products') {\n      return item.name.toLowerCase().includes(searchLower);\n    } else if (category === 'workdays') {\n      return item.employer_fio.toLowerCase().includes(searchLower);\n    }\n    \n    return true;\n  }).filter(item => {\n    // Filter by date if date filter is set\n    if (dateFilter && (category === 'events' || category === 'workdays')) {\n      const itemDate = new Date(category === 'events' ? item.date_start : item.work_time);\n      const filterDate = new Date(dateFilter);\n      \n      return itemDate.toDateString() === filterDate.toDateString();\n    }\n    \n    return true;\n  });\n\n  // Pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle add/edit/delete\n  const handleAdd = () => {\n    setModalMode('add');\n    \n    // Initialize empty item based on category\n    let emptyItem = {};\n    \n    switch(category) {\n      case 'employers':\n        emptyItem = { email: '', fio: '', work_type: '', roles: ['staff'], contacts: [], location_name: location };\n        break;\n      case 'events':\n        emptyItem = { name: '', date_start: '', description: '', location_name: location };\n        break;\n      case 'residents':\n        emptyItem = { fio: '', discount_value: 0, location_name: location };\n        break;\n      case 'products':\n        emptyItem = { name: '', description: '', type_product: '', components: {}, location_name: location };\n        break;\n      case 'workdays':\n        emptyItem = { work_time: '', employer_fio: '', location_name: location };\n        break;\n    }\n    \n    setCurrentItem(emptyItem);\n    setShowModal(true);\n  };\n\n  const handleEdit = (item) => {\n    setModalMode('edit');\n    setCurrentItem(item);\n    setShowModal(true);\n  };\n\n  const handleDelete = (id) => {\n    // In a real application, this would be an API call\n    setData(data.filter(item => item.id !== id));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (modalMode === 'add') {\n      // In a real application, this would be an API call\n      const newItem = { ...currentItem, id: data.length + 1 };\n      setData([...data, newItem]);\n    } else {\n      // In a real application, this would be an API call\n      setData(data.map(item => item.id === currentItem.id ? currentItem : item));\n    }\n    \n    setShowModal(false);\n  };\n\n  // Render functions\n  const renderCategorySelection = () => (\n    <div className=\"admin-selection\">\n      <div className=\"admin-option\" onClick={() => { setCategory('employers'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Работники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('residents'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Постоянники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('events'); setStep('location'); }}>\n        <Calendar className=\"admin-option-icon\" />\n        События\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('products'); setStep('location'); }}>\n        <Book className=\"admin-option-icon\" />\n        Методички\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('workdays'); setStep('location'); }}>\n        <Clock className=\"admin-option-icon\" />\n        Расписание\n      </div>\n    </div>\n  );\n\n  const renderLocationSelection = () => (\n    <>\n      <button className=\"admin-back-button\" onClick={() => { setStep('category'); setCategory(null); }}>\n        <ArrowLeft size={16} /> Назад\n      </button>\n      \n      <div className=\"admin-location-selection\">\n        <div className=\"admin-location-card\" onClick={() => { setLocation('Проспект мира'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80\" \n            alt=\"Проспект мира\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Проспект мира</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Страстная'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1374&q=80\" \n            alt=\"Страстная\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Страстная</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { setLocation('Никольская'); setStep('data'); }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1525268323446-0505b6fe7778?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1472&q=80\" \n            alt=\"Никольская\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Никольская</div>\n        </div>\n      </div>\n    </>\n  );\n\n  const renderDataView = () => {\n    if (loading) return <div>Загрузка...</div>;\n    if (error) return <div>{error}</div>;\n    \n    return (\n      <>\n        <div className=\"admin-back-button\" onClick={() => { setStep('location'); setLocation(null); }}>\n          <ArrowLeft size={16} /> Назад\n        </div>\n        \n        <div className=\"admin-location-title\">{location}</div>\n        \n        <div className=\"admin-data-container\">\n          <div className=\"admin-search-bar\">\n            <input \n              type=\"text\" \n              placeholder={category === 'workdays' ? \"Поиск по имени сотрудника...\" : \"Поиск...\"}\n              className=\"admin-search-input\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            \n            {(category === 'events' || category === 'workdays') && (\n              <input \n                type=\"date\" \n                className=\"admin-date-input\"\n                value={dateFilter}\n                onChange={(e) => setDateFilter(e.target.value)}\n              />\n            )}\n          </div>\n          \n          <button className=\"admin-add-button\" onClick={handleAdd}>\n            <Plus size={16} /> Добавить\n          </button>\n          \n          {renderDataContent()}\n          \n          {totalPages > 1 && (\n            <div className=\"admin-pagination\">\n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === 1}\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n              >\n                <ChevronLeft size={16} />\n              </button>\n              \n              {Array.from({ length: totalPages }, (_, i) => (\n                <button \n                  key={i}\n                  className={`admin-pagination-button ${currentPage === i + 1 ? 'active' : ''}`}\n                  onClick={() => setCurrentPage(i + 1)}\n                >\n                  {i + 1}\n                </button>\n              ))}\n              \n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === totalPages}\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n              >\n                <ChevronRight size={16} />\n              </button>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderDataContent = () => {\n    switch(category) {\n      case 'employers':\n        return renderEmployersTable();\n      case 'events':\n        return renderEventsTable();\n      case 'residents':\n        return renderResidentsCards();\n      case 'products':\n        return renderProductsTable();\n      case 'workdays':\n        return renderWorkdaysTable();\n      default:\n        return null;\n    }\n  };\n\n  const renderEmployersTable = () => (\n    <div>\n      {currentItems.map((employer) => (\n        <div key={employer.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{employer.fio}</div>\n          <div className=\"admin-table-cell\">{employer.work_type}</div>\n          <div className=\"admin-table-cell\">{employer.email}</div>\n          <div className=\"admin-table-cell\">{employer.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(employer)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(employer.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderEventsTable = () => (\n    <div>\n      {currentItems.map((event) => (\n        <div key={event.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{event.name}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-{new Date(new Date(event.date_start).getTime() + 4 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>\n          <div className=\"admin-table-cell\">{event.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(event)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(event.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderResidentsCards = () => (\n    <div className=\"admin-cards-container\">\n      {currentItems.map((resident) => (\n        <div key={resident.id} className=\"admin-card\">\n          <div className=\"admin-card-header\">{resident.fio}</div>\n          <div className=\"admin-card-body\">\n            <p>Скидка: {resident.discount_value}%</p>\n            <p>Локация: {resident.location_name}</p>\n          </div>\n          <div className=\"admin-card-footer\">\n            <div className=\"admin-card-action admin-card-edit\" onClick={() => handleEdit(resident)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-card-action admin-card-delete\" onClick={() => handleDelete(resident.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderProductsTable = () => (\n    <div>\n      {currentItems.map((product) => (\n        <div key={product.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{product.name}</div>\n          <div className=\"admin-table-cell\">{product.type_product}</div>\n          <div className=\"admin-table-cell\">{product.description.substring(0, 50)}...</div>\n          <div className=\"admin-table-cell\">{product.location_name}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(product)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(product.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderWorkdaysTable = () => (\n    <div>\n      {currentItems.map((workday) => (\n        <div key={workday.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{workday.employer_fio}</div>\n          <div className=\"admin-table-cell\">{workday.location_name}</div>\n          <div className=\"admin-table-cell\">{new Date(workday.work_time).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">\n            {new Date(workday.work_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}-\n            {new Date(new Date(workday.work_time).getTime() + 8 * 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n          </div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(workday)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(workday.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderModal = () => {\n    if (!showModal) return null;\n    \n    return (\n      <div className=\"admin-modal\">\n        <div className=\"admin-modal-content\">\n          <div className=\"admin-modal-header\">\n            <h2>{modalMode === 'add' ? 'Добавить' : 'Редактировать'}</h2>\n            <button className=\"admin-modal-close\" onClick={() => setShowModal(false)}>×</button>\n          </div>\n          \n          <form className=\"admin-form\" onSubmit={handleSubmit}>\n            {renderFormFields()}\n            \n            <button type=\"submit\" className=\"admin-form-submit\">\n              {modalMode === 'add' ? 'Добавить' : 'Сохранить'}\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFormFields = () => {\n    switch(category) {\n      case 'employers':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Email</label>\n              <input \n                type=\"email\" \n                className=\"admin-form-input\"\n                value={currentItem?.email || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, email: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Должность</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_type || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_type: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Контакты</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.contacts?.join(', ') || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, contacts: e.target.value.split(', ') })}\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n              />\n            </div>\n          </>\n        );\n        \n      case 'events':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.date_start ? new Date(currentItem.date_start).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, date_start: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'residents':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Скидка (%)</label>\n              <input \n                type=\"number\" \n                className=\"admin-form-input\"\n                value={currentItem?.discount_value || 0}\n                onChange={(e) => setCurrentItem({ ...currentItem, discount_value: parseInt(e.target.value) })}\n                required\n                min=\"0\"\n                max=\"100\"\n              />\n            </div>\n          </>\n        );\n        \n      case 'products':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Тип</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.type_product || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, type_product: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Компоненты (JSON)</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={JSON.stringify(currentItem?.components || {}, null, 2)}\n                onChange={(e) => {\n                  try {\n                    const components = JSON.parse(e.target.value);\n                    setCurrentItem({ ...currentItem, components });\n                  } catch (err) {\n                    // Invalid JSON, do nothing\n                  }\n                }}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'workdays':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО сотрудника</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.employer_fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, employer_fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_time ? new Date(currentItem.work_time).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_time: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <div className=\"admin-header\">\n        Административная панель\n      </div>\n      \n      {step === 'category' && renderCategorySelection()}\n      {step === 'location' && renderLocationSelection()}\n      {step === 'data' && renderDataView()}\n      \n      {renderModal()}\n    </div>\n  );\n};\n\nexport default AdminPanel;\n\n*/\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport './css/admin.css';\nimport axios from 'axios';\nimport { \n  User, ArrowLeft, Calendar, Book, Clock, \n  Plus, X, Edit, ChevronLeft, ChevronRight, Upload\n} from 'lucide-react';\n\n// Constants for locations\nconst LOCATIONS = {\n  'Проспект мира': 1,\n  'Никольская': 2,\n  'Страстной бульвар': 3\n};\n\nconst LOCATIONS_BY_ID = {\n  1: 'Проспект мира',\n  2: 'Никольская',\n  3: 'Страстной бульвар'\n};\n\nconst BASE_URL = 'http://176.114.90.207:8000';\n\n// Main component\nconst AdminPanel = () => {\n  // States\n  const [step, setStep] = useState('category');\n  const [category, setCategory] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [locationId, setLocationId] = useState(null);\n  \n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  \n  const [showModal, setShowModal] = useState(false);\n  const [modalMode, setModalMode] = useState('add');\n  const [currentItem, setCurrentItem] = useState(null);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n\n  // Handle photo upload\n  const handlePhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedPhoto(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPhotoPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const uploadPhoto = async (category, id) => {\n    if (!selectedPhoto) return;\n\n    const formData = new FormData();\n    formData.append('photo', selectedPhoto);\n\n    try {\n      await axios.post(`${BASE_URL}/files/${category}/${id}/upload-photo`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    } catch (error) {\n      console.error('Error uploading photo:', error);\n    }\n  };\n\n  // Fetch data based on category and location\n  useEffect(() => {\n    if (category && locationId) {\n      fetchData();\n    }\n  }, [category, locationId, currentPage]);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      let response;\n      const params = { page: currentPage, limit: itemsPerPage };\n      \n      switch(category) {\n        case 'employers':\n          response = await axios.get(`${BASE_URL}/employers/get_list_employers/${locationId}`, { params });\n          break;\n        case 'events':\n          response = await axios.get(`${BASE_URL}/events/get_events`, { \n            params: { ...params, location_id: locationId }\n          });\n          break;\n        case 'residents':\n          response = await axios.get(`${BASE_URL}/residents/get_list_residents`, { \n            params: { ...params, location_id: locationId }\n          });\n          break;\n        case 'products':\n          response = await axios.get(`${BASE_URL}/cards/get_list_products`, { \n            params: { ...params, location_id: locationId }\n          });\n          break;\n        case 'workdays':\n          response = await axios.get(`${BASE_URL}/workdays/get_list_workdays`, { \n            params: { ...params, location_id: locationId }\n          });\n          break;\n      }\n      \n      setData(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Ошибка при загрузке данных');\n      setLoading(false);\n      console.error('Error fetching data:', err);\n    }\n  };\n\n  // Filter data based on search term\n  const filteredData = data.filter(item => {\n    const searchLower = searchTerm.toLowerCase();\n    \n    if (category === 'employers' || category === 'residents') {\n      return item.fio.toLowerCase().includes(searchLower);\n    } else if (category === 'events' || category === 'products') {\n      return item.name.toLowerCase().includes(searchLower);\n    } else if (category === 'workdays') {\n      return item.employer_fio.toLowerCase().includes(searchLower);\n    }\n    \n    return true;\n  }).filter(item => {\n    if (dateFilter && (category === 'events' || category === 'workdays')) {\n      const itemDate = new Date(category === 'events' ? item.date_start : item.work_time);\n      const filterDate = new Date(dateFilter);\n      return itemDate.toDateString() === filterDate.toDateString();\n    }\n    return true;\n  });\n\n  // Pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n\n  // Handle add/edit/delete\n  const handleAdd = () => {\n    setModalMode('add');\n    setSelectedPhoto(null);\n    setPhotoPreview(null);\n    \n    let emptyItem = {\n      location_id: locationId\n    };\n    \n    switch(category) {\n      case 'employers':\n        emptyItem = { \n          ...emptyItem,\n          email: '', \n          fio: '', \n          work_type: '', \n          roles: ['employee'], \n          contacts: [], \n          description: ''\n        };\n        break;\n      case 'events':\n        emptyItem = { \n          ...emptyItem,\n          name: '', \n          date_start: '', \n          description: ''\n        };\n        break;\n      case 'residents':\n        emptyItem = { \n          ...emptyItem,\n          fio: '', \n          discount_value: 0, \n          description: ''\n        };\n        break;\n      case 'products':\n        emptyItem = { \n          ...emptyItem,\n          name: '', \n          description: '', \n          category: ''\n        };\n        break;\n      case 'workdays':\n        emptyItem = { \n          ...emptyItem,\n          work_time: '', \n          employer_id: 0\n        };\n        break;\n    }\n    \n    setCurrentItem(emptyItem);\n    setShowModal(true);\n  };\n\n  const handleEdit = (item) => {\n    setModalMode('edit');\n    setSelectedPhoto(null);\n    setPhotoPreview(null);\n    setCurrentItem({ ...item, location_id: locationId });\n    setShowModal(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const params = { id };\n      if (category === 'employers') {\n        params.employer_id = id;\n        delete params.id;\n      }\n\n      await axios.delete(`${BASE_URL}/${category === 'products' ? 'cards/admin/delete_product' : \n        category === 'employers' ? 'employers/delete_employer' :\n        category === 'events' ? 'events/delete_event' :\n        category === 'residents' ? 'residents/delete_resident' :\n        'workdays/delete_workday'}`, { params });\n      \n      await fetchData();\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      let endpoint = '';\n      let payload = { ...currentItem };\n      \n      switch(category) {\n        case 'employers':\n          endpoint = '/auth/admin/register';\n          if (modalMode === 'edit') {\n            endpoint = '/employers/edit_employer';\n          }\n          break;\n        case 'events':\n          endpoint = '/events/create_event';\n          break;\n        case 'residents':\n          endpoint = '/residents/add_resident';\n          break;\n        case 'products':\n          endpoint = '/cards/admin/add_card';\n          break;\n        case 'workdays':\n          endpoint = '/workdays/add_workday';\n          break;\n      }\n      \n      let response;\n      if (modalMode === 'add') {\n        response = await axios.post(`${BASE_URL}${endpoint}`, payload);\n      } else {\n        response = await axios.put(`${BASE_URL}${endpoint}`, payload);\n      }\n      \n      if (selectedPhoto && response.data.id) {\n        await uploadPhoto(category, response.data.id);\n      }\n      \n      await fetchData();\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error saving item:', error);\n    }\n  };\n\n  // Render functions\n  const renderCategorySelection = () => (\n    <div className=\"admin-selection\">\n      <div className=\"admin-option\" onClick={() => { setCategory('employers'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Работники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('residents'); setStep('location'); }}>\n        <User className=\"admin-option-icon\" />\n        Постоянники\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('events'); setStep('location'); }}>\n        <Calendar className=\"admin-option-icon\" />\n        События\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('products'); setStep('location'); }}>\n        <Book className=\"admin-option-icon\" />\n        Методички\n      </div>\n      <div className=\"admin-option\" onClick={() => { setCategory('workdays'); setStep('location'); }}>\n        <Clock className=\"admin-option-icon\" />\n        Расписание\n      </div>\n    </div>\n  );\n\n  const renderLocationSelection = () => (\n    <>\n      <button className=\"admin-back-button\" onClick={() => { setStep('category'); setCategory(null); }}>\n        <ArrowLeft size={16} /> Назад\n      </button>\n      \n      <div className=\"admin-location-selection\">\n        <div className=\"admin-location-card\" onClick={() => { \n          setLocation('Проспект мира'); \n          setLocationId(LOCATIONS['Проспект мира']); \n          setStep('data'); \n        }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80\" \n            alt=\"Проспект мира\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Проспект мира</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { \n          setLocation('Никольская'); \n          setLocationId(LOCATIONS['Никольская']); \n          setStep('data'); \n        }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1374&q=80\" \n            alt=\"Никольская\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Никольская</div>\n        </div>\n        \n        <div className=\"admin-location-card\" onClick={() => { \n          setLocation('Страстной бульвар'); \n          setLocationId(LOCATIONS['Страстной бульвар']); \n          setStep('data'); \n        }}>\n          <img \n            src=\"https://images.unsplash.com/photo-1525268323446-0505b6fe7778?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1472&q=80\" \n            alt=\"Страстной бульвар\" \n            className=\"admin-location-image\" \n          />\n          <div className=\"admin-location-name\">Страстной бульвар</div>\n        </div>\n      </div>\n    </>\n  );\n\n  const renderDataView = () => {\n    if (loading) return <div>Загрузка...</div>;\n    if (error) return <div>{error}</div>;\n    \n    return (\n      <>\n        <div className=\"admin-back-button\" onClick={() => { setStep('location'); setLocation(null); }}>\n          <ArrowLeft size={16} /> Назад\n        </div>\n        \n        <div className=\"admin-location-title\">{location}</div>\n        \n        <div className=\"admin-data-container\">\n          <div className=\"admin-search-bar\">\n            <input \n              type=\"text\" \n              placeholder={category === 'workdays' ? \"Поиск по имени сотрудника...\" : \"Поиск...\"}\n              className=\"admin-search-input\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            \n            {(category === 'events' || category === 'workdays') && (\n              <input \n                type=\"date\" \n                className=\"admin-date-input\"\n                value={dateFilter}\n                onChange={(e) => setDateFilter(e.target.value)}\n              />\n            )}\n          </div>\n          \n          <button className=\"admin-add-button\" onClick={handleAdd}>\n            <Plus size={16} /> Добавить\n          </button>\n          \n          {renderDataContent()}\n          \n          {totalPages > 1 && (\n            <div className=\"admin-pagination\">\n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === 1}\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n              >\n                <ChevronLeft size={16} />\n              </button>\n              \n              {Array.from({ length: totalPages }, (_, i) => (\n                <button \n                  key={i}\n                  className={`admin-pagination-button ${currentPage === i + 1 ? 'active' : ''}`}\n                  onClick={() => setCurrentPage(i + 1)}\n                >\n                  {i + 1}\n                </button>\n              ))}\n              \n              <button \n                className=\"admin-pagination-button\"\n                disabled={currentPage === totalPages}\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n              >\n                <ChevronRight size={16} />\n              </button>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderDataContent = () => {\n    switch(category) {\n      case 'employers':\n        return renderEmployersTable();\n      case 'events':\n        return renderEventsTable();\n      case 'residents':\n        return renderResidentsCards();\n      case 'products':\n        return renderProductsTable();\n      case 'workdays':\n        return renderWorkdaysTable();\n      default:\n        return null;\n    }\n  };\n\n  const renderEmployersTable = () => (\n    <div>\n      {currentItems.map((employer) => (\n        <div key={employer.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">\n            {employer.photo ? (\n              <img src={`${BASE_URL}/files/employers/${employer.id}/get-photo`} alt={employer.fio} className=\"admin-table-cell-photo\" />\n            ) : (\n              <User size={40} />\n            )}\n            {employer.fio}\n          </div>\n          <div className=\"admin-table-cell\">{employer.work_type}</div>\n          <div className=\"admin-table-cell\">{employer.email}</div>\n          <div className=\"admin-table-cell\">{LOCATIONS_BY_ID[employer.location_id]}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(employer)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(employer.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderEventsTable = () => (\n    <div>\n      {currentItems.map((event) => (\n        <div key={event.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{event.name}</div>\n          <div className=\"admin-table-cell\">{new Date(event.date_start).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">\n            {new Date(event.date_start).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n          </div>\n          <div className=\"admin-table-cell\">{LOCATIONS_BY_ID[event.location_id]}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(event)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(event.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderResidentsCards = () => (\n    <div className=\"admin-cards-container\">\n      {currentItems.map((resident) => (\n        <div key={resident.id} className=\"admin-card\">\n          {resident.photo ? (\n            <img src={`${BASE_URL}/files/residents/${resident.id}/get-photo`} alt={resident.fio} className=\"admin-card-photo\" />\n          ) : (\n            <div className=\"admin-card-photo\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: '#2a2a2a' }}>\n              <User size={64} />\n            </div>\n          )}\n          <div className=\"admin-card-header\">{resident.fio}</div>\n          <div className=\"admin-card-body\">\n            <p>Скидка: {resident.discount_value}%</p>\n            <p>Локация: {LOCATIONS_BY_ID[resident.location_id]}</p>\n            <p className=\"admin-card-description\">{resident.description}</p>\n          </div>\n          <div className=\"admin-card-footer\">\n            <div className=\"admin-card-action admin-card-edit\" onClick={() => handleEdit(resident)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-card-action admin-card-delete\" onClick={() => handleDelete(resident.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderProductsTable = () => (\n    <div>\n      {currentItems.map((product) => (\n        <div key={product.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">\n            {product.photo ? (\n              <img src={`${BASE_URL}/files/products/${product.id}/get-photo`} alt={product.name} className=\"admin-table-cell-photo\" />\n            ) : (\n              <Book size={40} />\n            )}\n            {product.name}\n          </div>\n          <div className=\"admin-table-cell\">{product.category}</div>\n          <div className=\"admin-table-cell\">{product.description.substring(0, 50)}...</div>\n          <div className=\"admin-table-cell\">{LOCATIONS_BY_ID[product.location_id]}</div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(product)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(product.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderWorkdaysTable = () => (\n    <div>\n      {currentItems.map((workday) => (\n        <div key={workday.id} className=\"admin-table-row\">\n          <div className=\"admin-table-cell\">{workday.employer_fio}</div>\n          <div className=\"admin-table-cell\">{LOCATIONS_BY_ID[workday.location_id]}</div>\n          <div className=\"admin-table-cell\">{new Date(workday.work_time).toLocaleDateString()}</div>\n          <div className=\"admin-table-cell\">\n            {new Date(workday.work_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n          </div>\n          <div className=\"admin-table-actions\">\n            <div className=\"admin-action-button admin-edit-button\" onClick={() => handleEdit(workday)}>\n              <Edit size={16} />\n            </div>\n            <div className=\"admin-action-button admin-delete-button\" onClick={() => handleDelete(workday.id)}>\n              <X size={16} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderPhotoUpload = () => (\n    <div className=\"admin-photo-upload\">\n      <label className=\"admin-form-label\">Фотография</label>\n      {photoPreview && (\n        <img src={photoPreview} alt=\"Preview\" className=\"admin-photo-preview\" />\n      )}\n      <label className=\"admin-photo-upload-button\">\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handlePhotoChange}\n          style={{ display: 'none' }}\n        />\n        <Upload size={16} style={{ marginRight: '8px' }} />\n        {photoPreview ? 'Изменить фото' : 'Загрузить фото'}\n      </label>\n    </div>\n  );\n\n  const renderModal = () => {\n    if (!showModal) return null;\n    \n    return (\n      <div className=\"admin-modal\">\n        <div className=\"admin-modal-content\">\n          <div className=\"admin-modal-header\">\n            <h2>{modalMode === 'add' ? 'Добавить' : 'Редактировать'}</h2>\n            <button className=\"admin-modal-close\" onClick={() => setShowModal(false)}>×</button>\n          </div>\n          \n          <form className=\"admin-form\" onSubmit={handleSubmit}>\n            {renderFormFields()}\n            \n            {(category === 'employers' || category === 'residents' || category === 'products') && renderPhotoUpload()}\n            \n            <button type=\"submit\" className=\"admin-form-submit\">\n              {modalMode === 'add' ? 'Добавить' : 'Сохранить'}\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFormFields = () => {\n    switch(category) {\n      case 'employers':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Email</label>\n              <input \n                type=\"email\" \n                className=\"admin-form-input\"\n                value={currentItem?.email || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, email: e.target.value })}\n                required\n              />\n            </div>\n            \n            {modalMode === 'add' && (\n              <div className=\"admin-form-group\">\n                <label className=\"admin-form-label\">Пароль</label>\n                <input \n                  type=\"password\" \n                  className=\"admin-form-input\"\n                  value={currentItem?.hashed_password || ''}\n                  onChange={(e) => setCurrentItem({ ...currentItem, hashed_password: e.target.value })}\n                  required\n                />\n              </div>\n            )}\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Должность</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_type || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_type: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Контакты</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.contacts?.join(', ') || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, contacts: e.target.value.split(', ') })}\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n              />\n            </div>\n          </>\n        );\n        \n      case 'events':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.date_start ? new Date(currentItem.date_start).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, date_start: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'residents':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ФИО</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.fio || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, fio: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Скидка (%)</label>\n              <input \n                type=\"number\" \n                className=\"admin-form-input\"\n                value={currentItem?.discount_value || 0}\n                onChange={(e) => setCurrentItem({ ...currentItem, discount_value: parseInt(e.target.value) })}\n                required\n                min=\"0\"\n                max=\"100\"\n              />\n            </div>\n\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n              />\n            </div>\n          </>\n        );\n        \n      case 'products':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Название</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.name || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, name: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Категория</label>\n              <input \n                type=\"text\" \n                className=\"admin-form-input\"\n                value={currentItem?.category || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, category: e.target.value })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Описание</label>\n              <textarea \n                className=\"admin-form-textarea\"\n                value={currentItem?.description || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, description: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      case 'workdays':\n        return (\n          <>\n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">ID сотрудника</label>\n              <input \n                type=\"number\" \n                className=\"admin-form-input\"\n                value={currentItem?.employer_id || ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, employer_id: parseInt(e.target.value) })}\n                required\n              />\n            </div>\n            \n            <div className=\"admin-form-group\">\n              <label className=\"admin-form-label\">Дата и время начала</label>\n              <input \n                type=\"datetime-local\" \n                className=\"admin-form-input\"\n                value={currentItem?.work_time ? new Date(currentItem.work_time).toISOString().slice(0, 16) : ''}\n                onChange={(e) => setCurrentItem({ ...currentItem, work_time: e.target.value })}\n                required\n              />\n            </div>\n          </>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <div className=\"admin-header\">\n        Административная панель\n      </div>\n      \n      {step === 'category' && renderCategorySelection()}\n      {step === 'location' && renderLocationSelection()}\n      {step === 'data' && renderDataView()}\n      \n      {renderModal()}\n    </div>\n  );\n};\n\nexport default AdminPanel;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}