{"ast":null,"code":"var _jsxFileName = \"/home/f1alka/front_fut/front2.0/src/pages/LoginPage.jsx\";\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './css/RegisterPage.css';\n\n// const LoginPage = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"handleSubmit вызван\");\n\n//     setError(null);\n//     setLoading(true);\n\n//     console.log('Отправка запроса на сервер...');\n//     console.log('Данные для отправки:', { username, password });\n\n//     try {\n//       const formData = new URLSearchParams();\n//       formData.append('username', username);\n//       formData.append('password', password);\n\n//       const response = await fetch('http://172.20.10.2:8000/auth/token', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n//         body: formData,\n//       });\n\n//       console.log(\"Ответ от сервера:\", response);\n\n//       if (!response.ok) {\n//         const errorMsg = await response.text();\n//         console.log(\"Ошибка в ответе:\", errorMsg);\n//         throw new Error(errorMsg || 'Ошибка авторизации');\n//       }\n\n//       const data = await response.json();\n//       console.log(\"Полученные данные:\", data);\n\n//       const token = data.access_token || data.token;\n//       if (!token) {\n//         throw new Error('Сервер не вернул токен');\n//       }\n\n//       localStorage.setItem('token', token);\n//       navigate('/profile');  // Перенаправляем в профиль\n\n//     } catch (err) {\n//       console.error(\"Ошибка при запросе:\", err);\n//       setError(err.message || 'Ошибка соединения с сервером');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleSubmit} className=\"login-form\">\n//         <h2>Вход</h2>\n//         {error && <p className=\"error\">{error}</p>}\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Введите логин\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Введите пароль\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n\n//         <button type=\"submit\" disabled={loading} className=\"login-button\">\n//           {loading ? 'Загрузка...' : 'Войти'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/RegisterPage.css';\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"handleSubmit вызван\");\n    setError(null);\n    setLoading(true);\n    try {\n      // Здесь мы просто логируем данные пользователя\n      console.log('Данные для отправки:', {\n        username,\n        password\n      });\n\n      // Просто выполняем редирект на главную страницу\n      navigate('/profile'); // Перенаправляем на страницу home\n    } catch (err) {\n      console.error(\"Ошибка при обработке данных:\", err);\n      setError(err.message || 'Ошибка');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"\\u0412\\u0445\\u043E\\u0434\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u0438\\u043D\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    className: \"login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, loading ? 'Загрузка...' : 'Войти')));\n};\nexport default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","LoginPage","username","setUsername","password","setPassword","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","console","log","err","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled"],"sources":["/home/f1alka/front_fut/front2.0/src/pages/LoginPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './css/RegisterPage.css';\n\n// const LoginPage = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"handleSubmit вызван\");\n\n//     setError(null);\n//     setLoading(true);\n\n//     console.log('Отправка запроса на сервер...');\n//     console.log('Данные для отправки:', { username, password });\n\n//     try {\n//       const formData = new URLSearchParams();\n//       formData.append('username', username);\n//       formData.append('password', password);\n\n//       const response = await fetch('http://172.20.10.2:8000/auth/token', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n//         body: formData,\n//       });\n\n//       console.log(\"Ответ от сервера:\", response);\n\n//       if (!response.ok) {\n//         const errorMsg = await response.text();\n//         console.log(\"Ошибка в ответе:\", errorMsg);\n//         throw new Error(errorMsg || 'Ошибка авторизации');\n//       }\n\n//       const data = await response.json();\n//       console.log(\"Полученные данные:\", data);\n\n//       const token = data.access_token || data.token;\n//       if (!token) {\n//         throw new Error('Сервер не вернул токен');\n//       }\n\n//       localStorage.setItem('token', token);\n//       navigate('/profile');  // Перенаправляем в профиль\n\n//     } catch (err) {\n//       console.error(\"Ошибка при запросе:\", err);\n//       setError(err.message || 'Ошибка соединения с сервером');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleSubmit} className=\"login-form\">\n//         <h2>Вход</h2>\n//         {error && <p className=\"error\">{error}</p>}\n\n//         <input\n//           type=\"text\"\n//           placeholder=\"Введите логин\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Введите пароль\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n\n//         <button type=\"submit\" disabled={loading} className=\"login-button\">\n//           {loading ? 'Загрузка...' : 'Войти'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/RegisterPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"handleSubmit вызван\");\n\n    setError(null);\n    setLoading(true);\n\n  \n    try {\n      // Здесь мы просто логируем данные пользователя\n      console.log('Данные для отправки:', { username, password });\n\n      // Просто выполняем редирект на главную страницу\n      navigate('/profile');  // Перенаправляем на страницу home\n\n    } catch (err) {\n      console.error(\"Ошибка при обработке данных:\", err);\n      setError(err.message || 'Ошибка');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <h2>Вход</h2>\n        {error && <p className=\"error\">{error}</p>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Введите логин\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Введите пароль\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n\n        <button type=\"submit\" disabled={loading} className=\"login-button\">\n          {loading ? 'Загрузка...' : 'Войти'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}